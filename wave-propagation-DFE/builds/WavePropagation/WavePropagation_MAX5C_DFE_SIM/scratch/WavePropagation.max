#ifdef MAXCOMPILER_VERSION_INFO
#define MAXCOMPILER_VERSION_INFO_PRESENT 1
#define MAXFILE_MAXCOMPILER_VERSION_YEAR         2019
#define MAXFILE_MAXCOMPILER_VERSION_NUM          2
#define MAXFILE_MAXCOMPILER_VERSION_POINT        0
#define MAXFILE_MAXCOMPILER_VERSION_PATCH        ""
#define MAXFILE_MAXCOMPILER_VERSION_REV          "f5495a7"
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_DATE "2019-10-10"
#define MAXFILE_MAXCOMPILER_VERSION_RELEASE_MODE true
#endif

#ifdef MAXFILE_BUILD_INFO
#define MAXFILE_BUILD_INFO_PRESENT 1
#define MAXFILE_BUILD_NAME "WavePropagation"
#define MAXFILE_BUILD_DIR  "/home/maxeler/wave_propagation/wave-propagation-DFE/builds/WavePropagation/WavePropagation_MAX5C_DFE_SIM"
#define MAXFILE_BUILD_DATE  20200729
#define MAXFILE_BUILD_REV   1
#endif

#ifdef PARAM
#define PARAM_PRESENT 1
PARAM(DYNAMIC_CLOCKS_ENABLED, 0)
PARAM(APP_ID, 0)
PARAM(REV_ID, 0)
PARAM(CHAIN_LENGTH, 169)
PARAM(IS_SIMULATION, 1)
PARAM(MEC_SUPPORTED, 1)
PARAM(PCIE_SLAVE_STREAMING, 0)
PARAM(PCIE_ALIGNMENT, 16)
PARAM(NUM_IFPGA_LINKS, 0)
#endif

#ifdef STRING_PARAM
#define STRING_PARAM_PRESENT 1
STRING_PARAM(BOARD_MODEL, "MAX5_LIMA")
#endif



#ifdef INCLUDE_GENERATED_CPP_HEADERS
#include "WavePropagationKernel.h"
#endif



#ifdef ENGINE_PARAMETERS
#define ENGINE_PARAMETERS_PRESENT 1
ENGINE_PARAMETERS(DFEModel, <DFEModel>, MAIA)
ENGINE_PARAMETERS(maxFileName, <string>, "WavePropagation")
ENGINE_PARAMETERS(target, Target, DFE_SIM)
ENGINE_PARAMETERS(enableMPCX, <boolean>, false)
ENGINE_PARAMETERS(MPPRStartCT, <integer>, 1)
ENGINE_PARAMETERS(MPPREndCT, <integer>, 1)
ENGINE_PARAMETERS(MPPRThreads, <integer>, 1)
ENGINE_PARAMETERS(MPPRRetryThreshold, <integer>, 0)
#endif




#ifdef MANAGER_NODE
#define MANAGER_NODE_PRESENT 1
MANAGER_NODE(WavePropagationKernel, Kernel)
MANAGER_NODE(velocity, PCIe_From_Host)
MANAGER_NODE(absorb, PCIe_From_Host)
MANAGER_NODE(prev, PCIe_From_Host)
MANAGER_NODE(density, PCIe_From_Host)
MANAGER_NODE(curr, PCIe_From_Host)
MANAGER_NODE(nxt, PCIe_To_Host)
MANAGER_NODE(Stream_1, DualAspectMux)
MANAGER_NODE(Stream_4, DualAspectMux)
MANAGER_NODE(Stream_7, DualAspectMux)
MANAGER_NODE(Stream_10, DualAspectMux)
MANAGER_NODE(Stream_13, DualAspectMux)
MANAGER_NODE(Stream_17, DualAspectReg)
MANAGER_NODE(Stream_42, StreamPullPushAdapter)
MANAGER_NODE(Stream_36, Fifo)
MANAGER_NODE(Stream_20, Fifo)
MANAGER_NODE(Stream_28, Fifo)
MANAGER_NODE(Stream_32, Fifo)
MANAGER_NODE(Stream_24, Fifo)
MANAGER_NODE(Stream_22, Fifo)
MANAGER_NODE(Stream_26, Fifo)
MANAGER_NODE(Stream_30, Fifo)
MANAGER_NODE(Stream_34, Fifo)
MANAGER_NODE(Stream_38, Fifo)
MANAGER_NODE(Stream_40, Fifo)
#endif

#ifdef MANAGER_NODE_IO
#define MANAGER_NODE_IO_PRESENT 1
MANAGER_NODE_IO(WavePropagationKernel, velocity, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(WavePropagationKernel, absorb, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(WavePropagationKernel, prev, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(WavePropagationKernel, density, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(WavePropagationKernel, curr, IN, STREAM, 32, PULL)
MANAGER_NODE_IO(WavePropagationKernel, nxt, OUT, STREAM, 32, PUSH)
MANAGER_NODE_IO(velocity, velocity, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(absorb, absorb, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(prev, prev, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(density, density, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(curr, curr, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(nxt, nxt, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_1, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_1, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_4, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_4, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_7, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_7, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_10, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_10, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_13, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_13, output, OUT, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_17, input, IN, PCIE, 32, PULL)
MANAGER_NODE_IO(Stream_17, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_42, input, IN, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_42, output, OUT, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_36, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_36, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_20, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_20, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_28, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_28, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_32, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_32, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_24, input, IN, PCIE, 128, PUSH)
MANAGER_NODE_IO(Stream_24, output, OUT, PCIE, 128, PULL)
MANAGER_NODE_IO(Stream_22, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_22, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_26, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_26, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_30, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_30, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_34, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_34, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_38, input, IN, PCIE, 32, PUSH)
MANAGER_NODE_IO(Stream_38, output, OUT, STREAM, 32, PULL)
MANAGER_NODE_IO(Stream_40, input, IN, STREAM, 32, PUSH)
MANAGER_NODE_IO(Stream_40, output, OUT, PCIE, 32, PULL)
#endif

#ifdef MANAGER_STREAM
#define MANAGER_STREAM_PRESENT 1
MANAGER_STREAM(velocity, velocity, Stream_20, input, 128)
MANAGER_STREAM(absorb, absorb, Stream_24, input, 128)
MANAGER_STREAM(prev, prev, Stream_28, input, 128)
MANAGER_STREAM(density, density, Stream_32, input, 128)
MANAGER_STREAM(curr, curr, Stream_36, input, 128)
MANAGER_STREAM(WavePropagationKernel, nxt, Stream_40, input, 32)
MANAGER_STREAM(Stream_1, output, Stream_22, input, 32)
MANAGER_STREAM(Stream_4, output, Stream_26, input, 32)
MANAGER_STREAM(Stream_7, output, Stream_30, input, 32)
MANAGER_STREAM(Stream_10, output, Stream_34, input, 32)
MANAGER_STREAM(Stream_13, output, Stream_38, input, 32)
MANAGER_STREAM(Stream_17, output, Stream_42, input, 128)
MANAGER_STREAM(Stream_42, output, nxt, nxt, 128)
MANAGER_STREAM(Stream_36, output, Stream_13, input, 128)
MANAGER_STREAM(Stream_20, output, Stream_1, input, 128)
MANAGER_STREAM(Stream_28, output, Stream_7, input, 128)
MANAGER_STREAM(Stream_32, output, Stream_10, input, 128)
MANAGER_STREAM(Stream_24, output, Stream_4, input, 128)
MANAGER_STREAM(Stream_22, output, WavePropagationKernel, velocity, 32)
MANAGER_STREAM(Stream_26, output, WavePropagationKernel, absorb, 32)
MANAGER_STREAM(Stream_30, output, WavePropagationKernel, prev, 32)
MANAGER_STREAM(Stream_34, output, WavePropagationKernel, density, 32)
MANAGER_STREAM(Stream_38, output, WavePropagationKernel, curr, 32)
MANAGER_STREAM(Stream_40, output, Stream_17, input, 32)
#endif

#ifdef MANAGER_NODE_STACK_TRACE
#define MANAGER_NODE_STACK_TRACE_PRESENT 1
MANAGER_NODE_STACK_TRACE(WavePropagationKernel, "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(velocity, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamFromCPU(ManagerPCIe.java:58)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:29)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(absorb, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamFromCPU(ManagerPCIe.java:58)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:30)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(prev, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamFromCPU(ManagerPCIe.java:58)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:31)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(density, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamFromCPU(ManagerPCIe.java:58)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:32)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(curr, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamFromCPU(ManagerPCIe.java:58)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:33)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(nxt, "com.maxeler.maxcompiler.v2.managers.custom.api.ManagerPCIe.addStreamToCPU(ManagerPCIe.java:29)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:34)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
MANAGER_NODE_STACK_TRACE(Stream_1, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_4, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_7, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_10, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_13, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_17, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_42, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_36, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_20, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_28, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_32, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_24, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_22, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_26, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_30, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_34, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_38, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
MANAGER_NODE_STACK_TRACE(Stream_40, "com.maxeler.platform.max5.manager.Max5ManagerBase.build(Unknown Source)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:24)\n")
#endif


#ifdef USER_CLOCKS
#define USER_CLOCKS_PRESENT 1
USER_CLOCKS(STREAM, 100.0, false)
#endif

#ifdef MANAGER_NODE_PROPERTY
#define MANAGER_NODE_PROPERTY_PRESENT 1
MANAGER_NODE_PROPERTY(WavePropagationKernel, control_pipelining_depth, 2)
#endif


#ifdef KERNEL_CORE
#define KERNEL_CORE_PRESENT 1
KERNEL_CORE(WavePropagationKernel)
#endif

#ifdef KERNEL_HOST_CONTROLLED
#define KERNEL_HOST_CONTROLLED_PRESENT 1
KERNEL_HOST_CONTROLLED(WavePropagationKernel, WavePropagationKernel)
#endif

#ifdef DEBUG_INPUT_BITS
#define DEBUG_INPUT_BITS_PRESENT 1
DEBUG_INPUT_BITS(WavePropagationKernel, velocity, 0)
DEBUG_INPUT_BITS(WavePropagationKernel, absorb, 1)
DEBUG_INPUT_BITS(WavePropagationKernel, prev, 2)
DEBUG_INPUT_BITS(WavePropagationKernel, density, 3)
DEBUG_INPUT_BITS(WavePropagationKernel, curr, 4)
#endif

#ifdef DEBUG_OUTPUT_BITS
#define DEBUG_OUTPUT_BITS_PRESENT 1
DEBUG_OUTPUT_BITS(WavePropagationKernel, nxt, 0)
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_CTOR
#define MANAGER_NODE_CPP_SIM_MODEL_CTOR_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_CTOR(velocity, PCIePushSourceSync16, "velocity")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(absorb, PCIePushSourceSync16, "absorb")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(curr, PCIePushSourceSync16, "curr")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(prev, PCIePushSourceSync16, "prev")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(density, PCIePushSourceSync16, "density")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_32, FifoPushToPullSync, "Stream_32", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_36, FifoPushToPullSync, "Stream_36", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_24, FifoPushToPullSync, "Stream_24", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_28, FifoPushToPullSync, "Stream_28", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_20, FifoPushToPullSync, "Stream_20", false, 512, 128)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_13, DualAspectMuxSync, "Stream_13", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_1, DualAspectMuxSync, "Stream_1", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_7, DualAspectMuxSync, "Stream_7", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_10, DualAspectMuxSync, "Stream_10", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_4, DualAspectMuxSync, "Stream_4", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_38, FifoPushToPullSync, "Stream_38", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_30, FifoPushToPullSync, "Stream_30", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_34, FifoPushToPullSync, "Stream_34", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_26, FifoPushToPullSync, "Stream_26", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_22, FifoPushToPullSync, "Stream_22", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(WavePropagationKernel, WavePropagationKernel, "WavePropagationKernel")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_40, FifoPushToPullSync, "Stream_40", false, 512, 32)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_17, DualAspectRegSync, "Stream_17", 32, 4)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(Stream_42, PullToPushAdapterSync, "Stream_42")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(nxt, PCIePushSinkSync16, "nxt")
MANAGER_NODE_CPP_SIM_MODEL_CTOR(CapabilityReg, CapRegs, "CapabilityReg", 0, 5, 1, 0, 0, 0, 0, 0, 169)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ifpga, IFPGARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(sfa, SFARegs)
MANAGER_NODE_CPP_SIM_MODEL_CTOR(ChecksumMemory, ChecksumMem, "ChecksumMemory", "bd693448b9110aec4169b16b23cedce384e6dc74e152936373cceec1d5098416")
#endif

#ifdef MANAGER_NODE_CPP_SIM_MODEL_SETUP
#define MANAGER_NODE_CPP_SIM_MODEL_SETUP_PRESENT 1
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_almost_empty, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_done, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_empty, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_read, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_read_pipe_dbg, 15, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_ctld_request, 5, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_done_out, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_fill_level, 21, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_flush_level, 21, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_flush_start, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_flush_start_level, 21, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_flushing, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_full_level, 21, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_out_stall, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_out_valid, 1, 0)
MANAGER_NODE_CPP_SIM_MODEL_SETUP(WavePropagationKernel, addDebugRegister, reg_dbg_stall_vector, 1, 0)
#endif

#ifdef PCIE_STREAM
#define PCIE_STREAM_PRESENT 1
PCIE_STREAM(velocity, STREAM_FROM_HOST, 0)
PCIE_STREAM(absorb, STREAM_FROM_HOST, 1)
PCIE_STREAM(curr, STREAM_FROM_HOST, 2)
PCIE_STREAM(prev, STREAM_FROM_HOST, 3)
PCIE_STREAM(density, STREAM_FROM_HOST, 4)
PCIE_STREAM(nxt, STREAM_TO_HOST, 0)
#endif

#ifdef SET_REG_FROM_EQ_V2
#define SET_REG_FROM_EQ_V2_PRESENT 1
SET_REG_FROM_EQ_V2(WavePropagationKernel, eval_stream_offset_0, GET(WavePropagationKernel, nx))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_0, (maxfile_max(1, maxfile_min((-5 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_1, (maxfile_max(1, maxfile_min((-32772 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_2, (maxfile_max(1, maxfile_min((-65539 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_3, (maxfile_max(1, maxfile_min((-98306 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_4, (maxfile_max(1, maxfile_min((-131073 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_5, (maxfile_max(1, maxfile_min((-163840 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_6, (maxfile_max(1, maxfile_min((-196607 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_7, (maxfile_max(1, maxfile_min((-229374 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_8, (maxfile_max(1, maxfile_min((-262141 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_9, (maxfile_max(1, maxfile_min((-294908 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_10, (maxfile_max(1, maxfile_min((-327675 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_11, (maxfile_max(1, maxfile_min((-360442 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_12, (maxfile_max(1, maxfile_min((-393209 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_13, (maxfile_max(1, maxfile_min((-425976 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_14, (maxfile_max(1, maxfile_min((-458743 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_15, (maxfile_max(1, maxfile_min((-491510 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_16, (maxfile_max(1, maxfile_min((-524277 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_17, (maxfile_max(1, maxfile_min((-557044 + (2 * GET(WavePropagationKernel, nx))), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_18, (maxfile_max(1, maxfile_min((-589811 + (2 * GET(WavePropagationKernel, nx))), 10189)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_19, (maxfile_max(1, maxfile_min((-2 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_20, (maxfile_max(1, maxfile_min((-32769 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_21, (maxfile_max(1, maxfile_min((-65536 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_22, (maxfile_max(1, maxfile_min((-98303 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_23, (maxfile_max(1, maxfile_min((-131070 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_24, (maxfile_max(1, maxfile_min((-163837 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_25, (maxfile_max(1, maxfile_min((-196604 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_26, (maxfile_max(1, maxfile_min((-229371 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_27, (maxfile_max(1, maxfile_min((-262138 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_28, (maxfile_max(1, maxfile_min((-294905 + GET(WavePropagationKernel, nx)), 5095)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_29, (maxfile_max(1, maxfile_min((22 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_30, (maxfile_max(1, maxfile_min((-32745 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_31, (maxfile_max(1, maxfile_min((-65512 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_32, (maxfile_max(1, maxfile_min((-98279 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_33, (maxfile_max(1, maxfile_min((-131046 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_34, (maxfile_max(1, maxfile_min((-163813 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_35, (maxfile_max(1, maxfile_min((-196580 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_36, (maxfile_max(1, maxfile_min((-229347 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_37, (maxfile_max(1, maxfile_min((-262114 + GET(WavePropagationKernel, nx)), 32768)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, delay_eq_38, (maxfile_max(1, maxfile_min((-294881 + GET(WavePropagationKernel, nx)), 5119)) + -1))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_0, (239 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_1, (239 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_2, (256 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_3, (256 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_4, (286 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_5, (286 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_6, (339 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_7, (335 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_8, (239 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_9, (256 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_10, (286 + (6 * GET(WavePropagationKernel, nx))))
SET_REG_FROM_EQ_V2(WavePropagationKernel, ce_delay_eq_11, (339 + (6 * GET(WavePropagationKernel, nx))))
#endif

#ifdef ASSERT_EQ_V2
#define ASSERT_EQ_V2_PRESENT 1
ASSERT_EQ_V2(GET(WavePropagationKernel, nx) <= 300000 && GET(WavePropagationKernel, nx) >= 3, "Stream offset variable out of range nx{3..300000}")
ASSERT_EQ_V2(GET(WavePropagationKernel, nx) <= 300000 && GET(WavePropagationKernel, nx) >= 3, "Stream offset param 'nx' must be between 3 and 300000 (inclusive).")
#endif

#ifdef ASSERT_EQ_V3
#define ASSERT_EQ_V3_PRESENT 1
ASSERT_EQ_V3(WavePropagationKernel, GET(WavePropagationKernel, nx) <= 300000 && GET(WavePropagationKernel, nx) >= 3, "Stream offset variable out of range nx{3..300000}")
ASSERT_EQ_V3(WavePropagationKernel, GET(WavePropagationKernel, nx) <= 300000 && GET(WavePropagationKernel, nx) >= 3, "Stream offset param 'nx' must be between 3 and 300000 (inclusive).")
#endif

#ifdef STREAM_VAR
#define STREAM_VAR_PRESENT 1
STREAM_VAR(WavePropagationKernel.nx)
#endif

#ifdef STREAM_PARAM
#define STREAM_PARAM_PRESENT 1
STREAM_PARAM(WavePropagationKernel, nx)
#endif



#ifdef REG
#define REG_PRESENT 1
REG(WavePropagationKernel.dtdx2, 0x0, 4, hwFloat(8, 24))
REG(WavePropagationKernel.io_velocity_force_disabled, 0x4, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.io_absorb_force_disabled, 0x5, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.io_prev_force_disabled, 0x6, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.io_density_force_disabled, 0x7, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.io_curr_force_disabled, 0x8, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.io_nxt_force_disabled, 0x9, 1, hwOffsetFix(1, 0, UNSIGNED))
REG(WavePropagationKernel.run_cycle_count, 0xa, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(WavePropagationKernel.eval_stream_offset_0, 0x10, 3, hwOffsetFix(19, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_0, 0x13, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_1, 0x15, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_2, 0x17, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_3, 0x19, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_4, 0x1b, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_5, 0x1d, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_6, 0x1f, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_7, 0x21, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_8, 0x23, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_9, 0x25, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_10, 0x27, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_11, 0x29, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_12, 0x2b, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_13, 0x2d, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_14, 0x2f, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_15, 0x31, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_16, 0x33, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_17, 0x35, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_18, 0x37, 2, hwOffsetFix(14, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_19, 0x39, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_20, 0x3b, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_21, 0x3d, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_22, 0x3f, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_23, 0x41, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_24, 0x43, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_25, 0x45, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_26, 0x47, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_27, 0x49, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_28, 0x4b, 2, hwOffsetFix(13, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_29, 0x4d, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_30, 0x4f, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_31, 0x51, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_32, 0x53, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_33, 0x55, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_34, 0x57, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_35, 0x59, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_36, 0x5b, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_37, 0x5d, 2, hwOffsetFix(15, 0, UNSIGNED))
REG(WavePropagationKernel.delay_eq_38, 0x5f, 2, hwOffsetFix(13, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_0, 0x61, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_1, 0x64, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_2, 0x67, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_3, 0x6a, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_4, 0x6d, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_5, 0x70, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_6, 0x73, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_7, 0x76, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_8, 0x79, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_9, 0x7c, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_10, 0x7f, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.ce_delay_eq_11, 0x82, 3, hwOffsetFix(21, 0, UNSIGNED))
REG(WavePropagationKernel.current_run_cycle_count, 0x85, 6, hwOffsetFix(48, 0, UNSIGNED))
REG(WavePropagationKernel.dbg_ctld_almost_empty, 0x8b, 1, hwBits(5))
REG(WavePropagationKernel.dbg_ctld_done, 0x8c, 1, hwBits(5))
REG(WavePropagationKernel.dbg_ctld_empty, 0x8d, 1, hwBits(5))
REG(WavePropagationKernel.dbg_ctld_read, 0x8e, 1, hwBits(5))
REG(WavePropagationKernel.dbg_ctld_read_pipe_dbg, 0x8f, 2, hwBits(15))
REG(WavePropagationKernel.dbg_ctld_request, 0x91, 1, hwBits(5))
REG(WavePropagationKernel.dbg_done_out, 0x92, 1, hwBits(1))
REG(WavePropagationKernel.dbg_fill_level, 0x93, 3, hwBits(21))
REG(WavePropagationKernel.dbg_flush_level, 0x96, 3, hwBits(21))
REG(WavePropagationKernel.dbg_flush_start, 0x99, 1, hwBits(1))
REG(WavePropagationKernel.dbg_flush_start_level, 0x9a, 3, hwBits(21))
REG(WavePropagationKernel.dbg_flushing, 0x9d, 1, hwBits(1))
REG(WavePropagationKernel.dbg_full_level, 0x9e, 3, hwBits(21))
REG(WavePropagationKernel.dbg_out_stall, 0xa1, 1, hwBits(1))
REG(WavePropagationKernel.dbg_out_valid, 0xa2, 1, hwBits(1))
REG(WavePropagationKernel.dbg_stall_vector, 0xa3, 1, hwBits(1))
REG(ifpga.ifpga_ctrl, 0xa4, 1, hwBits(8))
REG(SignalForwardingAdapter.SFA_FORWARD_EN, 0xa5, 4, hwBits(32))
#endif

#ifdef REG_V2
#define REG_V2_PRESENT 1
REG_V2(WavePropagationKernel.dtdx2, 0x0, 4, hwFloat(8, 24), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.io_velocity_force_disabled, 0x4, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.io_absorb_force_disabled, 0x5, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.io_prev_force_disabled, 0x6, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.io_density_force_disabled, 0x7, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.io_curr_force_disabled, 0x8, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.io_nxt_force_disabled, 0x9, 1, hwOffsetFix(1, 0, UNSIGNED), HOST_WRITE_ONLY, true)
REG_V2(WavePropagationKernel.run_cycle_count, 0xa, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.eval_stream_offset_0, 0x10, 3, hwOffsetFix(19, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_0, 0x13, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_1, 0x15, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_2, 0x17, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_3, 0x19, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_4, 0x1b, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_5, 0x1d, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_6, 0x1f, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_7, 0x21, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_8, 0x23, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_9, 0x25, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_10, 0x27, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_11, 0x29, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_12, 0x2b, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_13, 0x2d, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_14, 0x2f, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_15, 0x31, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_16, 0x33, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_17, 0x35, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_18, 0x37, 2, hwOffsetFix(14, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_19, 0x39, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_20, 0x3b, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_21, 0x3d, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_22, 0x3f, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_23, 0x41, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_24, 0x43, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_25, 0x45, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_26, 0x47, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_27, 0x49, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_28, 0x4b, 2, hwOffsetFix(13, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_29, 0x4d, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_30, 0x4f, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_31, 0x51, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_32, 0x53, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_33, 0x55, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_34, 0x57, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_35, 0x59, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_36, 0x5b, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_37, 0x5d, 2, hwOffsetFix(15, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.delay_eq_38, 0x5f, 2, hwOffsetFix(13, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_0, 0x61, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_1, 0x64, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_2, 0x67, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_3, 0x6a, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_4, 0x6d, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_5, 0x70, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_6, 0x73, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_7, 0x76, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_8, 0x79, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_9, 0x7c, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_10, 0x7f, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.ce_delay_eq_11, 0x82, 3, hwOffsetFix(21, 0, UNSIGNED), HOST_WRITE_ONLY, false)
REG_V2(WavePropagationKernel.current_run_cycle_count, 0x85, 6, hwOffsetFix(48, 0, UNSIGNED), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_almost_empty, 0x8b, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_done, 0x8c, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_empty, 0x8d, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_read, 0x8e, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_read_pipe_dbg, 0x8f, 2, hwBits(15), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_ctld_request, 0x91, 1, hwBits(5), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_done_out, 0x92, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_fill_level, 0x93, 3, hwBits(21), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_flush_level, 0x96, 3, hwBits(21), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_flush_start, 0x99, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_flush_start_level, 0x9a, 3, hwBits(21), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_flushing, 0x9d, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_full_level, 0x9e, 3, hwBits(21), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_out_stall, 0xa1, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_out_valid, 0xa2, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(WavePropagationKernel.dbg_stall_vector, 0xa3, 1, hwBits(1), HOST_READ_ONLY, false)
REG_V2(ifpga.ifpga_ctrl, 0xa4, 1, hwBits(8), HOST_READ_WRITE, false)
REG_V2(SignalForwardingAdapter.SFA_FORWARD_EN, 0xa5, 4, hwBits(32), HOST_READ_WRITE, false)
#endif




#ifdef CHECKSUM
#define CHECKSUM_PRESENT 1
CHECKSUM("bd693448b9110aec4169b16b23cedce384e6dc74e152936373cceec1d5098416")
#endif

#ifdef CAPABILITY
#define CAPABILITY_PRESENT 1
CAPABILITY(LIMAREV, LIMAREVA)
CAPABILITY(LIMARAM, DDR4_48GB)
CAPABILITY(LIMAFPGA, xcVU9P_FLGB2104_2_E)
#endif

#ifdef DEFINE_DESIGN_NAME
#define DESIGN_NAME WavePropagation
#endif /* DEFINE_DESIGN_NAME */

#ifndef SLIC_NO_DECLARATIONS
/**\file */
#ifndef SLIC_DECLARATIONS_WavePropagation_H
#define SLIC_DECLARATIONS_WavePropagation_H
#include "MaxSLiCInterface.h"
#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#define WavePropagation_PCIE_ALIGNMENT (16)


/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/




/**
 * \brief Basic static function for the interface 'default'.
 * 
 * \param [in] param_dtdx2 Interface Parameter "dtdx2".
 * \param [in] param_nx Interface Parameter "nx".
 * \param [in] param_nz Interface Parameter "nz".
 * \param [in] instream_absorb The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_curr The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_density The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_prev The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_velocity The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [out] outstream_nxt The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 */
void WavePropagation(
	float param_dtdx2,
	int32_t param_nx,
	int32_t param_nz,
	const float *instream_absorb,
	const float *instream_curr,
	const float *instream_density,
	const float *instream_prev,
	const float *instream_velocity,
	float *outstream_nxt);

/**
 * \brief Basic static non-blocking function for the interface 'default'.
 * 
 * Schedule to run on an engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 * 
 * 
 * \param [in] param_dtdx2 Interface Parameter "dtdx2".
 * \param [in] param_nx Interface Parameter "nx".
 * \param [in] param_nz Interface Parameter "nz".
 * \param [in] instream_absorb The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_curr The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_density The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_prev The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [in] instream_velocity The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \param [out] outstream_nxt The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes.
 * \return A handle on the execution status, or NULL in case of error.
 */
max_run_t *WavePropagation_nonblock(
	float param_dtdx2,
	int32_t param_nx,
	int32_t param_nz,
	const float *instream_absorb,
	const float *instream_curr,
	const float *instream_density,
	const float *instream_prev,
	const float *instream_velocity,
	float *outstream_nxt);

/**
 * \brief Advanced static interface, structure for the engine interface 'default'
 * 
 */
typedef struct { 
	float param_dtdx2; /**<  [in] Interface Parameter "dtdx2". */
	int32_t param_nx; /**<  [in] Interface Parameter "nx". */
	int32_t param_nz; /**<  [in] Interface Parameter "nz". */
	const float *instream_absorb; /**<  [in] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes. */
	const float *instream_curr; /**<  [in] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes. */
	const float *instream_density; /**<  [in] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes. */
	const float *instream_prev; /**<  [in] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes. */
	const float *instream_velocity; /**<  [in] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes. */
	float *outstream_nxt; /**<  [out] The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes. */
} WavePropagation_actions_t;

/**
 * \brief Advanced static function for the interface 'default'.
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in,out] interface_actions Actions to be executed.
 */
void WavePropagation_run(
	max_engine_t *engine,
	WavePropagation_actions_t *interface_actions);

/**
 * \brief Advanced static non-blocking function for the interface 'default'.
 *
 * Schedule the actions to run on the engine and return immediately.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * 
 * \param [in] engine The engine on which the actions will be executed.
 * \param [in] interface_actions Actions to be executed.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *WavePropagation_run_nonblock(
	max_engine_t *engine,
	WavePropagation_actions_t *interface_actions);

/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void WavePropagation_run_group(max_group_t *group, WavePropagation_actions_t *interface_actions);

/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *WavePropagation_run_group_nonblock(max_group_t *group, WavePropagation_actions_t *interface_actions);

/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void WavePropagation_run_array(max_engarray_t *engarray, WavePropagation_actions_t *interface_actions[]);

/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *WavePropagation_run_array_nonblock(max_engarray_t *engarray, WavePropagation_actions_t *interface_actions[]);

/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* WavePropagation_convert(max_file_t *maxfile, WavePropagation_actions_t *interface_actions);

/**
 * \brief Initialise a maxfile.
 */
max_file_t* WavePropagation_init(void);

/* Error handling functions */
int WavePropagation_has_errors(void);
const char* WavePropagation_get_errors(void);
void WavePropagation_clear_errors(void);
/* Free statically allocated maxfile data */
void WavePropagation_free(void);
/* returns: -1 = error running command; 0 = no error reported */
int WavePropagation_simulator_start(void);
/* returns: -1 = error running command; 0 = no error reported */
int WavePropagation_simulator_stop(void);

#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* SLIC_DECLARATIONS_WavePropagation_H */

#endif /* SLIC_NO_DECLARATIONS */

#ifdef PHOTON_NODE_DATA
#define PHOTON_NODE_DATA_PRESENT 1
PHOTON_NODE_DATA(WavePropagationKernel, 114, NodeInputMappedReg, "Scalar input (io_nxt_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:850)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:63)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 115, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:850)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:63)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 148, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:385)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:28)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 227, NodeInputMappedReg, "Scalar input (eval_stream_offset_0)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream$OffsetExpr.getDFEVar(Stream.java:170)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:24)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 3, NodeCounter, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Count.makeCounter(Count.java:385)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:28)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 185, NodeFIFO, "FIFO(1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 147, NodeConstantRawBits, "{HWOffsetFix:19, 0, UNSIGNED}\n0x00002; 2.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 130, NodeGtInlined, ">", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.gt(DFEVar.java:855)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 146, NodeConstantRawBits, "{HWOffsetFix:19, 0, UNSIGNED}\n0x00003; 3.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 108, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:990)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 131, NodeLtInlined, "<", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.lt(DFEVar.java:885)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 110, NodeAnd, "&", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.and(DFEVar.java:579)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 111, NodeConstantRawBits, "{HWFloat:8, 24}\n0x00000000; 0.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 145, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3c360b61; 0.011111111380159855", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 19, NodeInputMappedReg, "Scalar input (io_curr_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:35)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 20, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:35)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 21, NodeInput, "Input(curr)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:35)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 228, NodeInputMappedReg, "Scalar input (delay_eq_0)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 229, NodeInputMappedReg, "Scalar input (delay_eq_1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 230, NodeInputMappedReg, "Scalar input (delay_eq_2)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 231, NodeInputMappedReg, "Scalar input (delay_eq_3)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 232, NodeInputMappedReg, "Scalar input (delay_eq_4)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 233, NodeInputMappedReg, "Scalar input (delay_eq_5)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 234, NodeInputMappedReg, "Scalar input (delay_eq_6)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 235, NodeInputMappedReg, "Scalar input (delay_eq_7)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 236, NodeInputMappedReg, "Scalar input (delay_eq_8)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 237, NodeInputMappedReg, "Scalar input (delay_eq_9)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 238, NodeInputMappedReg, "Scalar input (delay_eq_10)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 239, NodeInputMappedReg, "Scalar input (delay_eq_11)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 240, NodeInputMappedReg, "Scalar input (delay_eq_12)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 241, NodeInputMappedReg, "Scalar input (delay_eq_13)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 242, NodeInputMappedReg, "Scalar input (delay_eq_14)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 243, NodeInputMappedReg, "Scalar input (delay_eq_15)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 244, NodeInputMappedReg, "Scalar input (delay_eq_16)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 245, NodeInputMappedReg, "Scalar input (delay_eq_17)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 246, NodeInputMappedReg, "Scalar input (delay_eq_18)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 177, NodeFIFO, "FIFO(51 + 2nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 247, NodeInputMappedReg, "Scalar input (delay_eq_19)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 248, NodeInputMappedReg, "Scalar input (delay_eq_20)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 249, NodeInputMappedReg, "Scalar input (delay_eq_21)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 250, NodeInputMappedReg, "Scalar input (delay_eq_22)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 251, NodeInputMappedReg, "Scalar input (delay_eq_23)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 252, NodeInputMappedReg, "Scalar input (delay_eq_24)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 253, NodeInputMappedReg, "Scalar input (delay_eq_25)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 254, NodeInputMappedReg, "Scalar input (delay_eq_26)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 255, NodeInputMappedReg, "Scalar input (delay_eq_27)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 256, NodeInputMappedReg, "Scalar input (delay_eq_28)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 178, NodeFIFO, "FIFO(27 + nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 189, NodeFIFO, "FIFO(75)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 214, NodeFIFO, "FIFO(1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 215, NodeFIFO, "FIFO(4)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 216, NodeFIFO, "FIFO(1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 55, NodeStreamOffset, "stream offset: 3nx{3..300000} - 3", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 16, NodeInputMappedReg, "Scalar input (io_density_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:34)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 17, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:34)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 18, NodeInput, "Input(density)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:34)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 179, NodeFIFO, "FIFO(51 + 2nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 180, NodeFIFO, "FIFO(27 + nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 190, NodeFIFO, "FIFO(75)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 219, NodeFIFO, "FIFO(1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 220, NodeFIFO, "FIFO(4)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 221, NodeFIFO, "FIFO(1)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 56, NodeStreamOffset, "stream offset: 3nx{3..300000} - 3", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 57, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 58, NodeStreamOffset, "stream offset: 3 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:49)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 59, NodeStreamOffset, "stream offset: 3 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:49)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 60, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:49)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 61, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 63, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 144, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3e19999a; 0.15000000596046448", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 64, NodeStreamOffset, "stream offset: 3nx{3..300000} - 2", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 65, NodeStreamOffset, "stream offset: 3nx{3..300000} - 2", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 66, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 67, NodeStreamOffset, "stream offset: 2 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:51)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 68, NodeStreamOffset, "stream offset: 2 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:51)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 69, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:51)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 70, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 72, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:50)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 73, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 143, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3fc00000; 1.5", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 217, NodeFIFO, "FIFO(7)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 218, NodeFIFO, "FIFO(2)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 74, NodeStreamOffset, "stream offset: 3nx{3..300000} - 1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 222, NodeFIFO, "FIFO(7)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 223, NodeFIFO, "FIFO(2)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 75, NodeStreamOffset, "stream offset: 3nx{3..300000} - 1", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 76, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 77, NodeStreamOffset, "stream offset: 1 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:53)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 78, NodeStreamOffset, "stream offset: 1 + 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:53)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 79, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:53)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 80, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 82, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:52)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 83, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 142, NodeConstantRawBits, "{HWFloat:8, 24}\n0x402e38e4; 2.722222328186035", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:54)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 22, NodeStreamOffset, "stream offset: 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:36)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 201, NodeFIFO, "FIFO(21)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 23, NodeStreamOffset, "stream offset: 3nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:37)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 202, NodeFIFO, "FIFO(21)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 84, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:54)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 86, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:54)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 87, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:48)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 141, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3c360b61; 0.011111111380159855", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 181, NodeFIFO, "FIFO(27 + nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 182, NodeFIFO, "FIFO(27 + nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 24, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 183, NodeFIFO, "FIFO(51 + 2nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 25, NodeStreamOffset, "stream offset: 6nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:40)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 26, NodeStreamOffset, "stream offset: 6nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:40)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 27, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:40)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 203, NodeFIFO, "FIFO(156)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 28, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 30, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 140, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3e19999a; 0.15000000596046448", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 31, NodeStreamOffset, "stream offset: nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 32, NodeStreamOffset, "stream offset: nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 33, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 34, NodeStreamOffset, "stream offset: 5nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:42)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 35, NodeStreamOffset, "stream offset: 5nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:42)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 36, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:42)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 204, NodeFIFO, "FIFO(105)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 37, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 39, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:41)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 257, NodeInputMappedReg, "Scalar input (delay_eq_29)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 258, NodeInputMappedReg, "Scalar input (delay_eq_30)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 259, NodeInputMappedReg, "Scalar input (delay_eq_31)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 260, NodeInputMappedReg, "Scalar input (delay_eq_32)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 261, NodeInputMappedReg, "Scalar input (delay_eq_33)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 262, NodeInputMappedReg, "Scalar input (delay_eq_34)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 263, NodeInputMappedReg, "Scalar input (delay_eq_35)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 264, NodeInputMappedReg, "Scalar input (delay_eq_36)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 265, NodeInputMappedReg, "Scalar input (delay_eq_37)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 266, NodeInputMappedReg, "Scalar input (delay_eq_38)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 226, NodeFIFO, "FIFO(51 + nx{3..300000})", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 40, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 139, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3fc00000; 1.5", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 41, NodeStreamOffset, "stream offset: 2nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 42, NodeStreamOffset, "stream offset: 2nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 43, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 44, NodeStreamOffset, "stream offset: 4nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:44)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 45, NodeStreamOffset, "stream offset: 4nx{3..300000}", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.Stream.offset(Stream.java:353)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:44)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 46, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:44)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 206, NodeFIFO, "FIFO(54)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 47, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 49, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:43)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 207, NodeFIFO, "FIFO(62)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 50, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 138, NodeConstantRawBits, "{HWFloat:8, 24}\n0x402e38e4; 2.722222328186035", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:45)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 53, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mulAsRHS(DFEVar.java:1045)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:45)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 54, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:39)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 88, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 0, NodeInputMappedReg, "Scalar input (dtdx2)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.scalarInput(IO.java:1193)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:22)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 89, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 7, NodeInputMappedReg, "Scalar input (io_velocity_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:31)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 8, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:31)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 9, NodeInput, "Input(velocity)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:31)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 90, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 208, NodeFIFO, "FIFO(8)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 91, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 225, NodeFIFO, "FIFO(62)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 92, NodeDiv, "/", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1065)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 137, NodeConstantRawBits, "{HWFloat:8, 24}\n0x40000000; 2.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 10, NodeInputMappedReg, "Scalar input (io_absorb_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:32)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 11, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:32)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 12, NodeInput, "Input(absorb)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:32)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 93, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 95, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 224, NodeFIFO, "FIFO(82)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 96, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 97, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.add(DFEVar.java:930)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 136, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3f800000; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 211, NodeFIFO, "FIFO(19)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 99, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.subAsRHS(DFEVar.java:1000)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 13, NodeInputMappedReg, "Scalar input (io_prev_force_disabled)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:33)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 14, NodeNot, "~", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:33)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 15, NodeInput, "Input(prev)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.input(IO.java:629)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:33)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 100, NodeMul, "*", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.mul(DFEVar.java:1020)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 101, NodeSub, "-", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.sub(DFEVar.java:975)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 135, NodeConstantRawBits, "{HWFloat:8, 24}\n0x3f800000; 1.0", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:955)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 103, NodeAdd, "+", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.addAsRHS(DFEVar.java:955)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:57)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 213, NodeFIFO, "FIFO(19)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 104, NodeDiv, "/", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.div(DFEVar.java:1065)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:56)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 112, NodeMux, "MUX", "com.maxeler.maxcompiler.v2.kernelcompiler.types.base.DFEVar.ternaryIf(DFEVar.java:1218)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:59)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 117, NodeOutput, "Output(nxt)", "com.maxeler.maxcompiler.v2.kernelcompiler.stdlib.core.IO.output(IO.java:850)\nwavepropagation.WavePropagationKernel.<init>(WavePropagationKernel.maxj:63)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:25)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 122, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 134, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 119, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 120, NodeCounter, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 121, NodeStreamOffset, "stream offset: 1", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 123, NodeOutputMappedReg, "Scalar output (current_run_cycle_count)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 133, NodeConstantRawBits, "{HWOffsetFix:1, 0, UNSIGNED}\n0x1; 1.0", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 125, NodeConstantRawBits, "{HWOffsetFix:49, 0, UNSIGNED}\n0x1000000000000; 2.81474976710656E14", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 126, NodeCounter, "Counter(NUMERIC_INCREMENTING)\nInc: 1\nReset: 0\nInit: 0", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 128, NodeInputMappedReg, "Scalar input (run_cycle_count)", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 132, NodeEqInlined, "==", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
PHOTON_NODE_DATA(WavePropagationKernel, 127, NodeFlush, "flush on trigger", "com.maxeler.platform.max5.manager.Max5ManagerBase.addKernel(Unknown Source)\nwavepropagation.WavePropagationManager.setup(WavePropagationManager.maxj:27)\nwavepropagation.WavePropagationManagerMAX5C.<init>(WavePropagationManagerMAX5C.maxj:19)\nwavepropagation.WavePropagationManagerMAX5C.main(WavePropagationManagerMAX5C.maxj:23)\n")
#endif

#ifdef SLIC_USE_DEFINITIONS
#include <stdio.h>
#include <math.h>
#include <pthread.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
static max_file_t *stored_maxfile = NULL;
static max_engine_t *stored_engine = NULL;
static char *stored_error = NULL;
static int stored_has_error = 0;
static pthread_once_t slic_bs_is_initialised = PTHREAD_ONCE_INIT;

static void set_error(const char *error_str)
{
	stored_has_error = 1; 
	if(stored_error == NULL) {
		stored_error = strdup(error_str);
	} else {
		char *nerr = malloc(strlen(stored_error) + strlen(error_str) + 2);
		sprintf(nerr, "%s\n%s", stored_error, error_str);
		free(stored_error);
		stored_error = nerr;
	}
}
static void set_error_and_free(char *error_str){
	set_error(error_str);
	free(error_str);
}
int WavePropagation_has_errors(void)
{	return stored_has_error; }
const char* WavePropagation_get_errors(void)
{	return stored_error; }
void WavePropagation_clear_errors(void)
{
	free(stored_error);
	stored_error = NULL;
	stored_has_error = 0;
}

static char WavePropagation_use_simulation[16];
static void WavePropagation_def_use_simulation(void)
{
	long pid = ((long) getpid()) % 100000;
	snprintf(WavePropagation_use_simulation, 16, "WaveProp_%05ld_", pid);
}
static const char *WavePropagation_check_use_simulation(void)
{
	WavePropagation_def_use_simulation();
	const char *use_sim = max_config_get_string(MAX_CONFIG_USE_SIMULATION);
	if (use_sim == NULL) {
		use_sim = WavePropagation_use_simulation;
		max_config_set_string(MAX_CONFIG_USE_SIMULATION, use_sim);
	}
	return use_sim;
}

static int WavePropagation_simulation_launch = 0;
int WavePropagation_simulator_start(void)
{
	int retval = 0;
	const char *use_sim = WavePropagation_check_use_simulation();
	char buff[1024];
	snprintf(buff, 1024, "PATH=simutils:$PATH maxcompilersim -d 1 -n %s -c MAX5C -S simutils restart", use_sim);
	FILE *pipe_fp = popen(buff, "r");
	if (pipe_fp == NULL) {
		strncat(buff, " : failed to execute.", (1024 - strlen(buff)));
		set_error(buff);
		return -1;
	}
	while (fgets(buff, 1024, pipe_fp) != NULL) {
		/* Uncomment this to get simulator command output */
		/* fprintf(stderr, buff); */
		if (strstr(buff, "Error")) {
			set_error(buff);
			retval = -1;
		}
	}
	pclose(pipe_fp);
	return retval;
}

int WavePropagation_simulator_stop(void)
{
	const char *use_sim = WavePropagation_check_use_simulation();
	char buff[1024];
	snprintf(buff, 1024, "PATH=simutils:$PATH maxcompilersim -d 1 -n %s -c MAX5C -S simutils stop", use_sim);
	FILE *pipe_fp = popen(buff, "r");
	if (pipe_fp == NULL) {
		strncat(buff, " : failed to execute.", (1024 - strlen(buff)));
		set_error(buff);
		return -1;
	}
	while (fgets(buff, 1024, pipe_fp) != NULL) {
		/* Uncomment this to get simulator command output */
		/* fprintf(stderr, buff); */
		;
	}
	pclose(pipe_fp);
	return 0;
}

static void WavePropagation_static_init(void) 
{
	stored_maxfile = WavePropagation_init();
	if (stored_maxfile == NULL || !max_ok(stored_maxfile->errors)) {
		stored_maxfile = NULL;
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) abort();
		else { set_error("Unable to load maxfile"); return; }
	}
	if(!max_ok(max_global_errors())) {
		set_error_and_free(max_errors_trace(max_global_errors()));
		return;
	}
	if(!max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR))
		max_errors_mode(stored_maxfile->errors, 0);
	time_t timeout_previous = max_load_timeout(stored_maxfile, 30);
	const char *use_sim = WavePropagation_check_use_simulation();
	if (max_ping_daemon(stored_maxfile, use_sim) == 0) {
		int sim_stat = WavePropagation_simulator_start();
		if ((sim_stat == 0) && (max_ping_daemon(stored_maxfile, use_sim) == 1)) {
			WavePropagation_simulation_launch = 1;
		} else {
			set_error("Error: An error occurred while trying to start the simulation infrastructure automatically.");
			set_error("Error: Check that 'use_simulation=<simulator_name>' is set correctly in your SLiC configuration");
			set_error("Error: and that the associated simulated system daemon is running.");
			max_file_free(stored_maxfile);
			stored_maxfile = NULL;
			return;
		}
	}
	stored_engine = max_load(stored_maxfile, "*");
	if (!max_ok(stored_maxfile->errors)) {
		if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) {
			fprintf(stderr, "\nUnable to load engine: aborting now.\n\n");
			fflush(stderr);
			abort();
		} else {
			set_error_and_free(max_errors_trace(stored_maxfile->errors));
			max_file_free(stored_maxfile);
			stored_maxfile = NULL;
			return;
		} 
	} 
	max_load_timeout(stored_maxfile, timeout_previous);
}
void WavePropagation_free(void)
{
	if (stored_engine != NULL) {
		max_unload(stored_engine);
		stored_engine = NULL;
	}
	if (stored_maxfile != NULL) {
		max_file_free(stored_maxfile);
		stored_maxfile = NULL;
	}
	if (stored_error != NULL) {
		free(stored_error);
		stored_error = NULL;
	}
	if (WavePropagation_simulation_launch == 1) {
		int sim_stat = WavePropagation_simulator_stop();
		if (sim_stat != 0 ) {
			fprintf(stderr, "Error stopping simulator.");
		}
		WavePropagation_simulation_launch = 0;
	}
}

static int WavePropagation_get_pcie_alignment(void)
{
#ifdef WavePropagation_PCIE_ALIGNMENT
	return ((WavePropagation_PCIE_ALIGNMENT < 1) ? 16 : WavePropagation_PCIE_ALIGNMENT);
#else
	return 16;
#endif
}

static int WavePropagation_check_aligned(const void *data)
{
	uintptr_t pointer = (uintptr_t) data;
	int alignment = WavePropagation_get_pcie_alignment();
	return (pointer % alignment) ? 1 : 0;
}

static void *WavePropagation_malloc_aligned(const size_t size)
{
	void *ptr;
	int alignment = WavePropagation_get_pcie_alignment();
	posix_memalign(&ptr, alignment, size);
	return ptr;
}



/*----------------------------------------------------------------------------*/
/*---------------------------- Interface default -----------------------------*/
/*----------------------------------------------------------------------------*/



#define CHECK_ERRORS_ST(ST, RET) if(!max_ok(ST->errors)) { if(max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n", max_errors_trace(ST->errors)); abort(); } set_error_and_free(max_errors_trace(ST->errors)); return RET; } 
#define CHECK_NULL(VALUE, MESSAGE, RET) if(VALUE == NULL) { if (max_config_get_bool(MAX_CONFIG_STATIC_INTERFACE_ABORT_ON_ERROR)) { fprintf(stderr, "%s\n%s\n", (stored_error == NULL) ? "" : stored_error, MESSAGE); abort(); } set_error(MESSAGE); return RET; }

 
typedef struct WavePropagation_callback_stream {
	uint8_t *user_ptr;
	uint8_t *aligned_ptr;
	size_t   size;
	int      is_output;
} WavePropagation_callback_stream_t;

typedef struct WavePropagation_callback_data {
	WavePropagation_callback_stream_t stream[6]; 
	int count;
	int max_count;
} WavePropagation_callback_data_t;

static void WavePropagation_callback_internal(void *cb_data)
{
	WavePropagation_callback_data_t *data = (WavePropagation_callback_data_t*) cb_data;
	for (int i = 0 ; i < data->count ; i++ ) {
		WavePropagation_callback_stream_t *s = &data->stream[i];
		if (s->is_output && (s->size > 0)) {
			memcpy(s->user_ptr, s->aligned_ptr, s->size);
		}
		free(s->aligned_ptr);
	}
	free(data);
}

static max_actions_t* WavePropagation_convert_internal(
	max_file_t *maxfile,
	WavePropagation_actions_t *interface_actions,
	int  is_internal_call,
	void (**callback_func)(void*),
	void **callback_data)
{
	max_actions_t *actions = max_actions_init(maxfile, NULL);
	if(actions == NULL) return NULL;

#define CHECK_ERRORS if(!max_ok(actions->errors)) { set_error_and_free(max_errors_trace(actions->errors)); return NULL; } 

	WavePropagation_callback_data_t *cb_data = NULL;
	int use_callback = (callback_func != NULL) && (callback_data != NULL);
	if (use_callback) {
		cb_data = malloc(sizeof(WavePropagation_callback_data_t));
		if (cb_data == NULL) {
			fprintf(stderr, "Unable to allocate memory for stream callback data in function WavePropagation_convert_internal\n");
			return NULL;
		}
		cb_data->max_count = 6;
		cb_data->count     = 0;
		*callback_data     = cb_data;
		*callback_func     = &WavePropagation_callback_internal;
	}

	int32_t param_nx = interface_actions->param_nx;
	
	/* code for offset WavePropagationKernel_nx*/
	long offset_WavePropagationKernel_nx = param_nx;
	max_set_offset(actions, "WavePropagationKernel", "nx", offset_WavePropagationKernel_nx);
	CHECK_ERRORS;
	/* end of code for offset offset_WavePropagationKernel_nx*/
	
	int32_t param_nz = interface_actions->param_nz;
	
	int64_t tmp_0 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 8)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4);
	
	/* code for scalar WavePropagationKernel.run_cycle_count */
	uint64_t ticks_WavePropagationKernel = tmp_0;
	max_set_ticks(actions, "WavePropagationKernel", tmp_0);
	CHECK_ERRORS;
	/* end of code for scalar WavePropagationKernel.run_cycle_count*/
	
	float param_dtdx2 = interface_actions->param_dtdx2;
	
	/* code for scalar WavePropagationKernel.dtdx2 */
	double inscalar_WavePropagationKernel_dtdx2 = param_dtdx2;
	max_set_double(actions, "WavePropagationKernel", "dtdx2", inscalar_WavePropagationKernel_dtdx2);
	CHECK_ERRORS;
	/* end of code for scalar WavePropagationKernel.dtdx2*/
	
	int64_t tmp_1 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 8)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4) * (int64_t) 4);
	
	/* code for stream absorb */
	size_t instream_size_absorb = tmp_1;
	if (instream_size_absorb > 0) {
		const float *stream_ptr = interface_actions->instream_absorb;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->instream_absorb))) {
			float *aligned_instream_absorb = malloc(instream_size_absorb);
			if (aligned_instream_absorb == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream absorb.",
						instream_size_absorb);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_absorb;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_absorb;
			(&cb_data->stream[cb_data->count])->size        = instream_size_absorb;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_absorb, interface_actions->instream_absorb, instream_size_absorb);
			stream_ptr = aligned_instream_absorb;
		}
		max_queue_input(actions, "absorb", stream_ptr, instream_size_absorb);
		CHECK_ERRORS;
	}
	/* end of code for stream absorb */
	
	int64_t tmp_2 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 2)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4) * (int64_t) 4);
	
	/* code for stream curr */
	size_t instream_size_curr = tmp_2;
	if (instream_size_curr > 0) {
		const float *stream_ptr = interface_actions->instream_curr;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->instream_curr))) {
			float *aligned_instream_curr = malloc(instream_size_curr);
			if (aligned_instream_curr == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream curr.",
						instream_size_curr);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_curr;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_curr;
			(&cb_data->stream[cb_data->count])->size        = instream_size_curr;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_curr, interface_actions->instream_curr, instream_size_curr);
			stream_ptr = aligned_instream_curr;
		}
		max_queue_input(actions, "curr", stream_ptr, instream_size_curr);
		CHECK_ERRORS;
	}
	/* end of code for stream curr */
	
	/* code for stream density */
	size_t instream_size_density = tmp_2;
	if (instream_size_density > 0) {
		const float *stream_ptr = interface_actions->instream_density;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->instream_density))) {
			float *aligned_instream_density = malloc(instream_size_density);
			if (aligned_instream_density == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream density.",
						instream_size_density);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_density;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_density;
			(&cb_data->stream[cb_data->count])->size        = instream_size_density;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_density, interface_actions->instream_density, instream_size_density);
			stream_ptr = aligned_instream_density;
		}
		max_queue_input(actions, "density", stream_ptr, instream_size_density);
		CHECK_ERRORS;
	}
	/* end of code for stream density */
	
	/* code for stream prev */
	size_t instream_size_prev = tmp_1;
	if (instream_size_prev > 0) {
		const float *stream_ptr = interface_actions->instream_prev;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->instream_prev))) {
			float *aligned_instream_prev = malloc(instream_size_prev);
			if (aligned_instream_prev == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream prev.",
						instream_size_prev);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_prev;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_prev;
			(&cb_data->stream[cb_data->count])->size        = instream_size_prev;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_prev, interface_actions->instream_prev, instream_size_prev);
			stream_ptr = aligned_instream_prev;
		}
		max_queue_input(actions, "prev", stream_ptr, instream_size_prev);
		CHECK_ERRORS;
	}
	/* end of code for stream prev */
	
	/* code for stream velocity */
	size_t instream_size_velocity = tmp_1;
	if (instream_size_velocity > 0) {
		const float *stream_ptr = interface_actions->instream_velocity;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->instream_velocity))) {
			float *aligned_instream_velocity = malloc(instream_size_velocity);
			if (aligned_instream_velocity == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream velocity.",
						instream_size_velocity);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->instream_velocity;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_instream_velocity;
			(&cb_data->stream[cb_data->count])->size        = instream_size_velocity;
			(&cb_data->stream[cb_data->count])->is_output   = 0;
			cb_data->count += 1;
			memcpy(aligned_instream_velocity, interface_actions->instream_velocity, instream_size_velocity);
			stream_ptr = aligned_instream_velocity;
		}
		max_queue_input(actions, "velocity", stream_ptr, instream_size_velocity);
		CHECK_ERRORS;
	}
	/* end of code for stream velocity */
	
	/* code for stream nxt */
	size_t outstream_size_nxt = tmp_1;
	if (outstream_size_nxt > 0) {
		float *stream_ptr = interface_actions->outstream_nxt;
		if (use_callback && (1 == WavePropagation_check_aligned(interface_actions->outstream_nxt))) {
			float *aligned_outstream_nxt = malloc(outstream_size_nxt);
			if (aligned_outstream_nxt == NULL) {
				char error_msg[256];
				snprintf(error_msg, sizeof(error_msg) / sizeof(char),
						"Failed to allocate %zu bytes of memory for stream nxt.",
						outstream_size_nxt);
				max_report_error_slic(actions->errors, __FILE__, __LINE__, 526, error_msg);
				CHECK_ERRORS;
			}
			(&cb_data->stream[cb_data->count])->user_ptr    = (uint8_t*) interface_actions->outstream_nxt;
			(&cb_data->stream[cb_data->count])->aligned_ptr = (uint8_t*) aligned_outstream_nxt;
			(&cb_data->stream[cb_data->count])->size        = outstream_size_nxt;
			(&cb_data->stream[cb_data->count])->is_output   = 1;
			cb_data->count += 1;
			stream_ptr = aligned_outstream_nxt;
		}
		max_queue_output(actions, "nxt", stream_ptr, outstream_size_nxt);
		CHECK_ERRORS;
	}
	/* end of code for stream nxt */
	
	if (use_callback && cb_data->count == 0) {
		*callback_data = NULL;
		*callback_func = NULL;
		free(cb_data);
	}
	return actions;
#undef CHECK_ERRORS
}

void WavePropagation(
	float param_dtdx2,
	int32_t param_nx,
	int32_t param_nz,
	const float *instream_absorb,
	const float *instream_curr,
	const float *instream_density,
	const float *instream_prev,
	const float *instream_velocity,
	float *outstream_nxt)
{
	(void) pthread_once(&slic_bs_is_initialised, WavePropagation_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", );
	max_run_t *run = WavePropagation_nonblock(param_dtdx2, param_nx, param_nz, instream_absorb, instream_curr, instream_density, instream_prev, instream_velocity, outstream_nxt);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *WavePropagation_nonblock(
	float param_dtdx2,
	int32_t param_nx,
	int32_t param_nz,
	const float *instream_absorb,
	const float *instream_curr,
	const float *instream_density,
	const float *instream_prev,
	const float *instream_velocity,
	float *outstream_nxt)
{
	WavePropagation_actions_t interface_actions;
	interface_actions.param_dtdx2 = param_dtdx2;
	interface_actions.param_nx = param_nx;
	interface_actions.param_nz = param_nz;
	interface_actions.instream_absorb = instream_absorb;
	interface_actions.instream_curr = instream_curr;
	interface_actions.instream_density = instream_density;
	interface_actions.instream_prev = instream_prev;
	interface_actions.instream_velocity = instream_velocity;
	interface_actions.outstream_nxt = outstream_nxt;
	(void) pthread_once(&slic_bs_is_initialised, WavePropagation_static_init);
	CHECK_NULL(stored_maxfile, "Maxfile was not loaded", NULL);
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = WavePropagation_convert_internal(stored_maxfile, &interface_actions, 1, &cb_func, &cb_data);
	CHECK_NULL(actions, "Unable to build actions", NULL);
	max_validate(actions);
	CHECK_ERRORS_ST(actions, NULL);
	CHECK_ERRORS_ST(stored_engine, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(stored_engine, actions);
	} else {
		run = max_run_nonblock_with_cb(stored_engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	CHECK_ERRORS_ST(actions, NULL);
	max_actions_free(actions);
	return run;
}

void WavePropagation_run(
	max_engine_t *engine,
	WavePropagation_actions_t *interface_actions)
{
	max_run_t *run = WavePropagation_run_nonblock(engine, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}

max_run_t *WavePropagation_run_nonblock(
	max_engine_t *engine,
	WavePropagation_actions_t *interface_actions)
{
	max_file_t *maxfile = max_engine_get_max_file(engine); 
	void (*cb_func)(void*) = NULL;
	void  *cb_data         = NULL;
	max_actions_t *actions = WavePropagation_convert_internal(maxfile, interface_actions, 1, &cb_func, &cb_data);
	CHECK_NULL(actions, "Unable to build actions", NULL);
	max_validate(actions);
	CHECK_ERRORS_ST(actions, NULL);
	max_run_t *run;
	if (cb_func == NULL) {
		run = max_run_nonblock(engine, actions);
	} else {
		run = max_run_nonblock_with_cb(engine, actions, cb_func, cb_data);
	}
	CHECK_NULL(run, "Unable to run actions", NULL);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Group run advanced static function for the interface 'default'.
 * 
 * \param [in] group Group to use.
 * \param [in,out] interface_actions Actions to run.
 *
 * Run the actions on the first device available in the group.
 */
void WavePropagation_run_group(max_group_t *group, WavePropagation_actions_t *interface_actions)
{
	max_run_t *run = WavePropagation_run_group_nonblock(group, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Group run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule the actions to run on the first device available in the group and return immediately.
 * The status of the run must be checked with ::max_wait. 
 * Note that use of ::max_nowait is prohibited with non-blocking running on groups:
 * see the ::max_run_group_nonblock documentation for more explanation.
 *
 * \param [in] group Group to use.
 * \param [in] interface_actions Actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *WavePropagation_run_group_nonblock(max_group_t *group, WavePropagation_actions_t *interface_actions)
{
	max_file_t *maxfile = max_group_get_max_file(group);
	max_actions_t *actions = WavePropagation_convert_internal(maxfile, interface_actions, 1, NULL, NULL);
	if(actions == NULL) return NULL;
	if(!max_ok(actions->errors)) return NULL;
	max_validate(actions);
	max_run_t *run = max_run_group_nonblock(group, actions);
	max_actions_free(actions);
	return run;
}


/**
 * \brief Array run advanced static function for the interface 'default'.
 * 
 * \param [in] engarray The array of devices to use.
 * \param [in,out] interface_actions The array of actions to run.
 *
 * Run the array of actions on the array of engines.  The length of interface_actions
 * must match the size of engarray.
 */
void WavePropagation_run_array(max_engarray_t *engarray, WavePropagation_actions_t *interface_actions[])
{
	max_run_t *run = WavePropagation_run_array_nonblock(engarray, interface_actions);
	CHECK_NULL(run, "Unable to run actions", );
	max_wait(run);
}


/**
 * \brief Array run advanced static non-blocking function for the interface 'default'.
 * 
 *
 * Schedule to run the array of actions on the array of engines, and return immediately.
 * The length of interface_actions must match the size of engarray.
 * The status of the run can be checked either by ::max_wait or ::max_nowait;
 * note that one of these *must* be called, so that associated memory can be released.
 *
 * \param [in] engarray The array of devices to use.
 * \param [in] interface_actions The array of actions to run.
 * \return A handle on the execution status of the actions, or NULL in case of error.
 */
max_run_t *WavePropagation_run_array_nonblock(max_engarray_t *engarray, WavePropagation_actions_t *interface_actions[])
{
	max_file_t *maxfile = max_engarray_get_max_file(engarray, 0);
	int i;
	max_actarray_t *actarray = max_actarray_init(maxfile, engarray->size);
	if (actarray == NULL) return NULL;
	max_actions_t **arr_actions = malloc(engarray->size * sizeof(max_actions_t*));
	for ( i = 0 ; i < actarray->size; i++ ) {
		max_actions_t *actions = WavePropagation_convert_internal(maxfile, interface_actions[i], 1, NULL, NULL);
		if (actions == NULL) return NULL;
		arr_actions[i] = actions;
		max_set_action(actarray, i, actions);
	}
	max_run_t *run = max_run_array_nonblock(engarray, actarray);
	for ( i = 0 ; i < actarray->size ; i++ ) { max_actions_free(arr_actions[i]); }
	max_actarray_free(actarray);
	free(arr_actions);
	return run;
}


/**
 * \brief Converts a static-interface action struct into a dynamic-interface max_actions_t struct.
 *
 * Note that this is an internal utility function used by other functions in the static interface.
 *
 * \param [in] maxfile The maxfile to use.
 * \param [in] interface_actions The interface-specific actions to run.
 * \return The dynamic-interface actions to run, or NULL in case of error.
 */
max_actions_t* WavePropagation_convert(max_file_t *maxfile, WavePropagation_actions_t *interface_actions)
{
	return WavePropagation_convert_internal(maxfile, interface_actions, 0, NULL, NULL);
}

#undef CHECK_ERRORS_ST
#undef CHECK_NULL



#endif /* SLIC_USE_DEFINITIONS */

#ifdef SLIC_DYNAMIC_CODE
SLIC_MODE_START(default)	
SLIC_PARAMETER_UINT64(int32_t, nx, param_nx)	
SLIC_OFFSET(WavePropagationKernel, nx, param_nx)	
SLIC_PARAMETER_UINT64(int32_t, nz, param_nz)	
SLIC_TEMP_VAR(int64_t tmp_0 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 8)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4);)	
SLIC_SET_TICKS(WavePropagationKernel, tmp_0)	
SLIC_PARAMETER_DOUBLE(float, dtdx2, param_dtdx2)	
SLIC_SCALAR_DOUBLE(WavePropagationKernel, dtdx2, param_dtdx2)	
SLIC_TEMP_VAR(int64_t tmp_1 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 8)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4) * (int64_t) 4);)	
SLIC_STREAM(absorb, tmp_1)	
SLIC_TEMP_VAR(int64_t tmp_2 = ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) ( (int64_t) param_nx * (int64_t) ( (int64_t) param_nz - (int64_t) 2)) / (int64_t) 4) + (int64_t) 1) * (int64_t) 4) * (int64_t) 4);)	
SLIC_STREAM(curr, tmp_2)	
SLIC_STREAM(density, tmp_2)	
SLIC_STREAM(prev, tmp_1)	
SLIC_STREAM(velocity, tmp_1)	
SLIC_STREAM(nxt, tmp_1)	
SLIC_MODE_END(default)

#endif /* SLIC_DYNAMIC_CODE */

#ifdef SKIN_META_DATA
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PG1h
eGZpbGUgZm9ybWF0LXZlcnNpb249IjIwMTIwMjAwIiBoZWFkZXI9IldhdmVQcm9wYWdhdGlvbi5o
IiBuYW1lPSJXYXZlUHJvcGFnYXRpb24iPjxjb25zdGFudCBuYW1lPSJQQ0lFX0FMSUdOTUVOVCIg
dHlwZT0ibG9uZyIgdmFsdWU9IjE2Ii8+PGVuZ2luZW1vZGUgbmFtZT0iZGVmYXVsdCI+PGZ1bmN0
aW9uIG5hbWU9IldhdmVQcm9wYWdhdGlvbiIgcmV0dXJuLXZhbHVlPSJ2b2lkIj48c2NhbGFyIGRl
c2M9IkludGVyZmFjZSBQYXJhbWV0ZXIgJnF1b3Q7ZHRkeDImcXVvdDsuIiBkaXJlY3Rpb249Iklu
cHV0IiBuYW1lPSJwYXJhbV9kdGR4MiIgdHlwZT0iZmxvYXQiLz48c2NhbGFyIGRlc2M9IkludGVy
ZmFjZSBQYXJhbWV0ZXIgJnF1b3Q7bngmcXVvdDsuIiBkaXJlY3Rpb249IklucHV0IiBuYW1lPSJw
YXJhbV9ueCIgdHlwZT0iaW50MzJfdCIvPjxzY2FsYXIgZGVzYz0iSW50ZXJmYWNlIFBhcmFtZXRl
ciAmcXVvdDtueiZxdW90Oy4iIGRpcmVjdGlvbj0iSW5wdXQiIG5hbWU9InBhcmFtX256IiB0eXBl
PSJpbnQzMl90Ii8+PGFycmF5IGRlc2M9IlRoZSBzdHJlYW0gc2hvdWxkIGJlIG9mIHNpemUgKCAo
ICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSAqIDQpIGJ5
dGVzLiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0iaW5zdHJlYW1fYWJzb3JiIiBzaXplPSIoICgg
KCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkgKyAxKSAqIDQpICogNCkiIHRy
YW5zcG9zZT0idHJ1ZSIgdHlwZT0iZmxvYXQiPjxkaW1lbnNpb24gaW5kZXg9IjAiPjxsZW5ndGg+
PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9Ii8iIHZhbHVlPSIoICgg
KCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpICogNCkgKiA0KSAv
IDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9
IiggKCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpICogNCkgKiA0
KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9IioiIHZhbHVlPSIo
ICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSI+PGZ1bmN0
aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9IisiIHZhbHVlPSIoICggKCBwYXJh
bV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5h
cnlPcGVyYXRvciBvcGVyYXRvcj0iLyIgdmFsdWU9IiggKCBwYXJhbV9ueCAqICggcGFyYW1fbnog
LSA4KSkgLyA0KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9Iioi
IHZhbHVlPSIoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSI+PHVzZXJQYXJhbSB2YWx1ZT0i
cGFyYW1fbngiLz48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iLSIg
dmFsdWU9IiggcGFyYW1fbnogLSA4KSI+PHVzZXJQYXJhbSB2YWx1ZT0icGFyYW1fbnoiLz48Y29u
c3RhbnRWYWx1ZSB2YWx1ZT0iOCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+
PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0i
NCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50VmFsdWUgdmFs
dWU9IjEiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFudFZhbHVl
IHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRW
YWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0
YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjwv
bGVuZ3RoPjwvZGltZW5zaW9uPjwvYXJyYXk+PGFycmF5IGRlc2M9IlRoZSBzdHJlYW0gc2hvdWxk
IGJlIG9mIHNpemUgKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDIpKSAvIDQpICsg
MSkgKiA0KSAqIDQpIGJ5dGVzLiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0iaW5zdHJlYW1fY3Vy
ciIgc2l6ZT0iKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDIpKSAvIDQpICsgMSkg
KiA0KSAqIDQpIiB0cmFuc3Bvc2U9InRydWUiIHR5cGU9ImZsb2F0Ij48ZGltZW5zaW9uIGluZGV4
PSIwIj48bGVuZ3RoPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIv
IiB2YWx1ZT0iKCAoICggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gMikpIC8gNCkgKyAx
KSAqIDQpICogNCkgLyA0KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0
b3I9IioiIHZhbHVlPSIoICggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gMikpIC8gNCkg
KyAxKSAqIDQpICogNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9y
PSIqIiB2YWx1ZT0iKCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSAyKSkgLyA0KSArIDEp
ICogNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIrIiB2YWx1
ZT0iKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gMikpIC8gNCkgKyAxKSI+PGZ1bmN0aW9u
Q2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9Ii8iIHZhbHVlPSIoICggcGFyYW1fbngg
KiAoIHBhcmFtX256IC0gMikpIC8gNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9y
IG9wZXJhdG9yPSIqIiB2YWx1ZT0iKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSAyKSkiPjx1c2Vy
UGFyYW0gdmFsdWU9InBhcmFtX254Ii8+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Ig
b3BlcmF0b3I9Ii0iIHZhbHVlPSIoIHBhcmFtX256IC0gMikiPjx1c2VyUGFyYW0gdmFsdWU9InBh
cmFtX256Ii8+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjIiLz48L251bUJpbmFyeU9wZXJhdG9yPjwv
ZnVuY3Rpb25DYWxsPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50
VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25z
dGFudFZhbHVlIHZhbHVlPSIxIi8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48
Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNh
bGw+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rp
b25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1
bmN0aW9uQ2FsbD48L2xlbmd0aD48L2RpbWVuc2lvbj48L2FycmF5PjxhcnJheSBkZXNjPSJUaGUg
c3RyZWFtIHNob3VsZCBiZSBvZiBzaXplICggKCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnog
LSAyKSkgLyA0KSArIDEpICogNCkgKiA0KSBieXRlcy4iIGRpcmVjdGlvbj0iSW5wdXQiIG5hbWU9
Imluc3RyZWFtX2RlbnNpdHkiIHNpemU9IiggKCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnog
LSAyKSkgLyA0KSArIDEpICogNCkgKiA0KSIgdHJhbnNwb3NlPSJ0cnVlIiB0eXBlPSJmbG9hdCI+
PGRpbWVuc2lvbiBpbmRleD0iMCI+PGxlbmd0aD48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVy
YXRvciBvcGVyYXRvcj0iLyIgdmFsdWU9IiggKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9u
eiAtIDIpKSAvIDQpICsgMSkgKiA0KSAqIDQpIC8gNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFy
eU9wZXJhdG9yIG9wZXJhdG9yPSIqIiB2YWx1ZT0iKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJh
bV9ueiAtIDIpKSAvIDQpICsgMSkgKiA0KSAqIDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlP
cGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9IiggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256
IC0gMikpIC8gNCkgKyAxKSAqIDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBv
cGVyYXRvcj0iKyIgdmFsdWU9IiggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDIpKSAvIDQp
ICsgMSkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIvIiB2YWx1
ZT0iKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDIpKSAvIDQpIj48ZnVuY3Rpb25DYWxsPjxu
dW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9IiggcGFyYW1fbnggKiAoIHBhcmFt
X256IC0gMikpIj48dXNlclBhcmFtIHZhbHVlPSJwYXJhbV9ueCIvPjxmdW5jdGlvbkNhbGw+PG51
bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSItIiB2YWx1ZT0iKCBwYXJhbV9ueiAtIDIpIj48dXNl
clBhcmFtIHZhbHVlPSJwYXJhbV9ueiIvPjxjb25zdGFudFZhbHVlIHZhbHVlPSIyIi8+PC9udW1C
aW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rp
b25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1
bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iMSIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+
PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJh
dG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlP
cGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmlu
YXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PC9sZW5ndGg+PC9kaW1lbnNpb24+PC9hcnJheT48
YXJyYXkgZGVzYz0iVGhlIHN0cmVhbSBzaG91bGQgYmUgb2Ygc2l6ZSAoICggKCAoICggcGFyYW1f
bnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkgKyAxKSAqIDQpICogNCkgYnl0ZXMuIiBkaXJlY3Rp
b249IklucHV0IiBuYW1lPSJpbnN0cmVhbV9wcmV2IiBzaXplPSIoICggKCAoICggcGFyYW1fbngg
KiAoIHBhcmFtX256IC0gOCkpIC8gNCkgKyAxKSAqIDQpICogNCkiIHRyYW5zcG9zZT0idHJ1ZSIg
dHlwZT0iZmxvYXQiPjxkaW1lbnNpb24gaW5kZXg9IjAiPjxsZW5ndGg+PGZ1bmN0aW9uQ2FsbD48
bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9Ii8iIHZhbHVlPSIoICggKCAoICggKCBwYXJhbV9u
eCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpICogNCkgKiA0KSAvIDQpIj48ZnVuY3Rpb25D
YWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9IiggKCAoICggKCBwYXJh
bV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpICogNCkgKiA0KSI+PGZ1bmN0aW9uQ2Fs
bD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9IioiIHZhbHVlPSIoICggKCAoIHBhcmFtX254
ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmlu
YXJ5T3BlcmF0b3Igb3BlcmF0b3I9IisiIHZhbHVlPSIoICggKCBwYXJhbV9ueCAqICggcGFyYW1f
bnogLSA4KSkgLyA0KSArIDEpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVy
YXRvcj0iLyIgdmFsdWU9IiggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSI+PGZ1
bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9IioiIHZhbHVlPSIoIHBhcmFt
X254ICogKCBwYXJhbV9ueiAtIDgpKSI+PHVzZXJQYXJhbSB2YWx1ZT0icGFyYW1fbngiLz48ZnVu
Y3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iLSIgdmFsdWU9IiggcGFyYW1f
bnogLSA4KSI+PHVzZXJQYXJhbSB2YWx1ZT0icGFyYW1fbnoiLz48Y29uc3RhbnRWYWx1ZSB2YWx1
ZT0iOCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PC9udW1CaW5hcnlPcGVy
YXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5
T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjEiLz48L251bUJp
bmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9u
dW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIv
PjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50VmFsdWUgdmFsdWU9
IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjwvbGVuZ3RoPjwvZGltZW5z
aW9uPjwvYXJyYXk+PGFycmF5IGRlc2M9IlRoZSBzdHJlYW0gc2hvdWxkIGJlIG9mIHNpemUgKCAo
ICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSAqIDQpIGJ5
dGVzLiIgZGlyZWN0aW9uPSJJbnB1dCIgbmFtZT0iaW5zdHJlYW1fdmVsb2NpdHkiIHNpemU9Iigg
KCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSArIDEpICogNCkgKiA0KSIg
dHJhbnNwb3NlPSJ0cnVlIiB0eXBlPSJmbG9hdCI+PGRpbWVuc2lvbiBpbmRleD0iMCI+PGxlbmd0
aD48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iLyIgdmFsdWU9Iigg
KCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSAqIDQp
IC8gNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIqIiB2YWx1
ZT0iKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkgKiA0KSAq
IDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iKiIgdmFsdWU9
IiggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkgKyAxKSAqIDQpIj48ZnVu
Y3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0iKyIgdmFsdWU9IiggKCAoIHBh
cmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsgMSkiPjxmdW5jdGlvbkNhbGw+PG51bUJp
bmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIvIiB2YWx1ZT0iKCAoIHBhcmFtX254ICogKCBwYXJhbV9u
eiAtIDgpKSAvIDQpIj48ZnVuY3Rpb25DYWxsPjxudW1CaW5hcnlPcGVyYXRvciBvcGVyYXRvcj0i
KiIgdmFsdWU9IiggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIj48dXNlclBhcmFtIHZhbHVl
PSJwYXJhbV9ueCIvPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIt
IiB2YWx1ZT0iKCBwYXJhbV9ueiAtIDgpIj48dXNlclBhcmFtIHZhbHVlPSJwYXJhbV9ueiIvPjxj
b25zdGFudFZhbHVlIHZhbHVlPSI4Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2Fs
bD48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVl
PSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29uc3RhbnRWYWx1ZSB2
YWx1ZT0iMSIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0YW50VmFs
dWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxjb25zdGFu
dFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2FsbD48Y29u
c3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+
PC9sZW5ndGg+PC9kaW1lbnNpb24+PC9hcnJheT48YXJyYXkgZGVzYz0iVGhlIHN0cmVhbSBzaG91
bGQgYmUgb2Ygc2l6ZSAoICggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkg
KyAxKSAqIDQpICogNCkgYnl0ZXMuIiBkaXJlY3Rpb249Ik91dHB1dCIgbmFtZT0ib3V0c3RyZWFt
X254dCIgc2l6ZT0iKCAoICggKCAoIHBhcmFtX254ICogKCBwYXJhbV9ueiAtIDgpKSAvIDQpICsg
MSkgKiA0KSAqIDQpIiB0cmFuc3Bvc2U9InRydWUiIHR5cGU9ImZsb2F0Ij48ZGltZW5zaW9uIGlu
ZGV4PSIwIj48bGVuZ3RoPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9y
PSIvIiB2YWx1ZT0iKCAoICggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkg
KyAxKSAqIDQpICogNCkgLyA0KSI+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3Bl
cmF0b3I9IioiIHZhbHVlPSIoICggKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8g
NCkgKyAxKSAqIDQpICogNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJh
dG9yPSIqIiB2YWx1ZT0iKCAoICggKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkgLyA0KSAr
IDEpICogNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJhdG9yIG9wZXJhdG9yPSIrIiB2
YWx1ZT0iKCAoICggcGFyYW1fbnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkgKyAxKSI+PGZ1bmN0
aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0b3Igb3BlcmF0b3I9Ii8iIHZhbHVlPSIoICggcGFyYW1f
bnggKiAoIHBhcmFtX256IC0gOCkpIC8gNCkiPjxmdW5jdGlvbkNhbGw+PG51bUJpbmFyeU9wZXJh
dG9yIG9wZXJhdG9yPSIqIiB2YWx1ZT0iKCBwYXJhbV9ueCAqICggcGFyYW1fbnogLSA4KSkiPjx1
c2VyUGFyYW0gdmFsdWU9InBhcmFtX254Ii8+PGZ1bmN0aW9uQ2FsbD48bnVtQmluYXJ5T3BlcmF0
b3Igb3BlcmF0b3I9Ii0iIHZhbHVlPSIoIHBhcmFtX256IC0gOCkiPjx1c2VyUGFyYW0gdmFsdWU9
InBhcmFtX256Ii8+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjgiLz48L251bUJpbmFyeU9wZXJhdG9y
PjwvZnVuY3Rpb25DYWxsPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlvbkNhbGw+PGNvbnN0
YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVuY3Rpb25DYWxsPjxj
b25zdGFudFZhbHVlIHZhbHVlPSIxIi8+PC9udW1CaW5hcnlPcGVyYXRvcj48L2Z1bmN0aW9uQ2Fs
bD48Y29uc3RhbnRWYWx1ZSB2YWx1ZT0iNCIvPjwvbnVtQmluYXJ5T3BlcmF0b3I+PC9mdW5jdGlv
bkNhbGw+PGNvbnN0YW50VmFsdWUgdmFsdWU9IjQiLz48L251bUJpbmFyeU9wZXJhdG9yPjwvZnVu
Y3Rpb25DYWxsPjxjb25zdGFudFZhbHVlIHZhbHVlPSI0Ii8+PC9udW1CaW5hcnlPcGVyYXRvcj48
L2Z1bmN0aW9uQ2FsbD48L2xlbmd0aD48L2RpbWVuc2lvbj48L2FycmF5PjwvZnVuY3Rpb24+PC9l
bmdpbmVtb2RlPjwvbWF4ZmlsZT4=
#endif /* SKIN_META_DATA */

#ifdef SLIC_B64_DEFINITIONS
I2luY2x1ZGUgPHN0ZGlvLmg+CiNpbmNsdWRlIDxtYXRoLmg+CiNpbmNsdWRlIDxwdGhyZWFkLmg+
CiNpbmNsdWRlIDxzdHJpbmcuaD4KI2luY2x1ZGUgPHVuaXN0ZC5oPgojaW5jbHVkZSA8c3RkbGli
Lmg+CnN0YXRpYyBtYXhfZmlsZV90ICpzdG9yZWRfbWF4ZmlsZSA9IE5VTEw7CnN0YXRpYyBtYXhf
ZW5naW5lX3QgKnN0b3JlZF9lbmdpbmUgPSBOVUxMOwpzdGF0aWMgY2hhciAqc3RvcmVkX2Vycm9y
ID0gTlVMTDsKc3RhdGljIGludCBzdG9yZWRfaGFzX2Vycm9yID0gMDsKc3RhdGljIHB0aHJlYWRf
b25jZV90IHNsaWNfYnNfaXNfaW5pdGlhbGlzZWQgPSBQVEhSRUFEX09OQ0VfSU5JVDsKCnN0YXRp
YyB2b2lkIHNldF9lcnJvcihjb25zdCBjaGFyICplcnJvcl9zdHIpCnsKCXN0b3JlZF9oYXNfZXJy
b3IgPSAxOyAKCWlmKHN0b3JlZF9lcnJvciA9PSBOVUxMKSB7CgkJc3RvcmVkX2Vycm9yID0gc3Ry
ZHVwKGVycm9yX3N0cik7Cgl9IGVsc2UgewoJCWNoYXIgKm5lcnIgPSBtYWxsb2Moc3RybGVuKHN0
b3JlZF9lcnJvcikgKyBzdHJsZW4oZXJyb3Jfc3RyKSArIDIpOwoJCXNwcmludGYobmVyciwgIiVz
XG4lcyIsIHN0b3JlZF9lcnJvciwgZXJyb3Jfc3RyKTsKCQlmcmVlKHN0b3JlZF9lcnJvcik7CgkJ
c3RvcmVkX2Vycm9yID0gbmVycjsKCX0KfQpzdGF0aWMgdm9pZCBzZXRfZXJyb3JfYW5kX2ZyZWUo
Y2hhciAqZXJyb3Jfc3RyKXsKCXNldF9lcnJvcihlcnJvcl9zdHIpOwoJZnJlZShlcnJvcl9zdHIp
Owp9CmludCBXYXZlUHJvcGFnYXRpb25faGFzX2Vycm9ycyh2b2lkKQp7CXJldHVybiBzdG9yZWRf
aGFzX2Vycm9yOyB9CmNvbnN0IGNoYXIqIFdhdmVQcm9wYWdhdGlvbl9nZXRfZXJyb3JzKHZvaWQp
CnsJcmV0dXJuIHN0b3JlZF9lcnJvcjsgfQp2b2lkIFdhdmVQcm9wYWdhdGlvbl9jbGVhcl9lcnJv
cnModm9pZCkKewoJZnJlZShzdG9yZWRfZXJyb3IpOwoJc3RvcmVkX2Vycm9yID0gTlVMTDsKCXN0
b3JlZF9oYXNfZXJyb3IgPSAwOwp9CgpzdGF0aWMgY2hhciBXYXZlUHJvcGFnYXRpb25fdXNlX3Np
bXVsYXRpb25bMTZdOwpzdGF0aWMgdm9pZCBXYXZlUHJvcGFnYXRpb25fZGVmX3VzZV9zaW11bGF0
aW9uKHZvaWQpCnsKCWxvbmcgcGlkID0gKChsb25nKSBnZXRwaWQoKSkgJSAxMDAwMDA7CglzbnBy
aW50ZihXYXZlUHJvcGFnYXRpb25fdXNlX3NpbXVsYXRpb24sIDE2LCAiV2F2ZVByb3BfJTA1bGRf
IiwgcGlkKTsKfQpzdGF0aWMgY29uc3QgY2hhciAqV2F2ZVByb3BhZ2F0aW9uX2NoZWNrX3VzZV9z
aW11bGF0aW9uKHZvaWQpCnsKCVdhdmVQcm9wYWdhdGlvbl9kZWZfdXNlX3NpbXVsYXRpb24oKTsK
CWNvbnN0IGNoYXIgKnVzZV9zaW0gPSBtYXhfY29uZmlnX2dldF9zdHJpbmcoTUFYX0NPTkZJR19V
U0VfU0lNVUxBVElPTik7CglpZiAodXNlX3NpbSA9PSBOVUxMKSB7CgkJdXNlX3NpbSA9IFdhdmVQ
cm9wYWdhdGlvbl91c2Vfc2ltdWxhdGlvbjsKCQltYXhfY29uZmlnX3NldF9zdHJpbmcoTUFYX0NP
TkZJR19VU0VfU0lNVUxBVElPTiwgdXNlX3NpbSk7Cgl9CglyZXR1cm4gdXNlX3NpbTsKfQoKc3Rh
dGljIGludCBXYXZlUHJvcGFnYXRpb25fc2ltdWxhdGlvbl9sYXVuY2ggPSAwOwppbnQgV2F2ZVBy
b3BhZ2F0aW9uX3NpbXVsYXRvcl9zdGFydCh2b2lkKQp7CglpbnQgcmV0dmFsID0gMDsKCWNvbnN0
IGNoYXIgKnVzZV9zaW0gPSBXYXZlUHJvcGFnYXRpb25fY2hlY2tfdXNlX3NpbXVsYXRpb24oKTsK
CWNoYXIgYnVmZlsxMDI0XTsKCXNucHJpbnRmKGJ1ZmYsIDEwMjQsICJQQVRIPXNpbXV0aWxzOiRQ
QVRIIG1heGNvbXBpbGVyc2ltIC1kIDEgLW4gJXMgLWMgTUFYNUMgLVMgc2ltdXRpbHMgcmVzdGFy
dCIsIHVzZV9zaW0pOwoJRklMRSAqcGlwZV9mcCA9IHBvcGVuKGJ1ZmYsICJyIik7CglpZiAocGlw
ZV9mcCA9PSBOVUxMKSB7CgkJc3RybmNhdChidWZmLCAiIDogZmFpbGVkIHRvIGV4ZWN1dGUuIiwg
KDEwMjQgLSBzdHJsZW4oYnVmZikpKTsKCQlzZXRfZXJyb3IoYnVmZik7CgkJcmV0dXJuIC0xOwoJ
fQoJd2hpbGUgKGZnZXRzKGJ1ZmYsIDEwMjQsIHBpcGVfZnApICE9IE5VTEwpIHsKCQkvKiBVbmNv
bW1lbnQgdGhpcyB0byBnZXQgc2ltdWxhdG9yIGNvbW1hbmQgb3V0cHV0ICovCgkJLyogZnByaW50
ZihzdGRlcnIsIGJ1ZmYpOyAqLwoJCWlmIChzdHJzdHIoYnVmZiwgIkVycm9yIikpIHsKCQkJc2V0
X2Vycm9yKGJ1ZmYpOwoJCQlyZXR2YWwgPSAtMTsKCQl9Cgl9CglwY2xvc2UocGlwZV9mcCk7Cgly
ZXR1cm4gcmV0dmFsOwp9CgppbnQgV2F2ZVByb3BhZ2F0aW9uX3NpbXVsYXRvcl9zdG9wKHZvaWQp
CnsKCWNvbnN0IGNoYXIgKnVzZV9zaW0gPSBXYXZlUHJvcGFnYXRpb25fY2hlY2tfdXNlX3NpbXVs
YXRpb24oKTsKCWNoYXIgYnVmZlsxMDI0XTsKCXNucHJpbnRmKGJ1ZmYsIDEwMjQsICJQQVRIPXNp
bXV0aWxzOiRQQVRIIG1heGNvbXBpbGVyc2ltIC1kIDEgLW4gJXMgLWMgTUFYNUMgLVMgc2ltdXRp
bHMgc3RvcCIsIHVzZV9zaW0pOwoJRklMRSAqcGlwZV9mcCA9IHBvcGVuKGJ1ZmYsICJyIik7Cglp
ZiAocGlwZV9mcCA9PSBOVUxMKSB7CgkJc3RybmNhdChidWZmLCAiIDogZmFpbGVkIHRvIGV4ZWN1
dGUuIiwgKDEwMjQgLSBzdHJsZW4oYnVmZikpKTsKCQlzZXRfZXJyb3IoYnVmZik7CgkJcmV0dXJu
IC0xOwoJfQoJd2hpbGUgKGZnZXRzKGJ1ZmYsIDEwMjQsIHBpcGVfZnApICE9IE5VTEwpIHsKCQkv
KiBVbmNvbW1lbnQgdGhpcyB0byBnZXQgc2ltdWxhdG9yIGNvbW1hbmQgb3V0cHV0ICovCgkJLyog
ZnByaW50ZihzdGRlcnIsIGJ1ZmYpOyAqLwoJCTsKCX0KCXBjbG9zZShwaXBlX2ZwKTsKCXJldHVy
biAwOwp9CgpzdGF0aWMgdm9pZCBXYXZlUHJvcGFnYXRpb25fc3RhdGljX2luaXQodm9pZCkgCnsK
CXN0b3JlZF9tYXhmaWxlID0gV2F2ZVByb3BhZ2F0aW9uX2luaXQoKTsKCWlmIChzdG9yZWRfbWF4
ZmlsZSA9PSBOVUxMIHx8ICFtYXhfb2soc3RvcmVkX21heGZpbGUtPmVycm9ycykpIHsKCQlzdG9y
ZWRfbWF4ZmlsZSA9IE5VTEw7CgkJaWYobWF4X2NvbmZpZ19nZXRfYm9vbChNQVhfQ09ORklHX1NU
QVRJQ19JTlRFUkZBQ0VfQUJPUlRfT05fRVJST1IpKSBhYm9ydCgpOwoJCWVsc2UgeyBzZXRfZXJy
b3IoIlVuYWJsZSB0byBsb2FkIG1heGZpbGUiKTsgcmV0dXJuOyB9Cgl9CglpZighbWF4X29rKG1h
eF9nbG9iYWxfZXJyb3JzKCkpKSB7CgkJc2V0X2Vycm9yX2FuZF9mcmVlKG1heF9lcnJvcnNfdHJh
Y2UobWF4X2dsb2JhbF9lcnJvcnMoKSkpOwoJCXJldHVybjsKCX0KCWlmKCFtYXhfY29uZmlnX2dl
dF9ib29sKE1BWF9DT05GSUdfU1RBVElDX0lOVEVSRkFDRV9BQk9SVF9PTl9FUlJPUikpCgkJbWF4
X2Vycm9yc19tb2RlKHN0b3JlZF9tYXhmaWxlLT5lcnJvcnMsIDApOwoJdGltZV90IHRpbWVvdXRf
cHJldmlvdXMgPSBtYXhfbG9hZF90aW1lb3V0KHN0b3JlZF9tYXhmaWxlLCAzMCk7Cgljb25zdCBj
aGFyICp1c2Vfc2ltID0gV2F2ZVByb3BhZ2F0aW9uX2NoZWNrX3VzZV9zaW11bGF0aW9uKCk7Cglp
ZiAobWF4X3BpbmdfZGFlbW9uKHN0b3JlZF9tYXhmaWxlLCB1c2Vfc2ltKSA9PSAwKSB7CgkJaW50
IHNpbV9zdGF0ID0gV2F2ZVByb3BhZ2F0aW9uX3NpbXVsYXRvcl9zdGFydCgpOwoJCWlmICgoc2lt
X3N0YXQgPT0gMCkgJiYgKG1heF9waW5nX2RhZW1vbihzdG9yZWRfbWF4ZmlsZSwgdXNlX3NpbSkg
PT0gMSkpIHsKCQkJV2F2ZVByb3BhZ2F0aW9uX3NpbXVsYXRpb25fbGF1bmNoID0gMTsKCQl9IGVs
c2UgewoJCQlzZXRfZXJyb3IoIkVycm9yOiBBbiBlcnJvciBvY2N1cnJlZCB3aGlsZSB0cnlpbmcg
dG8gc3RhcnQgdGhlIHNpbXVsYXRpb24gaW5mcmFzdHJ1Y3R1cmUgYXV0b21hdGljYWxseS4iKTsK
CQkJc2V0X2Vycm9yKCJFcnJvcjogQ2hlY2sgdGhhdCAndXNlX3NpbXVsYXRpb249PHNpbXVsYXRv
cl9uYW1lPicgaXMgc2V0IGNvcnJlY3RseSBpbiB5b3VyIFNMaUMgY29uZmlndXJhdGlvbiIpOwoJ
CQlzZXRfZXJyb3IoIkVycm9yOiBhbmQgdGhhdCB0aGUgYXNzb2NpYXRlZCBzaW11bGF0ZWQgc3lz
dGVtIGRhZW1vbiBpcyBydW5uaW5nLiIpOwoJCQltYXhfZmlsZV9mcmVlKHN0b3JlZF9tYXhmaWxl
KTsKCQkJc3RvcmVkX21heGZpbGUgPSBOVUxMOwoJCQlyZXR1cm47CgkJfQoJfQoJc3RvcmVkX2Vu
Z2luZSA9IG1heF9sb2FkKHN0b3JlZF9tYXhmaWxlLCAiKiIpOwoJaWYgKCFtYXhfb2soc3RvcmVk
X21heGZpbGUtPmVycm9ycykpIHsKCQlpZihtYXhfY29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdf
U1RBVElDX0lOVEVSRkFDRV9BQk9SVF9PTl9FUlJPUikpIHsKCQkJZnByaW50ZihzdGRlcnIsICJc
blVuYWJsZSB0byBsb2FkIGVuZ2luZTogYWJvcnRpbmcgbm93LlxuXG4iKTsKCQkJZmZsdXNoKHN0
ZGVycik7CgkJCWFib3J0KCk7CgkJfSBlbHNlIHsKCQkJc2V0X2Vycm9yX2FuZF9mcmVlKG1heF9l
cnJvcnNfdHJhY2Uoc3RvcmVkX21heGZpbGUtPmVycm9ycykpOwoJCQltYXhfZmlsZV9mcmVlKHN0
b3JlZF9tYXhmaWxlKTsKCQkJc3RvcmVkX21heGZpbGUgPSBOVUxMOwoJCQlyZXR1cm47CgkJfSAK
CX0gCgltYXhfbG9hZF90aW1lb3V0KHN0b3JlZF9tYXhmaWxlLCB0aW1lb3V0X3ByZXZpb3VzKTsK
fQp2b2lkIFdhdmVQcm9wYWdhdGlvbl9mcmVlKHZvaWQpCnsKCWlmIChzdG9yZWRfZW5naW5lICE9
IE5VTEwpIHsKCQltYXhfdW5sb2FkKHN0b3JlZF9lbmdpbmUpOwoJCXN0b3JlZF9lbmdpbmUgPSBO
VUxMOwoJfQoJaWYgKHN0b3JlZF9tYXhmaWxlICE9IE5VTEwpIHsKCQltYXhfZmlsZV9mcmVlKHN0
b3JlZF9tYXhmaWxlKTsKCQlzdG9yZWRfbWF4ZmlsZSA9IE5VTEw7Cgl9CglpZiAoc3RvcmVkX2Vy
cm9yICE9IE5VTEwpIHsKCQlmcmVlKHN0b3JlZF9lcnJvcik7CgkJc3RvcmVkX2Vycm9yID0gTlVM
TDsKCX0KCWlmIChXYXZlUHJvcGFnYXRpb25fc2ltdWxhdGlvbl9sYXVuY2ggPT0gMSkgewoJCWlu
dCBzaW1fc3RhdCA9IFdhdmVQcm9wYWdhdGlvbl9zaW11bGF0b3Jfc3RvcCgpOwoJCWlmIChzaW1f
c3RhdCAhPSAwICkgewoJCQlmcHJpbnRmKHN0ZGVyciwgIkVycm9yIHN0b3BwaW5nIHNpbXVsYXRv
ci4iKTsKCQl9CgkJV2F2ZVByb3BhZ2F0aW9uX3NpbXVsYXRpb25fbGF1bmNoID0gMDsKCX0KfQoK
c3RhdGljIGludCBXYXZlUHJvcGFnYXRpb25fZ2V0X3BjaWVfYWxpZ25tZW50KHZvaWQpCnsKI2lm
ZGVmIFdhdmVQcm9wYWdhdGlvbl9QQ0lFX0FMSUdOTUVOVAoJcmV0dXJuICgoV2F2ZVByb3BhZ2F0
aW9uX1BDSUVfQUxJR05NRU5UIDwgMSkgPyAxNiA6IFdhdmVQcm9wYWdhdGlvbl9QQ0lFX0FMSUdO
TUVOVCk7CiNlbHNlCglyZXR1cm4gMTY7CiNlbmRpZgp9CgpzdGF0aWMgaW50IFdhdmVQcm9wYWdh
dGlvbl9jaGVja19hbGlnbmVkKGNvbnN0IHZvaWQgKmRhdGEpCnsKCXVpbnRwdHJfdCBwb2ludGVy
ID0gKHVpbnRwdHJfdCkgZGF0YTsKCWludCBhbGlnbm1lbnQgPSBXYXZlUHJvcGFnYXRpb25fZ2V0
X3BjaWVfYWxpZ25tZW50KCk7CglyZXR1cm4gKHBvaW50ZXIgJSBhbGlnbm1lbnQpID8gMSA6IDA7
Cn0KCnN0YXRpYyB2b2lkICpXYXZlUHJvcGFnYXRpb25fbWFsbG9jX2FsaWduZWQoY29uc3Qgc2l6
ZV90IHNpemUpCnsKCXZvaWQgKnB0cjsKCWludCBhbGlnbm1lbnQgPSBXYXZlUHJvcGFnYXRpb25f
Z2V0X3BjaWVfYWxpZ25tZW50KCk7Cglwb3NpeF9tZW1hbGlnbigmcHRyLCBhbGlnbm1lbnQsIHNp
emUpOwoJcmV0dXJuIHB0cjsKfQoKCgovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwovKi0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0gSW50ZXJmYWNlIGRlZmF1bHQgLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0qLwovKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t
LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0qLwoKCgojZGVmaW5lIENIRUNLX0VS
Uk9SU19TVChTVCwgUkVUKSBpZighbWF4X29rKFNULT5lcnJvcnMpKSB7IGlmKG1heF9jb25maWdf
Z2V0X2Jvb2woTUFYX0NPTkZJR19TVEFUSUNfSU5URVJGQUNFX0FCT1JUX09OX0VSUk9SKSkgeyBm
cHJpbnRmKHN0ZGVyciwgIiVzXG4iLCBtYXhfZXJyb3JzX3RyYWNlKFNULT5lcnJvcnMpKTsgYWJv
cnQoKTsgfSBzZXRfZXJyb3JfYW5kX2ZyZWUobWF4X2Vycm9yc190cmFjZShTVC0+ZXJyb3JzKSk7
IHJldHVybiBSRVQ7IH0gCiNkZWZpbmUgQ0hFQ0tfTlVMTChWQUxVRSwgTUVTU0FHRSwgUkVUKSBp
ZihWQUxVRSA9PSBOVUxMKSB7IGlmIChtYXhfY29uZmlnX2dldF9ib29sKE1BWF9DT05GSUdfU1RB
VElDX0lOVEVSRkFDRV9BQk9SVF9PTl9FUlJPUikpIHsgZnByaW50ZihzdGRlcnIsICIlc1xuJXNc
biIsIChzdG9yZWRfZXJyb3IgPT0gTlVMTCkgPyAiIiA6IHN0b3JlZF9lcnJvciwgTUVTU0FHRSk7
IGFib3J0KCk7IH0gc2V0X2Vycm9yKE1FU1NBR0UpOyByZXR1cm4gUkVUOyB9CgogCnR5cGVkZWYg
c3RydWN0IFdhdmVQcm9wYWdhdGlvbl9jYWxsYmFja19zdHJlYW0gewoJdWludDhfdCAqdXNlcl9w
dHI7Cgl1aW50OF90ICphbGlnbmVkX3B0cjsKCXNpemVfdCAgIHNpemU7CglpbnQgICAgICBpc19v
dXRwdXQ7Cn0gV2F2ZVByb3BhZ2F0aW9uX2NhbGxiYWNrX3N0cmVhbV90OwoKdHlwZWRlZiBzdHJ1
Y3QgV2F2ZVByb3BhZ2F0aW9uX2NhbGxiYWNrX2RhdGEgewoJV2F2ZVByb3BhZ2F0aW9uX2NhbGxi
YWNrX3N0cmVhbV90IHN0cmVhbVs2XTsgCglpbnQgY291bnQ7CglpbnQgbWF4X2NvdW50Owp9IFdh
dmVQcm9wYWdhdGlvbl9jYWxsYmFja19kYXRhX3Q7CgpzdGF0aWMgdm9pZCBXYXZlUHJvcGFnYXRp
b25fY2FsbGJhY2tfaW50ZXJuYWwodm9pZCAqY2JfZGF0YSkKewoJV2F2ZVByb3BhZ2F0aW9uX2Nh
bGxiYWNrX2RhdGFfdCAqZGF0YSA9IChXYXZlUHJvcGFnYXRpb25fY2FsbGJhY2tfZGF0YV90Kikg
Y2JfZGF0YTsKCWZvciAoaW50IGkgPSAwIDsgaSA8IGRhdGEtPmNvdW50IDsgaSsrICkgewoJCVdh
dmVQcm9wYWdhdGlvbl9jYWxsYmFja19zdHJlYW1fdCAqcyA9ICZkYXRhLT5zdHJlYW1baV07CgkJ
aWYgKHMtPmlzX291dHB1dCAmJiAocy0+c2l6ZSA+IDApKSB7CgkJCW1lbWNweShzLT51c2VyX3B0
ciwgcy0+YWxpZ25lZF9wdHIsIHMtPnNpemUpOwoJCX0KCQlmcmVlKHMtPmFsaWduZWRfcHRyKTsK
CX0KCWZyZWUoZGF0YSk7Cn0KCnN0YXRpYyBtYXhfYWN0aW9uc190KiBXYXZlUHJvcGFnYXRpb25f
Y29udmVydF9pbnRlcm5hbCgKCW1heF9maWxlX3QgKm1heGZpbGUsCglXYXZlUHJvcGFnYXRpb25f
YWN0aW9uc190ICppbnRlcmZhY2VfYWN0aW9ucywKCWludCAgaXNfaW50ZXJuYWxfY2FsbCwKCXZv
aWQgKCoqY2FsbGJhY2tfZnVuYykodm9pZCopLAoJdm9pZCAqKmNhbGxiYWNrX2RhdGEpCnsKCW1h
eF9hY3Rpb25zX3QgKmFjdGlvbnMgPSBtYXhfYWN0aW9uc19pbml0KG1heGZpbGUsIE5VTEwpOwoJ
aWYoYWN0aW9ucyA9PSBOVUxMKSByZXR1cm4gTlVMTDsKCiNkZWZpbmUgQ0hFQ0tfRVJST1JTIGlm
KCFtYXhfb2soYWN0aW9ucy0+ZXJyb3JzKSkgeyBzZXRfZXJyb3JfYW5kX2ZyZWUobWF4X2Vycm9y
c190cmFjZShhY3Rpb25zLT5lcnJvcnMpKTsgcmV0dXJuIE5VTEw7IH0gCgoJV2F2ZVByb3BhZ2F0
aW9uX2NhbGxiYWNrX2RhdGFfdCAqY2JfZGF0YSA9IE5VTEw7CglpbnQgdXNlX2NhbGxiYWNrID0g
KGNhbGxiYWNrX2Z1bmMgIT0gTlVMTCkgJiYgKGNhbGxiYWNrX2RhdGEgIT0gTlVMTCk7CglpZiAo
dXNlX2NhbGxiYWNrKSB7CgkJY2JfZGF0YSA9IG1hbGxvYyhzaXplb2YoV2F2ZVByb3BhZ2F0aW9u
X2NhbGxiYWNrX2RhdGFfdCkpOwoJCWlmIChjYl9kYXRhID09IE5VTEwpIHsKCQkJZnByaW50Zihz
dGRlcnIsICJVbmFibGUgdG8gYWxsb2NhdGUgbWVtb3J5IGZvciBzdHJlYW0gY2FsbGJhY2sgZGF0
YSBpbiBmdW5jdGlvbiBXYXZlUHJvcGFnYXRpb25fY29udmVydF9pbnRlcm5hbFxuIik7CgkJCXJl
dHVybiBOVUxMOwoJCX0KCQljYl9kYXRhLT5tYXhfY291bnQgPSA2OwoJCWNiX2RhdGEtPmNvdW50
ICAgICA9IDA7CgkJKmNhbGxiYWNrX2RhdGEgICAgID0gY2JfZGF0YTsKCQkqY2FsbGJhY2tfZnVu
YyAgICAgPSAmV2F2ZVByb3BhZ2F0aW9uX2NhbGxiYWNrX2ludGVybmFsOwoJfQoKCWludDMyX3Qg
cGFyYW1fbnggPSBpbnRlcmZhY2VfYWN0aW9ucy0+cGFyYW1fbng7CgkKCS8qIGNvZGUgZm9yIG9m
ZnNldCBXYXZlUHJvcGFnYXRpb25LZXJuZWxfbngqLwoJbG9uZyBvZmZzZXRfV2F2ZVByb3BhZ2F0
aW9uS2VybmVsX254ID0gcGFyYW1fbng7CgltYXhfc2V0X29mZnNldChhY3Rpb25zLCAiV2F2ZVBy
b3BhZ2F0aW9uS2VybmVsIiwgIm54Iiwgb2Zmc2V0X1dhdmVQcm9wYWdhdGlvbktlcm5lbF9ueCk7
CglDSEVDS19FUlJPUlM7CgkvKiBlbmQgb2YgY29kZSBmb3Igb2Zmc2V0IG9mZnNldF9XYXZlUHJv
cGFnYXRpb25LZXJuZWxfbngqLwoJCglpbnQzMl90IHBhcmFtX256ID0gaW50ZXJmYWNlX2FjdGlv
bnMtPnBhcmFtX256OwoJCglpbnQ2NF90IHRtcF8wID0gKCAoaW50NjRfdCkgKCAoaW50NjRfdCkg
KCAoaW50NjRfdCkgKCAoaW50NjRfdCkgcGFyYW1fbnggKiAoaW50NjRfdCkgKCAoaW50NjRfdCkg
cGFyYW1fbnogLSAoaW50NjRfdCkgOCkpIC8gKGludDY0X3QpIDQpICsgKGludDY0X3QpIDEpICog
KGludDY0X3QpIDQpOwoJCgkvKiBjb2RlIGZvciBzY2FsYXIgV2F2ZVByb3BhZ2F0aW9uS2VybmVs
LnJ1bl9jeWNsZV9jb3VudCAqLwoJdWludDY0X3QgdGlja3NfV2F2ZVByb3BhZ2F0aW9uS2VybmVs
ID0gdG1wXzA7CgltYXhfc2V0X3RpY2tzKGFjdGlvbnMsICJXYXZlUHJvcGFnYXRpb25LZXJuZWwi
LCB0bXBfMCk7CglDSEVDS19FUlJPUlM7CgkvKiBlbmQgb2YgY29kZSBmb3Igc2NhbGFyIFdhdmVQ
cm9wYWdhdGlvbktlcm5lbC5ydW5fY3ljbGVfY291bnQqLwoJCglmbG9hdCBwYXJhbV9kdGR4MiA9
IGludGVyZmFjZV9hY3Rpb25zLT5wYXJhbV9kdGR4MjsKCQoJLyogY29kZSBmb3Igc2NhbGFyIFdh
dmVQcm9wYWdhdGlvbktlcm5lbC5kdGR4MiAqLwoJZG91YmxlIGluc2NhbGFyX1dhdmVQcm9wYWdh
dGlvbktlcm5lbF9kdGR4MiA9IHBhcmFtX2R0ZHgyOwoJbWF4X3NldF9kb3VibGUoYWN0aW9ucywg
IldhdmVQcm9wYWdhdGlvbktlcm5lbCIsICJkdGR4MiIsIGluc2NhbGFyX1dhdmVQcm9wYWdhdGlv
bktlcm5lbF9kdGR4Mik7CglDSEVDS19FUlJPUlM7CgkvKiBlbmQgb2YgY29kZSBmb3Igc2NhbGFy
IFdhdmVQcm9wYWdhdGlvbktlcm5lbC5kdGR4MiovCgkKCWludDY0X3QgdG1wXzEgPSAoIChpbnQ2
NF90KSAoIChpbnQ2NF90KSAoIChpbnQ2NF90KSAoIChpbnQ2NF90KSAoIChpbnQ2NF90KSBwYXJh
bV9ueCAqIChpbnQ2NF90KSAoIChpbnQ2NF90KSBwYXJhbV9ueiAtIChpbnQ2NF90KSA4KSkgLyAo
aW50NjRfdCkgNCkgKyAoaW50NjRfdCkgMSkgKiAoaW50NjRfdCkgNCkgKiAoaW50NjRfdCkgNCk7
CgkKCS8qIGNvZGUgZm9yIHN0cmVhbSBhYnNvcmIgKi8KCXNpemVfdCBpbnN0cmVhbV9zaXplX2Fi
c29yYiA9IHRtcF8xOwoJaWYgKGluc3RyZWFtX3NpemVfYWJzb3JiID4gMCkgewoJCWNvbnN0IGZs
b2F0ICpzdHJlYW1fcHRyID0gaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX2Fic29yYjsKCQlp
ZiAodXNlX2NhbGxiYWNrICYmICgxID09IFdhdmVQcm9wYWdhdGlvbl9jaGVja19hbGlnbmVkKGlu
dGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9hYnNvcmIpKSkgewoJCQlmbG9hdCAqYWxpZ25lZF9p
bnN0cmVhbV9hYnNvcmIgPSBtYWxsb2MoaW5zdHJlYW1fc2l6ZV9hYnNvcmIpOwoJCQlpZiAoYWxp
Z25lZF9pbnN0cmVhbV9hYnNvcmIgPT0gTlVMTCkgewoJCQkJY2hhciBlcnJvcl9tc2dbMjU2XTsK
CQkJCXNucHJpbnRmKGVycm9yX21zZywgc2l6ZW9mKGVycm9yX21zZykgLyBzaXplb2YoY2hhciks
CgkJCQkJCSJGYWlsZWQgdG8gYWxsb2NhdGUgJXp1IGJ5dGVzIG9mIG1lbW9yeSBmb3Igc3RyZWFt
IGFic29yYi4iLAoJCQkJCQlpbnN0cmVhbV9zaXplX2Fic29yYik7CgkJCQltYXhfcmVwb3J0X2Vy
cm9yX3NsaWMoYWN0aW9ucy0+ZXJyb3JzLCBfX0ZJTEVfXywgX19MSU5FX18sIDUyNiwgZXJyb3Jf
bXNnKTsKCQkJCUNIRUNLX0VSUk9SUzsKCQkJfQoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRh
LT5jb3VudF0pLT51c2VyX3B0ciAgICA9ICh1aW50OF90KikgaW50ZXJmYWNlX2FjdGlvbnMtPmlu
c3RyZWFtX2Fic29yYjsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRdKS0+YWxp
Z25lZF9wdHIgPSAodWludDhfdCopIGFsaWduZWRfaW5zdHJlYW1fYWJzb3JiOwoJCQkoJmNiX2Rh
dGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5zaXplICAgICAgICA9IGluc3RyZWFtX3NpemVf
YWJzb3JiOwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5pc19vdXRwdXQg
ICA9IDA7CgkJCWNiX2RhdGEtPmNvdW50ICs9IDE7CgkJCW1lbWNweShhbGlnbmVkX2luc3RyZWFt
X2Fic29yYiwgaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX2Fic29yYiwgaW5zdHJlYW1fc2l6
ZV9hYnNvcmIpOwoJCQlzdHJlYW1fcHRyID0gYWxpZ25lZF9pbnN0cmVhbV9hYnNvcmI7CgkJfQoJ
CW1heF9xdWV1ZV9pbnB1dChhY3Rpb25zLCAiYWJzb3JiIiwgc3RyZWFtX3B0ciwgaW5zdHJlYW1f
c2l6ZV9hYnNvcmIpOwoJCUNIRUNLX0VSUk9SUzsKCX0KCS8qIGVuZCBvZiBjb2RlIGZvciBzdHJl
YW0gYWJzb3JiICovCgkKCWludDY0X3QgdG1wXzIgPSAoIChpbnQ2NF90KSAoIChpbnQ2NF90KSAo
IChpbnQ2NF90KSAoIChpbnQ2NF90KSAoIChpbnQ2NF90KSBwYXJhbV9ueCAqIChpbnQ2NF90KSAo
IChpbnQ2NF90KSBwYXJhbV9ueiAtIChpbnQ2NF90KSAyKSkgLyAoaW50NjRfdCkgNCkgKyAoaW50
NjRfdCkgMSkgKiAoaW50NjRfdCkgNCkgKiAoaW50NjRfdCkgNCk7CgkKCS8qIGNvZGUgZm9yIHN0
cmVhbSBjdXJyICovCglzaXplX3QgaW5zdHJlYW1fc2l6ZV9jdXJyID0gdG1wXzI7CglpZiAoaW5z
dHJlYW1fc2l6ZV9jdXJyID4gMCkgewoJCWNvbnN0IGZsb2F0ICpzdHJlYW1fcHRyID0gaW50ZXJm
YWNlX2FjdGlvbnMtPmluc3RyZWFtX2N1cnI7CgkJaWYgKHVzZV9jYWxsYmFjayAmJiAoMSA9PSBX
YXZlUHJvcGFnYXRpb25fY2hlY2tfYWxpZ25lZChpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJlYW1f
Y3VycikpKSB7CgkJCWZsb2F0ICphbGlnbmVkX2luc3RyZWFtX2N1cnIgPSBtYWxsb2MoaW5zdHJl
YW1fc2l6ZV9jdXJyKTsKCQkJaWYgKGFsaWduZWRfaW5zdHJlYW1fY3VyciA9PSBOVUxMKSB7CgkJ
CQljaGFyIGVycm9yX21zZ1syNTZdOwoJCQkJc25wcmludGYoZXJyb3JfbXNnLCBzaXplb2YoZXJy
b3JfbXNnKSAvIHNpemVvZihjaGFyKSwKCQkJCQkJIkZhaWxlZCB0byBhbGxvY2F0ZSAlenUgYnl0
ZXMgb2YgbWVtb3J5IGZvciBzdHJlYW0gY3Vyci4iLAoJCQkJCQlpbnN0cmVhbV9zaXplX2N1cnIp
OwoJCQkJbWF4X3JlcG9ydF9lcnJvcl9zbGljKGFjdGlvbnMtPmVycm9ycywgX19GSUxFX18sIF9f
TElORV9fLCA1MjYsIGVycm9yX21zZyk7CgkJCQlDSEVDS19FUlJPUlM7CgkJCX0KCQkJKCZjYl9k
YXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRdKS0+dXNlcl9wdHIgICAgPSAodWludDhfdCopIGlu
dGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9jdXJyOwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9k
YXRhLT5jb3VudF0pLT5hbGlnbmVkX3B0ciA9ICh1aW50OF90KikgYWxpZ25lZF9pbnN0cmVhbV9j
dXJyOwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5zaXplICAgICAgICA9
IGluc3RyZWFtX3NpemVfY3VycjsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRd
KS0+aXNfb3V0cHV0ICAgPSAwOwoJCQljYl9kYXRhLT5jb3VudCArPSAxOwoJCQltZW1jcHkoYWxp
Z25lZF9pbnN0cmVhbV9jdXJyLCBpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJlYW1fY3VyciwgaW5z
dHJlYW1fc2l6ZV9jdXJyKTsKCQkJc3RyZWFtX3B0ciA9IGFsaWduZWRfaW5zdHJlYW1fY3VycjsK
CQl9CgkJbWF4X3F1ZXVlX2lucHV0KGFjdGlvbnMsICJjdXJyIiwgc3RyZWFtX3B0ciwgaW5zdHJl
YW1fc2l6ZV9jdXJyKTsKCQlDSEVDS19FUlJPUlM7Cgl9CgkvKiBlbmQgb2YgY29kZSBmb3Igc3Ry
ZWFtIGN1cnIgKi8KCQoJLyogY29kZSBmb3Igc3RyZWFtIGRlbnNpdHkgKi8KCXNpemVfdCBpbnN0
cmVhbV9zaXplX2RlbnNpdHkgPSB0bXBfMjsKCWlmIChpbnN0cmVhbV9zaXplX2RlbnNpdHkgPiAw
KSB7CgkJY29uc3QgZmxvYXQgKnN0cmVhbV9wdHIgPSBpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJl
YW1fZGVuc2l0eTsKCQlpZiAodXNlX2NhbGxiYWNrICYmICgxID09IFdhdmVQcm9wYWdhdGlvbl9j
aGVja19hbGlnbmVkKGludGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9kZW5zaXR5KSkpIHsKCQkJ
ZmxvYXQgKmFsaWduZWRfaW5zdHJlYW1fZGVuc2l0eSA9IG1hbGxvYyhpbnN0cmVhbV9zaXplX2Rl
bnNpdHkpOwoJCQlpZiAoYWxpZ25lZF9pbnN0cmVhbV9kZW5zaXR5ID09IE5VTEwpIHsKCQkJCWNo
YXIgZXJyb3JfbXNnWzI1Nl07CgkJCQlzbnByaW50ZihlcnJvcl9tc2csIHNpemVvZihlcnJvcl9t
c2cpIC8gc2l6ZW9mKGNoYXIpLAoJCQkJCQkiRmFpbGVkIHRvIGFsbG9jYXRlICV6dSBieXRlcyBv
ZiBtZW1vcnkgZm9yIHN0cmVhbSBkZW5zaXR5LiIsCgkJCQkJCWluc3RyZWFtX3NpemVfZGVuc2l0
eSk7CgkJCQltYXhfcmVwb3J0X2Vycm9yX3NsaWMoYWN0aW9ucy0+ZXJyb3JzLCBfX0ZJTEVfXywg
X19MSU5FX18sIDUyNiwgZXJyb3JfbXNnKTsKCQkJCUNIRUNLX0VSUk9SUzsKCQkJfQoJCQkoJmNi
X2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT51c2VyX3B0ciAgICA9ICh1aW50OF90Kikg
aW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX2RlbnNpdHk7CgkJCSgmY2JfZGF0YS0+c3RyZWFt
W2NiX2RhdGEtPmNvdW50XSktPmFsaWduZWRfcHRyID0gKHVpbnQ4X3QqKSBhbGlnbmVkX2luc3Ry
ZWFtX2RlbnNpdHk7CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPnNpemUg
ICAgICAgID0gaW5zdHJlYW1fc2l6ZV9kZW5zaXR5OwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9k
YXRhLT5jb3VudF0pLT5pc19vdXRwdXQgICA9IDA7CgkJCWNiX2RhdGEtPmNvdW50ICs9IDE7CgkJ
CW1lbWNweShhbGlnbmVkX2luc3RyZWFtX2RlbnNpdHksIGludGVyZmFjZV9hY3Rpb25zLT5pbnN0
cmVhbV9kZW5zaXR5LCBpbnN0cmVhbV9zaXplX2RlbnNpdHkpOwoJCQlzdHJlYW1fcHRyID0gYWxp
Z25lZF9pbnN0cmVhbV9kZW5zaXR5OwoJCX0KCQltYXhfcXVldWVfaW5wdXQoYWN0aW9ucywgImRl
bnNpdHkiLCBzdHJlYW1fcHRyLCBpbnN0cmVhbV9zaXplX2RlbnNpdHkpOwoJCUNIRUNLX0VSUk9S
UzsKCX0KCS8qIGVuZCBvZiBjb2RlIGZvciBzdHJlYW0gZGVuc2l0eSAqLwoJCgkvKiBjb2RlIGZv
ciBzdHJlYW0gcHJldiAqLwoJc2l6ZV90IGluc3RyZWFtX3NpemVfcHJldiA9IHRtcF8xOwoJaWYg
KGluc3RyZWFtX3NpemVfcHJldiA+IDApIHsKCQljb25zdCBmbG9hdCAqc3RyZWFtX3B0ciA9IGlu
dGVyZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV9wcmV2OwoJCWlmICh1c2VfY2FsbGJhY2sgJiYgKDEg
PT0gV2F2ZVByb3BhZ2F0aW9uX2NoZWNrX2FsaWduZWQoaW50ZXJmYWNlX2FjdGlvbnMtPmluc3Ry
ZWFtX3ByZXYpKSkgewoJCQlmbG9hdCAqYWxpZ25lZF9pbnN0cmVhbV9wcmV2ID0gbWFsbG9jKGlu
c3RyZWFtX3NpemVfcHJldik7CgkJCWlmIChhbGlnbmVkX2luc3RyZWFtX3ByZXYgPT0gTlVMTCkg
ewoJCQkJY2hhciBlcnJvcl9tc2dbMjU2XTsKCQkJCXNucHJpbnRmKGVycm9yX21zZywgc2l6ZW9m
KGVycm9yX21zZykgLyBzaXplb2YoY2hhciksCgkJCQkJCSJGYWlsZWQgdG8gYWxsb2NhdGUgJXp1
IGJ5dGVzIG9mIG1lbW9yeSBmb3Igc3RyZWFtIHByZXYuIiwKCQkJCQkJaW5zdHJlYW1fc2l6ZV9w
cmV2KTsKCQkJCW1heF9yZXBvcnRfZXJyb3Jfc2xpYyhhY3Rpb25zLT5lcnJvcnMsIF9fRklMRV9f
LCBfX0xJTkVfXywgNTI2LCBlcnJvcl9tc2cpOwoJCQkJQ0hFQ0tfRVJST1JTOwoJCQl9CgkJCSgm
Y2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPnVzZXJfcHRyICAgID0gKHVpbnQ4X3Qq
KSBpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJlYW1fcHJldjsKCQkJKCZjYl9kYXRhLT5zdHJlYW1b
Y2JfZGF0YS0+Y291bnRdKS0+YWxpZ25lZF9wdHIgPSAodWludDhfdCopIGFsaWduZWRfaW5zdHJl
YW1fcHJldjsKCQkJKCZjYl9kYXRhLT5zdHJlYW1bY2JfZGF0YS0+Y291bnRdKS0+c2l6ZSAgICAg
ICAgPSBpbnN0cmVhbV9zaXplX3ByZXY7CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNv
dW50XSktPmlzX291dHB1dCAgID0gMDsKCQkJY2JfZGF0YS0+Y291bnQgKz0gMTsKCQkJbWVtY3B5
KGFsaWduZWRfaW5zdHJlYW1fcHJldiwgaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX3ByZXYs
IGluc3RyZWFtX3NpemVfcHJldik7CgkJCXN0cmVhbV9wdHIgPSBhbGlnbmVkX2luc3RyZWFtX3By
ZXY7CgkJfQoJCW1heF9xdWV1ZV9pbnB1dChhY3Rpb25zLCAicHJldiIsIHN0cmVhbV9wdHIsIGlu
c3RyZWFtX3NpemVfcHJldik7CgkJQ0hFQ0tfRVJST1JTOwoJfQoJLyogZW5kIG9mIGNvZGUgZm9y
IHN0cmVhbSBwcmV2ICovCgkKCS8qIGNvZGUgZm9yIHN0cmVhbSB2ZWxvY2l0eSAqLwoJc2l6ZV90
IGluc3RyZWFtX3NpemVfdmVsb2NpdHkgPSB0bXBfMTsKCWlmIChpbnN0cmVhbV9zaXplX3ZlbG9j
aXR5ID4gMCkgewoJCWNvbnN0IGZsb2F0ICpzdHJlYW1fcHRyID0gaW50ZXJmYWNlX2FjdGlvbnMt
Pmluc3RyZWFtX3ZlbG9jaXR5OwoJCWlmICh1c2VfY2FsbGJhY2sgJiYgKDEgPT0gV2F2ZVByb3Bh
Z2F0aW9uX2NoZWNrX2FsaWduZWQoaW50ZXJmYWNlX2FjdGlvbnMtPmluc3RyZWFtX3ZlbG9jaXR5
KSkpIHsKCQkJZmxvYXQgKmFsaWduZWRfaW5zdHJlYW1fdmVsb2NpdHkgPSBtYWxsb2MoaW5zdHJl
YW1fc2l6ZV92ZWxvY2l0eSk7CgkJCWlmIChhbGlnbmVkX2luc3RyZWFtX3ZlbG9jaXR5ID09IE5V
TEwpIHsKCQkJCWNoYXIgZXJyb3JfbXNnWzI1Nl07CgkJCQlzbnByaW50ZihlcnJvcl9tc2csIHNp
emVvZihlcnJvcl9tc2cpIC8gc2l6ZW9mKGNoYXIpLAoJCQkJCQkiRmFpbGVkIHRvIGFsbG9jYXRl
ICV6dSBieXRlcyBvZiBtZW1vcnkgZm9yIHN0cmVhbSB2ZWxvY2l0eS4iLAoJCQkJCQlpbnN0cmVh
bV9zaXplX3ZlbG9jaXR5KTsKCQkJCW1heF9yZXBvcnRfZXJyb3Jfc2xpYyhhY3Rpb25zLT5lcnJv
cnMsIF9fRklMRV9fLCBfX0xJTkVfXywgNTI2LCBlcnJvcl9tc2cpOwoJCQkJQ0hFQ0tfRVJST1JT
OwoJCQl9CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPnVzZXJfcHRyICAg
ID0gKHVpbnQ4X3QqKSBpbnRlcmZhY2VfYWN0aW9ucy0+aW5zdHJlYW1fdmVsb2NpdHk7CgkJCSgm
Y2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPmFsaWduZWRfcHRyID0gKHVpbnQ4X3Qq
KSBhbGlnbmVkX2luc3RyZWFtX3ZlbG9jaXR5OwoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRh
LT5jb3VudF0pLT5zaXplICAgICAgICA9IGluc3RyZWFtX3NpemVfdmVsb2NpdHk7CgkJCSgmY2Jf
ZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPmlzX291dHB1dCAgID0gMDsKCQkJY2JfZGF0
YS0+Y291bnQgKz0gMTsKCQkJbWVtY3B5KGFsaWduZWRfaW5zdHJlYW1fdmVsb2NpdHksIGludGVy
ZmFjZV9hY3Rpb25zLT5pbnN0cmVhbV92ZWxvY2l0eSwgaW5zdHJlYW1fc2l6ZV92ZWxvY2l0eSk7
CgkJCXN0cmVhbV9wdHIgPSBhbGlnbmVkX2luc3RyZWFtX3ZlbG9jaXR5OwoJCX0KCQltYXhfcXVl
dWVfaW5wdXQoYWN0aW9ucywgInZlbG9jaXR5Iiwgc3RyZWFtX3B0ciwgaW5zdHJlYW1fc2l6ZV92
ZWxvY2l0eSk7CgkJQ0hFQ0tfRVJST1JTOwoJfQoJLyogZW5kIG9mIGNvZGUgZm9yIHN0cmVhbSB2
ZWxvY2l0eSAqLwoJCgkvKiBjb2RlIGZvciBzdHJlYW0gbnh0ICovCglzaXplX3Qgb3V0c3RyZWFt
X3NpemVfbnh0ID0gdG1wXzE7CglpZiAob3V0c3RyZWFtX3NpemVfbnh0ID4gMCkgewoJCWZsb2F0
ICpzdHJlYW1fcHRyID0gaW50ZXJmYWNlX2FjdGlvbnMtPm91dHN0cmVhbV9ueHQ7CgkJaWYgKHVz
ZV9jYWxsYmFjayAmJiAoMSA9PSBXYXZlUHJvcGFnYXRpb25fY2hlY2tfYWxpZ25lZChpbnRlcmZh
Y2VfYWN0aW9ucy0+b3V0c3RyZWFtX254dCkpKSB7CgkJCWZsb2F0ICphbGlnbmVkX291dHN0cmVh
bV9ueHQgPSBtYWxsb2Mob3V0c3RyZWFtX3NpemVfbnh0KTsKCQkJaWYgKGFsaWduZWRfb3V0c3Ry
ZWFtX254dCA9PSBOVUxMKSB7CgkJCQljaGFyIGVycm9yX21zZ1syNTZdOwoJCQkJc25wcmludGYo
ZXJyb3JfbXNnLCBzaXplb2YoZXJyb3JfbXNnKSAvIHNpemVvZihjaGFyKSwKCQkJCQkJIkZhaWxl
ZCB0byBhbGxvY2F0ZSAlenUgYnl0ZXMgb2YgbWVtb3J5IGZvciBzdHJlYW0gbnh0LiIsCgkJCQkJ
CW91dHN0cmVhbV9zaXplX254dCk7CgkJCQltYXhfcmVwb3J0X2Vycm9yX3NsaWMoYWN0aW9ucy0+
ZXJyb3JzLCBfX0ZJTEVfXywgX19MSU5FX18sIDUyNiwgZXJyb3JfbXNnKTsKCQkJCUNIRUNLX0VS
Uk9SUzsKCQkJfQoJCQkoJmNiX2RhdGEtPnN0cmVhbVtjYl9kYXRhLT5jb3VudF0pLT51c2VyX3B0
ciAgICA9ICh1aW50OF90KikgaW50ZXJmYWNlX2FjdGlvbnMtPm91dHN0cmVhbV9ueHQ7CgkJCSgm
Y2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNvdW50XSktPmFsaWduZWRfcHRyID0gKHVpbnQ4X3Qq
KSBhbGlnbmVkX291dHN0cmVhbV9ueHQ7CgkJCSgmY2JfZGF0YS0+c3RyZWFtW2NiX2RhdGEtPmNv
dW50XSktPnNpemUgICAgICAgID0gb3V0c3RyZWFtX3NpemVfbnh0OwoJCQkoJmNiX2RhdGEtPnN0
cmVhbVtjYl9kYXRhLT5jb3VudF0pLT5pc19vdXRwdXQgICA9IDE7CgkJCWNiX2RhdGEtPmNvdW50
ICs9IDE7CgkJCXN0cmVhbV9wdHIgPSBhbGlnbmVkX291dHN0cmVhbV9ueHQ7CgkJfQoJCW1heF9x
dWV1ZV9vdXRwdXQoYWN0aW9ucywgIm54dCIsIHN0cmVhbV9wdHIsIG91dHN0cmVhbV9zaXplX254
dCk7CgkJQ0hFQ0tfRVJST1JTOwoJfQoJLyogZW5kIG9mIGNvZGUgZm9yIHN0cmVhbSBueHQgKi8K
CQoJaWYgKHVzZV9jYWxsYmFjayAmJiBjYl9kYXRhLT5jb3VudCA9PSAwKSB7CgkJKmNhbGxiYWNr
X2RhdGEgPSBOVUxMOwoJCSpjYWxsYmFja19mdW5jID0gTlVMTDsKCQlmcmVlKGNiX2RhdGEpOwoJ
fQoJcmV0dXJuIGFjdGlvbnM7CiN1bmRlZiBDSEVDS19FUlJPUlMKfQoKdm9pZCBXYXZlUHJvcGFn
YXRpb24oCglmbG9hdCBwYXJhbV9kdGR4MiwKCWludDMyX3QgcGFyYW1fbngsCglpbnQzMl90IHBh
cmFtX256LAoJY29uc3QgZmxvYXQgKmluc3RyZWFtX2Fic29yYiwKCWNvbnN0IGZsb2F0ICppbnN0
cmVhbV9jdXJyLAoJY29uc3QgZmxvYXQgKmluc3RyZWFtX2RlbnNpdHksCgljb25zdCBmbG9hdCAq
aW5zdHJlYW1fcHJldiwKCWNvbnN0IGZsb2F0ICppbnN0cmVhbV92ZWxvY2l0eSwKCWZsb2F0ICpv
dXRzdHJlYW1fbnh0KQp7Cgkodm9pZCkgcHRocmVhZF9vbmNlKCZzbGljX2JzX2lzX2luaXRpYWxp
c2VkLCBXYXZlUHJvcGFnYXRpb25fc3RhdGljX2luaXQpOwoJQ0hFQ0tfTlVMTChzdG9yZWRfbWF4
ZmlsZSwgIk1heGZpbGUgd2FzIG5vdCBsb2FkZWQiLCApOwoJbWF4X3J1bl90ICpydW4gPSBXYXZl
UHJvcGFnYXRpb25fbm9uYmxvY2socGFyYW1fZHRkeDIsIHBhcmFtX254LCBwYXJhbV9ueiwgaW5z
dHJlYW1fYWJzb3JiLCBpbnN0cmVhbV9jdXJyLCBpbnN0cmVhbV9kZW5zaXR5LCBpbnN0cmVhbV9w
cmV2LCBpbnN0cmVhbV92ZWxvY2l0eSwgb3V0c3RyZWFtX254dCk7CglDSEVDS19OVUxMKHJ1biwg
IlVuYWJsZSB0byBydW4gYWN0aW9ucyIsICk7CgltYXhfd2FpdChydW4pOwp9CgptYXhfcnVuX3Qg
KldhdmVQcm9wYWdhdGlvbl9ub25ibG9jaygKCWZsb2F0IHBhcmFtX2R0ZHgyLAoJaW50MzJfdCBw
YXJhbV9ueCwKCWludDMyX3QgcGFyYW1fbnosCgljb25zdCBmbG9hdCAqaW5zdHJlYW1fYWJzb3Ji
LAoJY29uc3QgZmxvYXQgKmluc3RyZWFtX2N1cnIsCgljb25zdCBmbG9hdCAqaW5zdHJlYW1fZGVu
c2l0eSwKCWNvbnN0IGZsb2F0ICppbnN0cmVhbV9wcmV2LAoJY29uc3QgZmxvYXQgKmluc3RyZWFt
X3ZlbG9jaXR5LAoJZmxvYXQgKm91dHN0cmVhbV9ueHQpCnsKCVdhdmVQcm9wYWdhdGlvbl9hY3Rp
b25zX3QgaW50ZXJmYWNlX2FjdGlvbnM7CglpbnRlcmZhY2VfYWN0aW9ucy5wYXJhbV9kdGR4MiA9
IHBhcmFtX2R0ZHgyOwoJaW50ZXJmYWNlX2FjdGlvbnMucGFyYW1fbnggPSBwYXJhbV9ueDsKCWlu
dGVyZmFjZV9hY3Rpb25zLnBhcmFtX256ID0gcGFyYW1fbno7CglpbnRlcmZhY2VfYWN0aW9ucy5p
bnN0cmVhbV9hYnNvcmIgPSBpbnN0cmVhbV9hYnNvcmI7CglpbnRlcmZhY2VfYWN0aW9ucy5pbnN0
cmVhbV9jdXJyID0gaW5zdHJlYW1fY3VycjsKCWludGVyZmFjZV9hY3Rpb25zLmluc3RyZWFtX2Rl
bnNpdHkgPSBpbnN0cmVhbV9kZW5zaXR5OwoJaW50ZXJmYWNlX2FjdGlvbnMuaW5zdHJlYW1fcHJl
diA9IGluc3RyZWFtX3ByZXY7CglpbnRlcmZhY2VfYWN0aW9ucy5pbnN0cmVhbV92ZWxvY2l0eSA9
IGluc3RyZWFtX3ZlbG9jaXR5OwoJaW50ZXJmYWNlX2FjdGlvbnMub3V0c3RyZWFtX254dCA9IG91
dHN0cmVhbV9ueHQ7Cgkodm9pZCkgcHRocmVhZF9vbmNlKCZzbGljX2JzX2lzX2luaXRpYWxpc2Vk
LCBXYXZlUHJvcGFnYXRpb25fc3RhdGljX2luaXQpOwoJQ0hFQ0tfTlVMTChzdG9yZWRfbWF4Zmls
ZSwgIk1heGZpbGUgd2FzIG5vdCBsb2FkZWQiLCBOVUxMKTsKCXZvaWQgKCpjYl9mdW5jKSh2b2lk
KikgPSBOVUxMOwoJdm9pZCAgKmNiX2RhdGEgICAgICAgICA9IE5VTEw7CgltYXhfYWN0aW9uc190
ICphY3Rpb25zID0gV2F2ZVByb3BhZ2F0aW9uX2NvbnZlcnRfaW50ZXJuYWwoc3RvcmVkX21heGZp
bGUsICZpbnRlcmZhY2VfYWN0aW9ucywgMSwgJmNiX2Z1bmMsICZjYl9kYXRhKTsKCUNIRUNLX05V
TEwoYWN0aW9ucywgIlVuYWJsZSB0byBidWlsZCBhY3Rpb25zIiwgTlVMTCk7CgltYXhfdmFsaWRh
dGUoYWN0aW9ucyk7CglDSEVDS19FUlJPUlNfU1QoYWN0aW9ucywgTlVMTCk7CglDSEVDS19FUlJP
UlNfU1Qoc3RvcmVkX2VuZ2luZSwgTlVMTCk7CgltYXhfcnVuX3QgKnJ1bjsKCWlmIChjYl9mdW5j
ID09IE5VTEwpIHsKCQlydW4gPSBtYXhfcnVuX25vbmJsb2NrKHN0b3JlZF9lbmdpbmUsIGFjdGlv
bnMpOwoJfSBlbHNlIHsKCQlydW4gPSBtYXhfcnVuX25vbmJsb2NrX3dpdGhfY2Ioc3RvcmVkX2Vu
Z2luZSwgYWN0aW9ucywgY2JfZnVuYywgY2JfZGF0YSk7Cgl9CglDSEVDS19OVUxMKHJ1biwgIlVu
YWJsZSB0byBydW4gYWN0aW9ucyIsIE5VTEwpOwoJQ0hFQ0tfRVJST1JTX1NUKGFjdGlvbnMsIE5V
TEwpOwoJbWF4X2FjdGlvbnNfZnJlZShhY3Rpb25zKTsKCXJldHVybiBydW47Cn0KCnZvaWQgV2F2
ZVByb3BhZ2F0aW9uX3J1bigKCW1heF9lbmdpbmVfdCAqZW5naW5lLAoJV2F2ZVByb3BhZ2F0aW9u
X2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsKCW1heF9ydW5fdCAqcnVuID0gV2F2ZVBy
b3BhZ2F0aW9uX3J1bl9ub25ibG9jayhlbmdpbmUsIGludGVyZmFjZV9hY3Rpb25zKTsKCUNIRUNL
X05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rpb25zIiwgKTsKCW1heF93YWl0KHJ1bik7Cn0K
Cm1heF9ydW5fdCAqV2F2ZVByb3BhZ2F0aW9uX3J1bl9ub25ibG9jaygKCW1heF9lbmdpbmVfdCAq
ZW5naW5lLAoJV2F2ZVByb3BhZ2F0aW9uX2FjdGlvbnNfdCAqaW50ZXJmYWNlX2FjdGlvbnMpCnsK
CW1heF9maWxlX3QgKm1heGZpbGUgPSBtYXhfZW5naW5lX2dldF9tYXhfZmlsZShlbmdpbmUpOyAK
CXZvaWQgKCpjYl9mdW5jKSh2b2lkKikgPSBOVUxMOwoJdm9pZCAgKmNiX2RhdGEgICAgICAgICA9
IE5VTEw7CgltYXhfYWN0aW9uc190ICphY3Rpb25zID0gV2F2ZVByb3BhZ2F0aW9uX2NvbnZlcnRf
aW50ZXJuYWwobWF4ZmlsZSwgaW50ZXJmYWNlX2FjdGlvbnMsIDEsICZjYl9mdW5jLCAmY2JfZGF0
YSk7CglDSEVDS19OVUxMKGFjdGlvbnMsICJVbmFibGUgdG8gYnVpbGQgYWN0aW9ucyIsIE5VTEwp
OwoJbWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJQ0hFQ0tfRVJST1JTX1NUKGFjdGlvbnMsIE5VTEwp
OwoJbWF4X3J1bl90ICpydW47CglpZiAoY2JfZnVuYyA9PSBOVUxMKSB7CgkJcnVuID0gbWF4X3J1
bl9ub25ibG9jayhlbmdpbmUsIGFjdGlvbnMpOwoJfSBlbHNlIHsKCQlydW4gPSBtYXhfcnVuX25v
bmJsb2NrX3dpdGhfY2IoZW5naW5lLCBhY3Rpb25zLCBjYl9mdW5jLCBjYl9kYXRhKTsKCX0KCUNI
RUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rpb25zIiwgTlVMTCk7CgltYXhfYWN0aW9u
c19mcmVlKGFjdGlvbnMpOwoJcmV0dXJuIHJ1bjsKfQoKCi8qKgogKiBcYnJpZWYgR3JvdXAgcnVu
IGFkdmFuY2VkIHN0YXRpYyBmdW5jdGlvbiBmb3IgdGhlIGludGVyZmFjZSAnZGVmYXVsdCcuCiAq
IAogKiBccGFyYW0gW2luXSBncm91cCBHcm91cCB0byB1c2UuCiAqIFxwYXJhbSBbaW4sb3V0XSBp
bnRlcmZhY2VfYWN0aW9ucyBBY3Rpb25zIHRvIHJ1bi4KICoKICogUnVuIHRoZSBhY3Rpb25zIG9u
IHRoZSBmaXJzdCBkZXZpY2UgYXZhaWxhYmxlIGluIHRoZSBncm91cC4KICovCnZvaWQgV2F2ZVBy
b3BhZ2F0aW9uX3J1bl9ncm91cChtYXhfZ3JvdXBfdCAqZ3JvdXAsIFdhdmVQcm9wYWdhdGlvbl9h
Y3Rpb25zX3QgKmludGVyZmFjZV9hY3Rpb25zKQp7CgltYXhfcnVuX3QgKnJ1biA9IFdhdmVQcm9w
YWdhdGlvbl9ydW5fZ3JvdXBfbm9uYmxvY2soZ3JvdXAsIGludGVyZmFjZV9hY3Rpb25zKTsKCUNI
RUNLX05VTEwocnVuLCAiVW5hYmxlIHRvIHJ1biBhY3Rpb25zIiwgKTsKCW1heF93YWl0KHJ1bik7
Cn0KCgovKioKICogXGJyaWVmIEdyb3VwIHJ1biBhZHZhbmNlZCBzdGF0aWMgbm9uLWJsb2NraW5n
IGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZhdWx0Jy4KICogCiAqCiAqIFNjaGVkdWxl
IHRoZSBhY3Rpb25zIHRvIHJ1biBvbiB0aGUgZmlyc3QgZGV2aWNlIGF2YWlsYWJsZSBpbiB0aGUg
Z3JvdXAgYW5kIHJldHVybiBpbW1lZGlhdGVseS4KICogVGhlIHN0YXR1cyBvZiB0aGUgcnVuIG11
c3QgYmUgY2hlY2tlZCB3aXRoIDo6bWF4X3dhaXQuIAogKiBOb3RlIHRoYXQgdXNlIG9mIDo6bWF4
X25vd2FpdCBpcyBwcm9oaWJpdGVkIHdpdGggbm9uLWJsb2NraW5nIHJ1bm5pbmcgb24gZ3JvdXBz
OgogKiBzZWUgdGhlIDo6bWF4X3J1bl9ncm91cF9ub25ibG9jayBkb2N1bWVudGF0aW9uIGZvciBt
b3JlIGV4cGxhbmF0aW9uLgogKgogKiBccGFyYW0gW2luXSBncm91cCBHcm91cCB0byB1c2UuCiAq
IFxwYXJhbSBbaW5dIGludGVyZmFjZV9hY3Rpb25zIEFjdGlvbnMgdG8gcnVuLgogKiBccmV0dXJu
IEEgaGFuZGxlIG9uIHRoZSBleGVjdXRpb24gc3RhdHVzIG9mIHRoZSBhY3Rpb25zLCBvciBOVUxM
IGluIGNhc2Ugb2YgZXJyb3IuCiAqLwptYXhfcnVuX3QgKldhdmVQcm9wYWdhdGlvbl9ydW5fZ3Jv
dXBfbm9uYmxvY2sobWF4X2dyb3VwX3QgKmdyb3VwLCBXYXZlUHJvcGFnYXRpb25fYWN0aW9uc190
ICppbnRlcmZhY2VfYWN0aW9ucykKewoJbWF4X2ZpbGVfdCAqbWF4ZmlsZSA9IG1heF9ncm91cF9n
ZXRfbWF4X2ZpbGUoZ3JvdXApOwoJbWF4X2FjdGlvbnNfdCAqYWN0aW9ucyA9IFdhdmVQcm9wYWdh
dGlvbl9jb252ZXJ0X2ludGVybmFsKG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25zLCAxLCBOVUxM
LCBOVUxMKTsKCWlmKGFjdGlvbnMgPT0gTlVMTCkgcmV0dXJuIE5VTEw7CglpZighbWF4X29rKGFj
dGlvbnMtPmVycm9ycykpIHJldHVybiBOVUxMOwoJbWF4X3ZhbGlkYXRlKGFjdGlvbnMpOwoJbWF4
X3J1bl90ICpydW4gPSBtYXhfcnVuX2dyb3VwX25vbmJsb2NrKGdyb3VwLCBhY3Rpb25zKTsKCW1h
eF9hY3Rpb25zX2ZyZWUoYWN0aW9ucyk7CglyZXR1cm4gcnVuOwp9CgoKLyoqCiAqIFxicmllZiBB
cnJheSBydW4gYWR2YW5jZWQgc3RhdGljIGZ1bmN0aW9uIGZvciB0aGUgaW50ZXJmYWNlICdkZWZh
dWx0Jy4KICogCiAqIFxwYXJhbSBbaW5dIGVuZ2FycmF5IFRoZSBhcnJheSBvZiBkZXZpY2VzIHRv
IHVzZS4KICogXHBhcmFtIFtpbixvdXRdIGludGVyZmFjZV9hY3Rpb25zIFRoZSBhcnJheSBvZiBh
Y3Rpb25zIHRvIHJ1bi4KICoKICogUnVuIHRoZSBhcnJheSBvZiBhY3Rpb25zIG9uIHRoZSBhcnJh
eSBvZiBlbmdpbmVzLiAgVGhlIGxlbmd0aCBvZiBpbnRlcmZhY2VfYWN0aW9ucwogKiBtdXN0IG1h
dGNoIHRoZSBzaXplIG9mIGVuZ2FycmF5LgogKi8Kdm9pZCBXYXZlUHJvcGFnYXRpb25fcnVuX2Fy
cmF5KG1heF9lbmdhcnJheV90ICplbmdhcnJheSwgV2F2ZVByb3BhZ2F0aW9uX2FjdGlvbnNfdCAq
aW50ZXJmYWNlX2FjdGlvbnNbXSkKewoJbWF4X3J1bl90ICpydW4gPSBXYXZlUHJvcGFnYXRpb25f
cnVuX2FycmF5X25vbmJsb2NrKGVuZ2FycmF5LCBpbnRlcmZhY2VfYWN0aW9ucyk7CglDSEVDS19O
VUxMKHJ1biwgIlVuYWJsZSB0byBydW4gYWN0aW9ucyIsICk7CgltYXhfd2FpdChydW4pOwp9CgoK
LyoqCiAqIFxicmllZiBBcnJheSBydW4gYWR2YW5jZWQgc3RhdGljIG5vbi1ibG9ja2luZyBmdW5j
dGlvbiBmb3IgdGhlIGludGVyZmFjZSAnZGVmYXVsdCcuCiAqIAogKgogKiBTY2hlZHVsZSB0byBy
dW4gdGhlIGFycmF5IG9mIGFjdGlvbnMgb24gdGhlIGFycmF5IG9mIGVuZ2luZXMsIGFuZCByZXR1
cm4gaW1tZWRpYXRlbHkuCiAqIFRoZSBsZW5ndGggb2YgaW50ZXJmYWNlX2FjdGlvbnMgbXVzdCBt
YXRjaCB0aGUgc2l6ZSBvZiBlbmdhcnJheS4KICogVGhlIHN0YXR1cyBvZiB0aGUgcnVuIGNhbiBi
ZSBjaGVja2VkIGVpdGhlciBieSA6Om1heF93YWl0IG9yIDo6bWF4X25vd2FpdDsKICogbm90ZSB0
aGF0IG9uZSBvZiB0aGVzZSAqbXVzdCogYmUgY2FsbGVkLCBzbyB0aGF0IGFzc29jaWF0ZWQgbWVt
b3J5IGNhbiBiZSByZWxlYXNlZC4KICoKICogXHBhcmFtIFtpbl0gZW5nYXJyYXkgVGhlIGFycmF5
IG9mIGRldmljZXMgdG8gdXNlLgogKiBccGFyYW0gW2luXSBpbnRlcmZhY2VfYWN0aW9ucyBUaGUg
YXJyYXkgb2YgYWN0aW9ucyB0byBydW4uCiAqIFxyZXR1cm4gQSBoYW5kbGUgb24gdGhlIGV4ZWN1
dGlvbiBzdGF0dXMgb2YgdGhlIGFjdGlvbnMsIG9yIE5VTEwgaW4gY2FzZSBvZiBlcnJvci4KICov
Cm1heF9ydW5fdCAqV2F2ZVByb3BhZ2F0aW9uX3J1bl9hcnJheV9ub25ibG9jayhtYXhfZW5nYXJy
YXlfdCAqZW5nYXJyYXksIFdhdmVQcm9wYWdhdGlvbl9hY3Rpb25zX3QgKmludGVyZmFjZV9hY3Rp
b25zW10pCnsKCW1heF9maWxlX3QgKm1heGZpbGUgPSBtYXhfZW5nYXJyYXlfZ2V0X21heF9maWxl
KGVuZ2FycmF5LCAwKTsKCWludCBpOwoJbWF4X2FjdGFycmF5X3QgKmFjdGFycmF5ID0gbWF4X2Fj
dGFycmF5X2luaXQobWF4ZmlsZSwgZW5nYXJyYXktPnNpemUpOwoJaWYgKGFjdGFycmF5ID09IE5V
TEwpIHJldHVybiBOVUxMOwoJbWF4X2FjdGlvbnNfdCAqKmFycl9hY3Rpb25zID0gbWFsbG9jKGVu
Z2FycmF5LT5zaXplICogc2l6ZW9mKG1heF9hY3Rpb25zX3QqKSk7Cglmb3IgKCBpID0gMCA7IGkg
PCBhY3RhcnJheS0+c2l6ZTsgaSsrICkgewoJCW1heF9hY3Rpb25zX3QgKmFjdGlvbnMgPSBXYXZl
UHJvcGFnYXRpb25fY29udmVydF9pbnRlcm5hbChtYXhmaWxlLCBpbnRlcmZhY2VfYWN0aW9uc1tp
XSwgMSwgTlVMTCwgTlVMTCk7CgkJaWYgKGFjdGlvbnMgPT0gTlVMTCkgcmV0dXJuIE5VTEw7CgkJ
YXJyX2FjdGlvbnNbaV0gPSBhY3Rpb25zOwoJCW1heF9zZXRfYWN0aW9uKGFjdGFycmF5LCBpLCBh
Y3Rpb25zKTsKCX0KCW1heF9ydW5fdCAqcnVuID0gbWF4X3J1bl9hcnJheV9ub25ibG9jayhlbmdh
cnJheSwgYWN0YXJyYXkpOwoJZm9yICggaSA9IDAgOyBpIDwgYWN0YXJyYXktPnNpemUgOyBpKysg
KSB7IG1heF9hY3Rpb25zX2ZyZWUoYXJyX2FjdGlvbnNbaV0pOyB9CgltYXhfYWN0YXJyYXlfZnJl
ZShhY3RhcnJheSk7CglmcmVlKGFycl9hY3Rpb25zKTsKCXJldHVybiBydW47Cn0KCgovKioKICog
XGJyaWVmIENvbnZlcnRzIGEgc3RhdGljLWludGVyZmFjZSBhY3Rpb24gc3RydWN0IGludG8gYSBk
eW5hbWljLWludGVyZmFjZSBtYXhfYWN0aW9uc190IHN0cnVjdC4KICoKICogTm90ZSB0aGF0IHRo
aXMgaXMgYW4gaW50ZXJuYWwgdXRpbGl0eSBmdW5jdGlvbiB1c2VkIGJ5IG90aGVyIGZ1bmN0aW9u
cyBpbiB0aGUgc3RhdGljIGludGVyZmFjZS4KICoKICogXHBhcmFtIFtpbl0gbWF4ZmlsZSBUaGUg
bWF4ZmlsZSB0byB1c2UuCiAqIFxwYXJhbSBbaW5dIGludGVyZmFjZV9hY3Rpb25zIFRoZSBpbnRl
cmZhY2Utc3BlY2lmaWMgYWN0aW9ucyB0byBydW4uCiAqIFxyZXR1cm4gVGhlIGR5bmFtaWMtaW50
ZXJmYWNlIGFjdGlvbnMgdG8gcnVuLCBvciBOVUxMIGluIGNhc2Ugb2YgZXJyb3IuCiAqLwptYXhf
YWN0aW9uc190KiBXYXZlUHJvcGFnYXRpb25fY29udmVydChtYXhfZmlsZV90ICptYXhmaWxlLCBX
YXZlUHJvcGFnYXRpb25fYWN0aW9uc190ICppbnRlcmZhY2VfYWN0aW9ucykKewoJcmV0dXJuIFdh
dmVQcm9wYWdhdGlvbl9jb252ZXJ0X2ludGVybmFsKG1heGZpbGUsIGludGVyZmFjZV9hY3Rpb25z
LCAwLCBOVUxMLCBOVUxMKTsKfQoKI3VuZGVmIENIRUNLX0VSUk9SU19TVAojdW5kZWYgQ0hFQ0tf
TlVMTAoKCg==
#endif /* SLIC_B64_DEFINITIONS */

#ifdef SLIC_EXTRA_FILES
PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9Im5vIj8+PHVz
ZXJmaWxlcyBmb3JtYXQtdmVyc2lvbj0iMjAxMjAyMDAiLz4=
#endif /* SLIC_EXTRA_FILES */

#ifdef PHOTON_NODE_ADD_DATA
#define PHOTON_NODE_ADD_DATA_PRESENT 1
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 114, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 115, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 148, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 227, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 3, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 185, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 147, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 130, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 146, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 108, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 131, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 110, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 111, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 145, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 19, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 20, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 21, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 228, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 229, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 230, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 231, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 232, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 233, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 234, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 235, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 236, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 237, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 238, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 239, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 240, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 241, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 242, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 243, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 244, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 245, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 246, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 177, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 247, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 248, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 249, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 250, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 251, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 252, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 253, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 254, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 255, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 256, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 178, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 189, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 214, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 215, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 216, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 55, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 16, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 17, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 18, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 179, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 180, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 190, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 219, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 220, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 221, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 56, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 57, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 58, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 59, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 60, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 61, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 63, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 144, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 64, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 65, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 66, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 67, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 68, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 69, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 70, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 72, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 73, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 143, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 217, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 218, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 74, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 222, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 223, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 75, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 76, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 77, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 78, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 79, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 80, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 82, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 83, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 142, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 22, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 201, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 23, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 202, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 84, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 86, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 87, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 141, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 181, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 182, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 24, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 183, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 25, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 26, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 27, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 203, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 28, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 30, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 140, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 31, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 32, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 33, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 34, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 35, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 36, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 204, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 37, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 39, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 257, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 258, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 259, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 260, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 261, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 262, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 263, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 264, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 265, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 266, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 226, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 40, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 139, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 41, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 42, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 43, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 44, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 45, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 46, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 206, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 47, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 49, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 207, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 50, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 138, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 53, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 54, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 88, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 0, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 89, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 7, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 8, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 9, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 90, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 208, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 91, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 225, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 92, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 137, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 10, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 11, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 12, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 93, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 95, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 224, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 96, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 97, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 136, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 211, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 99, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 13, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 14, "SquashFactor", 1.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 15, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 100, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 101, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 135, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 103, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 213, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 104, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 112, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 117, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 122, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 134, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 119, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 120, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 121, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 123, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 133, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 125, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 126, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 128, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 132, "SquashFactor", 0.0)
PHOTON_NODE_ADD_DATA(WavePropagationKernel, 127, "SquashFactor", 0.0)
#endif

#ifdef MAXFILE_SIGNATURE
#define MAXFILE_SIGNATURE_PRESENT 1
MAXFILE_SIGNATURE("302d02146a20a66720c8a515bf2ebff96040e09f8751562502150091a3f4852ce5f5ca0c87264d4dab81d14991d2ab")
#endif

#ifdef PARAM
#define PARAM_PRESENT 1
PARAM(TIMING_SCORE, 0)
#endif

#ifdef BITSTREAM
#error You are using too old sliccompile to compile this maxfile.
#endif
#ifdef BITSTREAM_NEW
#define BITSTREAM_COMPRESSED 1
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
PTWkX835T/q31J4Q6RlUTwPpp3H+s1/avpn0U3j9T/pj/H4W6WOonnbSL+b1P+nL+Ibjnpi+lWQn
6fz+vpt0g9c/pI+jepJJ38mfbyE9kT9fRHo2z/+kf8TzP+kZfP+H9GV8/5P0i6iduaSHeP1D+m85
/0k/yPlP+mqe/0n/E6//SU/m/CedbxBXkN7O939I/z3f/yR9PPmtJt1Deg3p23j9T3ovnv9J38Lv
x5F+Aq//SX+C73+SPpvnf9Lf5vUP6ZnU/nbSUzj/SR/A+R+m+YSvf0lv4fmf9F9x/pO+ldf/pP+C
1z+kX833f0g/h/Of9AV8/Us6vy9jkF7P+U/6U7z+If1jvv9J+ljOf9IvpriFpGdy/pO+gvOf9IGc
/6Q38vxP+lDOf9JTOf9Jd1E91aRv5s95kr6R85/HhfOf9H6c/6S/RNs3kn6A1z+kF3P+k76c1z+k
X8LrH9K38/qH9Fc5/yMx/TDJTtKH8/qf9BCv/0l/iu//k95F9aeSfg2v/0kv5fv/pF/H+U96JV//
kj6V1/+k13D+k/4or39If4Gvf0mfz+t/0p/j/Cf9L7z+IX0J3/8n/cuY7Kgg/V+c/6S/TNtXkZ7D
63/SXfz+F+l7OP9Jn8L5T/pjnP+kv8nrH9IvpXY2k96H85/02zn/Se/P9/9Jv5vzn/R0Xv+3xvQ7
SXeS/hTnP+nbeP1P+nO8/id9Eq//WafmpJE+mtf/pF9G23tIzybdIP0xnv9Jn0zb55J+Oel5pOfz
/E/6PL7/Q/oBqqeE9Js4/0k/n+d/0s/l+Z/0HKq/kvSzeP4n/WFe/5Pu5etf0tdz/pN+JcUNkX4v
X/+S/hnnP+mn8ecDSf+aP89G+hSKGyb9OM5/0qfS9h2cVzz/t8X0aSQ7SX+G1/+kP8/zP+nTqZ5k
0q8iPZX0q0lPI/1jnv9J/ydf/5Kez/M/6Sfz9S/pN/L8T3o5r/9JH8/5T7qT85/0XPJVQvpefv+L
9N9w/pN+DdVTQfocvv9DegPnP/c/z/+k+3j9Q/pZ1J5a0l+n9oRIf4Df/yW9D6//SV/N63/SB3P+
k/4Wz/+k9+f7n6SX8fqf9Mf5/udndJzy/R/S+/L6n/RreP4nfQZVn0w6f341lfRWvv4lfQvP/6T/
g69/uR6Ka5B+Euc/6Xdw/nP7Of9JP47zn/Q1FLeQ9Jt5/UP6XTz/k+7h9Q/pG6j+CtIX8vqH9OWc
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
vOufXI3/RnI+t0om1O2Kx2hrX/0kvaK+gi8kSJ+p9iQghmpnjW7XwQZqV8hsV+5Vul01ZruMq2Sf
5z29bH1tiz9uir3Du3X2Qd2gFWalr6RU6obI51ushlSbDSm5Wjek0mxIwdXWwJcf170xX/7wwAcH
vvQ9A2+Y56kKc2AzzPNU6XF64B1mQhea5Th6VHmeOfCGOfDYXg18nvZVvYd85Zq+CnK1L8P0lZtr
+cro5ktPKYlOY715qTLEGHokZ+zqK3aVZLrymK12mq7STFd61lmakmyWh0xXbtNVRy/tKs105dau
mnaTK6fpynONdiX7iKu0a344nX9cEks/SRKjZtW6ll5ozajN1Jp2c6GeNEO3psVsjXOGTuLco50U
/idJrCtVR71uyMuf8lFuNiTjWvMoNxuSeu2xdMtk/4Fj65mB0jMnypFhBJeeqCsvOzENf1ecKMGN
C+UT28VnqJO5fBXEUaROwJnqCllNak4ZdSSEnKXbBi/pU/pVXPlS85ythhJ/V2BDzBq9dBq069n6
5Vd59jD9umeas4fp1zFTmnLEVWIwp7dR1zlenU4ulKvD3up80mFeKfbGErL/FH2SX2EuI9XCdBZq
18vIE9TCdFb3U3CHqi18oXka7lCdGe9df9V0/R+NNkbUY56K43uciiWGnCid1+kTpcQQJx2zrMO0
Ui4y1dLliKlkVk7nSXV1Hfyt8tqlWvelat09o5XXPcrrh/o1TtQ4b0pMLJd76fMmYspyGde/6nSr
rtKDiQtUU++UppaY5/Qcs6k4zaqmeq77wW45xs7IuU5HcF+vI0jNGNbrzVVDydFOC8hnzw/OVqZx
qR/Lc9O41I/leS+dernmTFRhpmChPuSMXZSCBWYK5uq2Yh+cwK63Bs7o1X1+jXaMzLEd/7M5VqfL
0pScXuaZwxwyfb5cmpBjDmmaWY4eVOXJpjOn6cxjOkvWzm7/iJwlmc7S8rQzp+ksOe8YJpMvf8wc
K30lcyxqluV7IlrTGKLWOMzWOH+lWyPb4ADBPs8nz1p+lCXr/2SO7TAb0qwbcnULNQT3kOSqZrZu
SLPZkKTZP9yCUVOiPfbuEbtJskO2GzgFU9KtJ6Cn5KgIvvAaJjX/Qcxmcaqp/bdGL3lVixFdtTik
W/zwBmpxo9lixw26xSGzxe2zj3Jeso6ik4wNfwmcsza8KnCOEWtrXWe8vpg52Tx+T7JameiR47UD
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
716G95hH+6TTBf2GjKrf29re5Wwpx6xjRawl5p0XhTYtY4m1Dmh+eXcPydc+xzK17z0HmdrO5yBT
+16sVSIhmVpKKR7bQW2dThdiwWaUmfRqaTHYesRYCkfi1HjJJbv2o4oBDfz+vRmgV/27wLiGxmMz
5pW5+GwPtdoVajNXvfNJaqp+XGOx1WoXbtPTYqvVvlpjsdVqW2ui2Wq1czbqaTHVaqEU3NzGQwD/
4ewr9dNJWkKWqMU739gHb+X8vle1Wn8NWFOtFsK4EMGVWrj4fRglfn4HxznpJE6rxKnaxLZa7b1b
90xsqtVCGBciuFILF0/BKfEZmnODk7hJJW6sTWyq1SYQPo7wcRWeFGnFl9s74WNO+IQKH68Nb6rV
Qv4WUrdS8RbPYyn8tVr4kBM+qsJHasPbarXJvXp2m61We3qNxVar/eP2NYNLWvau8bHVasvb9bTY
arWrgz0ttlrtYG9Pi61Wu2uNxVar9dZYbLXaHzbsabHVaufXWGy12udqLLZabbbGYqvVXldjsdVq
z6ux2Gq1J9RYbLXaSI3FVqvdqcZiq9WuX2Ox1WqXbNDTYqvVdtZYbLXaZ2ostlrtrBqLrVZ7dY3F
VqsVnppPoadaLbSYobss5Zfx0y4a66U9HX8/xjq/xVWN9UDtWLfVapcO6JnbVqt9v8Ziq9UWaiy2
Wu09NRZbrfbaGoutVntOjcVWq43XWGy12kE1Flutdocai61W+3KNpUatFirAUPxtxX94Ws/Xwz0c
f4/Tyz7Vy16X62FPtVoo4ELtVore4qQnqVx6tAzCUbnsViqXlXpqtZC/hdStVLzFo2MKf9/uTvhO
J3xZhe+qp1YL+VtI3UrFW/xwn8IP08IXnPAlFb5YT60W8reQupWKt/jhDIX/cjcnfNYJn1fhc72r
1V66Vc2wlBZrt5qLmdSkParGxy8tp9T4RHuq1UJpF6q6UlwXv1YnJttq/mmHSZtikumDWi0UcKF2
K0VvcfiOMvx3VydDk5MhpTIk+6BWCwVcqN1K0Vv8epoyjNMyJJwMjSpDQz21WsjfQupWKt7iJBiF
X72LEz7qhI+r8LF6arWQv4XUrVS8xe94KfztWvigEz6iwofqqdVC/hZSt1LxFmeSKHxEC+9zwgdU
eH8f1GqhgAu1Wyl6ix+Vkg7mhwEnQ7ejg+lVGTy1GWrUaqGAC7VbKXqLMzKUYZqWoexkqCgpTNEH
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
xZc8XzKN92/19390JrFv+y5oGZ9sp6MfNOu7AHzbocO3qT9qa+ujfUw4NqTuDYMR3rrIRL9MoVzt
6o3N0n7SGPp9/BL5GdzOxA1L5edo+vy5wvMSK31HsM76Fta/JWxmvPpvpbI67S3Z2x4r0bW3FVX4
tbe9vsnL3pYr8xBaeF4n//Y262d69rYmlz97296PgrK3tekUyN52T7EeHOis9+frrFdaYG9bvtzL
3jZ/xU9nbytR2dumrPaxt2V+LtnbVin2NsfHanvbrav92Nsil6rtbTNX6NvbHl/B7G2vr9Ozt/X7
xP98G/pBcOvxj1pob3v4E70E+vj69cJLsrdl/jsI/GpX7l/+Hjrr6Z/Y3mb5MsD64vtPvdtHJZ/O
+kGD35cgn4G+mPvR5bGHFVYGYw+bqWMduTL2MNr+kj2M2kO09jDLQi972Nsr1Pawvy3Rt4flLWH2
sMZyA3uYan6FfhkkXi7zM1+p/UffXuV3P+jrBbr6KfNDv/opcbmXfopZrtFP+9v510+vL9TTT3e+
508/3fp+UPppfLtA+inqn0G2951r9No7aP3Uv8JLP73z1U+mn8Z9otJPX37mo59yv2b66esyRT/N
n6fWTzM+86efvlTrp1Yf6uunIx8w/XSyTE8/DdXh74Htkz7zZ+uiIPpTsx/0VfD66eV/XZJ+ivk0
CP00dIl/+cd+/vPrp6UB9NP1//FuH6P9oKv/yYbcPf8T5PzrsSLw+izsHWP9OPazy6f/3rs8+q/4
42D0312f/GT67z8q/ef4t4/+m7PIW/8t1ui/Lwz03xeS/lsVhP77T5DjYehH/ufLbn2+41f/DTbw
h1jgV//t/9JL/1XJPA71X6h//feQrj/EN8V+9d+c4PRfaCD9F7s8yPYeq4vPQeu/Pf/w0n+wvv+J
9F/MUpX+e3iBj/4bt4CB0dQ5iv7rN1+t/25c4Ef/xXyl1n+3LdfXfzcsl/Tfcj39d+dX/sfzncHt
lz4yu4X6b+BnegkM7MVB2L909F/kV0HoP/3xpYTXfdly/L7M+q/4bwH0X9gy7/Yx0n+ffijpv/eD
nH/f6Oi/S9RftW9fHv3FLw9q/aZjjb8y+ov/SKW/Xpjvo7+S3/XSXzsWqPXXzvn6+qtkPtNfyUsC
66/UYOwj1B7zvv/x/o4+3/Pen4DzzZwZtURJVJTCV83W4hQTNYM2jhdsZyGnVG5VxllbfKVNcNkI
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
bXmzhn9E93qS2vKiZ461pYk+9tFc0uzWlvIQu5tqt7bkgdjpVFlbXI7K2nK9gHV+5X9UT9IO5FRP
XHta60meNTnWk77pjuvJ1R451pOKG7PWE+cfHNWTfEnWI27LYV5PDq7P4Yhr3IPWk1qrWT2Zl5Z9
PZm3zerrc5jXk1Y5+R7pTuvJnlW0npRpz+pJVcPllx94Pbm2LgeXXt1pPQlexXdWv+6inphT7NST
Rt1zrCdTE0k9KdjdQT153M1BPbnc7Z3qyUeJ2dWTNxuyqyfXNmRTT5p/w+tJnW5Z6olvt/9QT55+
zevJX12z1JO/u75LPdnyNf+IVnYl9WRD1xzryT39PK8lH7BbT36F2IoDduvJbohFH5D1JDlV1pP5
ed9k/pfv70Yn5/D9k19CrN/fPbqS1Q/8/m7vBHvfPUkKcbwr4vd3n6/P+v3dcwcdTsle3mTc/zjE
p2Tnrc7p/kcIrRZOK9mUbJ+D2U/J9jF88ylfMSVbMiffJV1otYhdQadkHwSyKdlXG60uq1P4lOz2
VTm4eHWh1aLCCj7p90EXUS2677fz3ZNCXXKoFr5ax3WkWlzt7KBaHOnsoFps6vwO1cJXu7c2u++e
/LI2u++ebF+bTbX48Cs+L5u7c5ZqUaDzf6gWx5bzedk9nbJUiwOd3qVaTFnOP6KRnUi1GNcpx3nZ
Q/pZXJudbHdedi3ERiTbnZedBbEOybJazD4gq0Xf99T3d633d34JMJ9j93cistzf6W+tHS135XR/
Z+Hn+v7XErodu4wVD3dkBIqhh9ZG32+fn27puuehf9rtcv5pb8s5uNUT8rnjnTZBdvRr/cDMmEPr
ysR9DuvK1A3WI6/K97yu1F+Zw82QPR3prZ7EBFZX8u/Lvq7kN3y37ed15dCKnL7/0pHe6vFKoHVl
qYnVlbXfWl0C9vO60jUnl0sd6K2ek0v5Tru/g7jVk2sPv9UDzTnc6nFaRW71zO7goKSM6uCgpIR0
eKdbPcu/ye5Wz8RvsrvV0+ubbG71pC3hJWV7+ywlZW/7/1BSxizhJaVf+ywlZXD7dykpNZbwT+fj
9qSkVG6fY0kZpg9gtPq77JaUYIh9tMtuSfkEYpk7ZUmpnyxLiuvb1/LrbGq+RB+OBAeY35riyjQM
Fo8SqfOps9P+lqIX17QUMRsnnw0StyLXQ6w6baMn+DpF5JndokVGCZCNXSxkKQXkZpnBXq4pD01x
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
W0Pe1gfaKvO2IGj7gLc1gLa3TqytErT9zduKQtsF3vbmKez/vA1+sGDZytvOQ9ty3pYGbTN52xa9
LSOS/tAYGvqThjho6EgaxkNDc1r/oMGbNIRAgzt9VgU0uJKGek/p79/1wYfF4yn//ftTO5//Uzuf
/xM7n/8TO5//Ezuf/xM7n/8TO5//Ezuf/xM7n/8TO5//Ezuf/xM7n/8TO5//Ezuf/2M7n/9jO5//
Yzuf/2M7n//jrJ//46yf/+Osn//jrJ//46yf/+Osn//jrJ//Y/r5r4PP/zH//CHX/bwmOEPbt7zt
3iM4v/G2y9A2mbcdhbYhvG07tHXmbSuhrTlvgx8sWGrxtkhoK83b+kBbXt4WBG2P3+OfP7T9wdsq
QdtJ3lYU2vbwtjcP9bY1vM0CbXN523loG8/b0qBtIG/bAm0deNsyaGvK22KgrRpvGwVtJXhbT2h7
j7cFQNt9fgz4PLQ9vuEHC1mP70IPbY/vfx7YHt+3Htge378+sD2+Dz6wPb6/e2B7fC9+YHt8T31g
e3wPf2B7fHd9YHt8t3pge3x7P7A9vss8sD2+8z+wPb6f3bc9vv+8b3t8n7qf5fg+cD/L8b3pfpbj
e/n9LMe3+X6W4zvqfpbje9D9LMd35/v0+Uer9OO75X12fPtQgTsIKnLBT6fp84++gSconebP5PqV
Pv8IBM6/MkE3KjgIAhMXrKaCFSCYxwUaFUwAwQUuqH2GPv8IBGXOMMEXVNAABP254CAVuIFgExfk
Pkuff/S1LnjMBW2p4AIIGpxlgoVUsBsE0VxwmQq+BEE6F7ifo88/AkHhc/xZM1TQAQSduGArFXiD
YAUXPKOCIiC4yQWNz9PnH62EJ6ydZ4LpVPAzCEZxwUkq2AKCZC4oeoE+/wgEmVwQQgVDQfDpBSb4
hgragCCeC25TQVUQnOOCmhfp849A8JHe4lrOqZN/F//OHU3T73qazE9MU9NhrlqbNRemH8RKxNVM
cT5en5V3MsUVn9pOf0lPg+G2VgmmFGJSIwqaph/x7C7Xv4ZvgTlpmza9ygwwHzPF++TuCJMXEz1c
YK1tN23NmleZ6S09iugGTn67nWXE/IfWbSOYFfoe6NPTPAPMhQP1TKYf1oPXTOZjWsOEV5mwoPYZ
Hex9T0/nu3YinQr6C7Sf3AaG6ZavYHlic3pGe/ifv/4/U1wunDtZqksjauGlw+p2judOCsBi4O7a
na+kpevmV5mQalxL6IRABVJU55xRK3SU34x7ES7A+2UTcDO1pbtf6e+9WKxavP/+nfw/7xgcYH4R
YH4bFD/QJSCuXRFTzIlA880IL/+4fIHmGybzjwNdy7V0cmrQwn1SQVNcdzdTzG+RjzMKm+LagtRk
vhL5W0Yuk/lsYIObES76Ro104aBDsE60dmkXvENH/eNq+5uHuxvLRMd3cteTgo9gwzyYIDpsijkT
UVnnJjlHFgxocC4ib6Mh7q4rUl33vAw03w80/6k92KCDMj/1zCgYaH6g+S8E7NVAc4b+aem7zyV9
X3Ah66GLfFX/9H3MLcCcGRB/CCbYtWJbYLL9EE62RxQNiJ+FE+0RebTbC15lBsVvWKU3BMVtEy8x
9yL6meJq/hSof+r6O+uS4YMfwq+Bjj8Ej0Dzc63U8leZGaXx/dazDYyrboprIT/QBg8ik+FJBpFg
GHMv8rqe0nxnWOd6qbirlXYjl/dzbWy8/nl1SfV3LZrbAwXWnFONnOvInMNkzmGYc289ZzfMuUiG
df6uTDY5u0POA5bpOZfQj0/bfA9Avkfnq3xDZL6hKt/0OSzfEJJvrJHvNB2hfxhws0art018GNed
nPjq3rOuy3WBdf4hm8XqZ6nF6g/ZLFY/Sy1Wf8hmsfpZarH6Q6k2wVQVtFmsfpZarP6QzWL1s9Ri
9YdsFqufpRarP7TKJrhKBW0Wq5+lFqs/ZLNY/Sy1WP0hm8XqZ6nF6g9F2wSjjeAUvlh9a1ysfgpf
rL41LlY/hS9W3xoXq5/CF6tvHYrNfLH61rhY/RS+WH1rXKx+Cl+svjUuVj+FL1bf2g+b+WL1rXGx
+il8sfrWuFj9FL5YfWtcrH4KX6y+tTs288XqW+Ni9VP4YvWtcbH6KXyx+ta4WH0z1poPGvUi5UaK
FKtPpiBzeoD5pwDzeZP5mcn8QC97WtyXrzL9zccCzXcCzW+1Sfpf5sP+Df5wjTmqw/ynv3WO7G6K
K1PIJM5J7Uz/i71vgYuqzN8fdLwVCSUV5m2ssbBIQVHBS4IOMqODomLeA2RQyVEJBsW8YYwlAV5a
Krtb0eZutLkb7XaxwhyzNjat6La1GxVtY1BZUekinP/znPcdGBjODO7/9/vfPn8/H3zmeZ/v9z3v
/XzPO+ecaTtFwp1L67kHm9W3pZRcuiKpTUNm1OpUjUcxF79mLT6Lopnbi3bqnT82K4k7fwnZWYY5
a8V5L0k9xp0d8uFisf9BsXyXXLotyfv41Lao2mcou3qMU52OsbakWRHn7Z8eb1ZfrIJ1Ztx9M8WZ
28Azd5Tbfb965ubXyLpDQbDR81uF1/jdjmqEk/Tdj9H7OBvszsfUYlvLrn8C2VjLxj1OKP7FEmJC
mx53XyBaBGV3b1e/HvqeGaR6Mmh1W/Bx5yfJwpx1+OgBNUK4b4aIEMwlqYwcLsDJzitMGLCXRogp
3L97XC2uXu3tknG3zlCb7adEAvX7cBY7VaFTowWe2g3y1H7LDPWeJ13bJuPGGeomI9ej9k3GF8BE
ix15TDR72bjXLaK9Qtlese7n71MLwK/Wcchen/PIRdU4Q/bk17tFx/oyNAhVv19UT7yfuX9hViXj
TqhlvNRMQOrp36qRjVrqU38TBVYv4hjhrFWVRM/XQ1XwcSyWBX8lkaeX8e2nlzGd4pJ4t/43zQrq
rndWOzarB2hYjwyjv/W6/vKYfnyXKGTQ423RUKjn+Z9Er2jInBggGop3775LRkPMj+3HaKi4Uq1m
p5jtS5NX1t+aAmY99i5P/y9GvmKYnhrSqigrR4UMc6oLbciweB2CXQRarZaSm7BcfuJYZi6b1RcH
KBUHeF4eIAgHCCpLUYovLjoTlD+BpSr+TElBtWcFw/omf9b9PNbhOEiK90GuOa+DnJ3e3YPEex/k
NX9uPgcp7+5BZkTJfpkFj/yrLCXb1PW5l3vSLoYONwgyCkREgTcdlV03Zrp2171gLosxujdh5jb8
wSceZrxoLlYnSrMZByjZ6H6xT3bIcffARzleXOYSxMFrMJKWGftGv2strjP/+jPj35LJHyejMJnJ
JRPUoWotiUA8He6J/+I+z7/CUrLAbSnZ0Nc86UZ3fjBj2USuOdWO4ZaS8eadvyAKhkf0u+biN5hp
3N+TGZr/4nit4SJmjfi8Dy5+8me8ynOVe9PvUOnjOrHcpKK8JViazH2xYg2bpq5Y4VysjseHCgtx
2aPG9EfcZWVssOrQTmclrpPzvm9WVu71bo5QS/HbluJaC4P2ZnPZZoO1ZA1Wwzwcan74C1xt3N/i
CuNgkONydVH8wL3tdlwzibbJ62sp/jC5eGU42m1mif4sr95CzCVYS3qTWoujGiLNZXko/XQcp7e1
OC/UUtKbVhebS+LZGMjCWhzzDv2LY86alenh1uLTKHhoW8HVct//W07rNRHui+9Av+7ACuleVSFW
EK73GEqeayldAqb4eDlOLkjgOBnQPk5CmFnyd943wqhTva/bvFtcnlXvbFbcT92ursLunvIYk9Rb
T467B3zHayyd2n5tF1eWIiUoxMno01p8xnzEPSVkZw3I7DJjizo4cE56Sr1F42j0L+pZ8wv35h0s
87ZQy/EZogMxAFZayjaERr9rKT5pLj67kv/a1hhzSZy5JAHNZfn1V3OJ/j024CA0s7k4SKXFDFTg
lf9Bg4HrkRltDKm4v7k4BqezOJ1DP7M4GJdiSv4BTCtLGSaeGq6/50TEX7wNvTjUc53FFreU3RSF
oqkh1qlUXppfgWW6vTzdmE9vPvRfP59+fvg/mE+JYj6N/K3WfDpxQ9t86no6fXeP5nTq2dg+Hro/
nx462GE+rXv8f/18mvm4nE9Hijzz6fJHxVgf/XiH+XRoitd8enFKV/Op5Zsu5tOZO8V8yrkN82lp
kZhPzx4Qx2ioEPPp6Df/2XxaWtFxPl237f+M+VS0o5vz6a+PeM8nsV22o1HdJEBQW6zGwKGv8PLE
PewuGRK/7jTeDoMR3HLjhxfVwZTOS4mSjX3ZnOVbmhVY3eGxusNjRXFCOfNxGCPUTTJ3xEMMbdBT
mEVuDj/FnbVXhvztO1N/msRnl9UrZnSh4yKYMXi+DmcY7teopJWLZcmQExMZZ/Y0l8yKZ8iPMRrv
Nhdb9RysZqYYELbeOVENW0PJI3igHHkgCw6Ub4dF7CRvCxQ13T2EVxEY8cg6vFPWjIjVHoVhgTvs
Xo65M+YdLrbkUjHaxcjVTeLINbaPXIMUvp5IIbJdiPDa4eyjiB1ObnC4r0Yccurn1o4b2t4GvWgQ
hxRuVZYMeSWuGw2yKU6jQWInet2aNW1igFuz1OPvvIPt1OuXOJ8W/OTRbrbgu3eLWTvzUTFBr/za
Ey9ojs/te/yOz+p97eOzaZOf8Xnvvg7jc9f9PuPzWJnP+LwkrsvxWbLda3y+XaKOz9Gx3eiObyZo
dMfvYuX43B/r07pbD3SzdR3lmuMzPVZjfCbFdnd83r4zwPjM2tlhfA6d0I0G+Xi8RoPsn+A1Ph+b
0J3x+ZVTHZ83TvBpwUmPdLMFx/xGjM/fPyzG5231HJ/qeVeNQHq9Ob79utizvzlpSgNS8/vzzLOv
XL2YCF3qafivx2sX/W1xKrse5W54rX253ivPV5gRfDpOnRHnzGWH1VqKSXFzKQfzYfUpBoz41h5y
xPODmBcHd3NecHyjGp9sUCeG4jFTenhNjG2MTJEXd6yZZyF3bopb3SvvZaNVqdwzSb52H7hTThKn
EEQDfDNOfQdSkJgnIc7QILm5IIr7UomcwwytSm50uy/Y3WEyNjMEKpts5GG/5+cSvbHE7ObORF+5
7/RGuUiWB9ykHvBJtWjt0zVTTf0jUhMUppYMuS+mG4MwNUZjEA5Q89uhHqVXa4zPuPrywW6Oq7+r
Gz1DLvQujXx2RPUo1YvPLJN8NqWk18tjPQd0is7p+HjQhhgWzin2azJiOtmiI9kd7vgORezimMed
Rq4WoqyHjafpdB2Lu8PF0eeJMTz3P8ao20u7O2wv3dG+/XRmrKrv6aDvatc/EvreDnpxu/680Pd1
0O9s1/cL/a4Oeomuw/f8m1rEoqRD8d0nC/lbXy0dv09v9TJ4hgYvdlzWDnrnsJsG93TM4SFvg7U0
KOl0CG8Dq3qIFnVhPKV+8wG8W06/YXXqd48Nieqq2TbA94/xXv/GBFj/1MN8tZ1d3T4bFnhnkdat
LB5TsxiSGd2NWTM0WmPW/CPa67hfR3fnuNeqx+31QLTPFCu8r5tTjN93oegHo85nii2J8jvFBnjX
ZEi3apK+Ta3JO50z9szHQ/v/g/n4QKk4LQ3Y73M9mC4CJlyNRn9iLipw83k8uHS4HikqOKMrYLji
fnc/L2T6hPw5OLzo7Ih8LMZYZZU3zXFv5V1rLVsT1G55UFhOg2kETQeai472aOirfj9qVo6aJy1y
5z55aioOhW5I6YHLotdNxqkY8/jfXMxhnGpcaC6zGlOsSDJb8SleDZi+cy/HdLBm1iUHNbLnonhe
aTUXf+zupYbXn5tHfsz0CDX17+J8gGMYPNfWESaMtRRridVo5qiLD3nFalwY8orDOJVvsgwtVs95
LIDDaGBNtvGMVbKMe/6fueduEWeiKJxTzMWvuXesEzuwBveHm9UKs0WsIz+nDS5tW3n1t/Yejw+y
DHe33iumWbjn/X+jcPJPohbFw4WUiR3i44XCLEKaHadZHFM8u5LPMSUe0UK618WzGGt/5FsOHVPa
x1qcZ/1ThWntwg1S2K4KSe3CdK/VKE0N0xzGRe4jqOWpFKXDWrW6TX2c6uKO6jKpRrh3Uk1Wv6Y5
6l2zb6/HLBkry/Hr9dqzJEQcZQry4df+R70b4+D1Xlvnf/KTyQUikzO3ikt93d1tQbunQ5Zfz+9E
lihtj7tlamcXsmdMW+2fuJW3XoEu8ARgRY2GhOIT5uL3MckQ/1nLbGKb6Wt19+YH93w14Ab7zu1G
OSyZH1qDflRXH0yrke+03S7y1noR7qhfIXx3Z8dl+g+RGAYXYRgY5Ll2uWcUPBWp3QwnxGD8AZc8
DUc7XbUsi/Rqy5V+MlHbMtRduUm0ZdVvuLzE63y+X8R6awy3FL9nKf7ZUvzv5JIeFlQw4TAmZKE1
7tSGbHNJubFQXbDGHTQwevw2IeSVyRFlSR8Xnem3wVCkGByTipSr8qer3VRoDurdcJ33fkmm/nZz
0GmlziP3bQh+vUeUPM7KvWblmDnub7lPNfREztHv4nNeQvQvXvsbd+oj9CdD/lyNo20cFr/rtDHo
2SBHz/hdPzmrzSGm94V//K5/5r7fwNRfjgblB1uO8+pGOfW4uudjZaD5ibXYzq3Gd8wjT8kl6ANr
cZjRveYu9HOJHXNgx071bJ1wvLdYoB3G2BcvUHP43v0zTmLWOLsxNsTJU8HMsmCDpazciINsN8e9
Yyn+JOSOsz34/esNV4Y4v+fjvfstxX28Z9Lj1w7X8Tih1pIwI1e4viE7eVMpWiIh5M/6iKIzo0J2
ftpeYFgmF/8D1WM7oYqW4u/zIvDfyo77UdPv1Me2tU9fi3LcEnci9xt+eSvqiWXyg+TiD8zF37h3
7JOLpftep/qV5/FEnaemUWpNOVAu5Ok6bpkxKsT5TZCs6Q4XK2qN+zy5uCHkjnokF23VoaK8sdW8
38zKqPtf7d9dPjdyuC65+Ee1wiE7L1XvQenRcIHleJCiXkR+Pz3kleDYorN52yPLEvZzJPUpOmvN
n9ow0Vx2kfo+wkz9DnPQG0rd9JA/m2KDis6szh/WcHnRWYcDZ7db8y9ruNgj2PN7W4qO92joicqz
NRJ29bSU9Jgm8rdtu7jo7LrthqKzWY7RRWdX5qc0XFB0NtFxVdHZGfkjWfLwwn76holFZ9fnD+cZ
KLzkgqLPnyt6M77BKFRLUFDDoKKzixx9GsKKzhbkh3hb9S2+AAfSxxZVv1R0ZsDGAS/00fXVhTx+
JK+fZ7jH8+F4nWmkOyHouAnX7x2+7vYsBg9HaFzB71SFce2C9+2pv28Vq1u8Orrfdx/J5/j9BoPx
1J6OMe/+FmmZXHwimcvbe+5y1fjvycU/JRefPbVRNZhy4DoEJBfkYKnspeY9ZQ8T3ryFP8rb2nZu
MDRcC8lB6Z/r+Stx51TbTCY8RFtdi8955IlrvJatZ64J+O3pzw6xbLXsbu7whan3+rWjcb96Ofs3
U/HRhOIaczGuKLGYW0sOG0/Ka9RwcY16+VZeubcojv7iXKLGZHZ9hOnOSjVysxQp3pq1eIve0MaK
l+mjMEOPTVGQlWNtew5ldn144WH9WZbM0c+841gdPjQgcHnotLqP/AnCNawVhZtjdY5ed05f3DCQ
NXprDWchTiPxUa8YxJxTTu7aSd/Xd36O/4PMZU+TmXatVWPWOrUuyxiHR/ECm5n8dps46USpF+Lu
e+9oVrAqu4rOZG7LKzM/WHRWH3Lbs8ijzLyv6Gy/kNvvZaR4JjvEqT4FXzLl9hHDuaA/P1Kne/EK
ttACZGjaVWFU3wRQMmWlqlepVOw5xKhHHPcoPULl5Y1hG/fnVzcrRWcWbg8pM79UdLZn7tSiMwmO
iQ33F51Z5BhbdCbDMQqlyi9Rv6oJeSU0upr3+HHzwr1jB85vV5vLeh3g654yg3eZg44on4uvWMrG
DcSRVGP34h28x8X7a/6FI9QtCbUu199l5FVBIv6S1SuacM9VBD4kmuUVTC+rsf3yo8Pj9heqeVWK
S+1fOlihbVe7P+F2TEkigvrk8E7Zt0Wu3FlhI51AXFj8Ea6u9weJq2s5zdXLv/bi7zcyiPG68n3Y
yAlha58Q6Z75b1QviY1BHR6XDGpzzBL6iA760CD5RZVXW1/Ky9S/eK8K4rqGlyPuXbewitdbrvLf
kBizvXpdpdGMrqu8LqfevirA5ZR62IvVw/a67SqfNl9V0v02X7pdXD+9d2ez95L3pbxIV4/0JJe0
dzpexfeXq2eou5iqAtX9qo3vUjgndjk55U591emGDZ28OVm9ZWM8L8u2uXWOTK/rsW3iKutX97QS
XnSMx7l9aNEZ9XpsBq7H3jDHHc27tt1qsMfKNDSIZjer12LBK9viJ16P3YTrsQ6XxOHR1e5p28Qu
d3jbnT593W/ni3UhlFn/IINRz7AbfiWC0Ut4RRTuPrZO3cuM8LoxYuCV2p32V3HzcBqW+4ZXuLRj
DVpR3Bade47w6nCvVf7N4QFWeYM7ZL1Y5S8vbrv/2Ht5D+2wQ7q3bYfUvFHskB4QO6R8FEnd+uQH
sVrdvslrh/SFDHWHtI/HrE9Prx3SZZvEDulBeSG/S+6Qmm4TO6S7OuyQbstv2yH1ejnMGwYuId+0
7ZAaOp597tvAQ9gZcv7qrlzL4cpb4XiJ+s+CDuv4iR3iarQvS/DaDnktIXdLQ+Vu6f2dtoJmqkev
lNulnq6IUVP/7LVdevOwDhs/3rN7etsyOWKYxvyuH8b8bhdbKyeG+UzZqjs67uX4m7IHN6vbOR8P
7bCds9drt2Sv13aO2LvpVTK0fdfloNzOOd3eByZRPrGMjx7WyRZH5mnU3b9DKbs45nGxfeQpLu8A
d5+9Vd0xDe3ptaZ7Jk39UP97pq6h/vdMK4b63zN1DvW/Z2obGnjPdJVcCrnl635wDZ9a6bgU/rXV
y2AzDZ7vGD8+7p3DEhrsa+kiwJQGcTS4vaPBcW+DcBo8J/dMl8k903vkhGz4q9gznSFPmm37/0O8
TjBrhwQ4wajHOXRzxwXQ4J3Ftd3KYq2axZBRg7sxd04N0pg7Bwd7HfdPg7tz3J+z1XPjysE+E22W
s/sTbWqBWvqcQecz0a4c5HeifTLIqzJfDepOZSJEZe7rnLFnVhYU/QezMnOjOO9/cpv3FUKH+9NS
fPdPb9feP72rqLv7p6uLurN/Okjsn8bL/dPR6v7paM/+aZJZ3TVFUiz3T6Pk/umQNd77p4a2/dNj
O7z3T8Pl/ukzO8T+qbz1yBMLMO770X3lBnG5H8oz7LhVbTdHq3ujWYvF3mio+6WVnfdG+8q90bk7
PD7qV5lf3NbxvPPuQM/eqLoV+9NGsTf61JqOW6hPDfTsjXr2Bu4bKPdGU3yW07sHauyNbhmosTea
ObAbe6Nm9xMrtfdGze47VmrvjYa7s1d23Bv11OydcK+90U/CA+yNmt3DV3rtjXoaozTcK2S6x08m
F4hMPs0SIVP9dp8bGhLCO+2NJmln1743anYXZ8m9UZ/9wQJz8WSjVf2uV2yEKe5li3kxhk+IRFJs
8ka9Xq9frk5tdUHqG/3tzk8cFmvmT9ayKYWDeMu93djXM9/UwEsNgFrddTdy6A1uZH3KbWpcJIfn
61DMyjFr3M+5bzPuuszGQTXYqN5fXzYuErm+eJHcsLr/Rq8N2CmFHQfp9ShYfgjGWoHvrkvE5dqt
/TfmmONeh+M2HOnUzh9f5tVlX14WoMty3CNtosuiEbA3POt9NYH1wuv+A8tlXd1/sAap+ZfR/2K5
J7J4aaf7ENL8lOF1MXmfyMSxX8T1i7kkqe9Rr/WyG/djxjn+6+/HzMr/D+7HnCbux7xvi9b9mFMv
bb+/udgc2ulmzIyVmjdjbngNJxG1P87zfsyLtne4H7P/kv/192O+uEnejxm9xHM/5h0bxUh5ZJN6
P2Zb/BOGget5TPHasOFd3I+59oj3/Zj91PvhszM63NX59wFew79+QIDh39d9bYY4UT+2qFlxly0W
d3N+tUGUcMhmcTPOz9W8AvS0//ncz1lya8f7OZem/p9xP+ezC7t5P+e/87Xvj8albzJWT4wMfnmx
89sQ53069dmrBZfwEU4+JnOT7Ikll2jsISeogqFdGNzeRTFchovTMG6ubU+MFNsiuUxGvNBgVp/3
VAeRNe7X/D2exYnkAXbiG1yBd36b/56lZLLRoj4NJZ77PDHP89xnYufn3M7jfvAX1v/Xrz9f5fwH
688NYv0ZWKA+vmyRX59Yyrb2ZewV6jZgAiK1843g1uJT7nHLNNeef78spsCP+eoZ0H3rAsyTrBt5
ruBMeSlPzJSfNgqzt17uEO92eF77fRHwJpet6psc1+RISChZq0somWGIO7Z1rqUkLdwa91OIs1Gd
OL+6v8AAjVttCCn7Ui2uOdy8801LSOLr1hDTD/y99FJ1Y3x7hM6xEL6GkumGhEmJuq0zE6N/OZUD
LfqTOHdI2UpaQVazPiezPp7brExi1twIZ2fw4fGQxNPmENMRa/FPvNwbpfrNEY+V/+S4LqEkUX0e
ylz8Vsl8BEezMN7ywuNOmkOsP5hL+sMsvz7upKX4n1sHowCWSWnhIc5vZAQQvlB8cYcsot9MiJth
MIckf2yF4ymuHPA5Va1rO5ojpsP8txTXJDAcsyAID7XwxQBxx3DMd3hSwTHr4o4lF/9r6wAeM+5T
RwFXnN/dqB4uujohbp3BGpJch0OdthZ/2bAcVg2L2mr1pWPEyr2sz3RZn/kd866PO8b6hMn6OIay
LlbvzFGPj5g5vxz9kot/8d87PdMu769lm7byqSsDTk/h7IKwOfxac7Ma/EfM58PZGFzN+XXiztGu
1psUcZ7jQ6ptU+8Gu3h5QsmF1pJMddadtvzahIE2syTyFKa84yZzyXJdMl1mhavrtzXuB863hW71
PCnnm+LOXyvmm7lkLOfbNW3zDdlZ475RXzP7E+Zbf2baT92FxoTrEV3dqb6cAW++qJ6sZfnNxV/N
N5cNGdyDp/5GzMReF6sfzyiOSxjvFDX0VU7y6hcp+T+o2S0/qlNt3VM3qZFU36O6tn+KB5Xtuq7+
KW2f4ts+ha1vUYbjLwF/C/GXmZ+bq7NlrcvLdmzSbciyr8/kh4wVeetzV+hycrM26NYVOHQLMzZk
peSuz8lYleHIXr9uVlbuuiz7RENyRk5Ols2QaM9am7XOkWeYvjpj3aos20TDPGSUYcuydSzP7OiY
tRkFmevX5mTbs3LzstdGj0nJt9vnZ69bM3/TuszEzuX3sY9VzdtMffMbn5yxLmNVVu401MM3zy6O
720f+PhjortsiETdZvPCOStX5mU5ZmQXTNRFGnQLZs+3JM1ONOm2UpuB1nBMVPP8YWOr0oq/Cwta
lYn4y8bfwc8U5Tmvv30SvdMfxN+jnyvK2/h7S+KLEr3/qGV/Baxv/3vmXwK90/m5i/aYn702sSAz
K4eVS9RBTVubl52WvS7bkZ1hz741a6Ihf92ades3rjNkecy6tNJNNydYZqdZE2cnpZp1CSkpaRaT
bl7ijYSFGbnrstetmmiYlu3Ic+RmZaw15Odl5RlsWRhvmRkOjChPlhszsh1pwiYtO/cWw8r8dZk8
5nDd/NR5iQnJaTPmzUlOM8+Zn+pJSJ0jqXAaO6bt03jPpzExbZ9i2z5FeT5Fj2375PkwoS2lzaot
i7FtWYxtE8e2H6D9oGO6nkRtGbYXoO1wMWN00zNyMlZk2zEn52Wt0k1fnZW5Ji9/bXLW2vW5m3Qr
bOPjxsbExK6Ii46OysjKjIkeH7cievyKMWMzs2yZWWNjY7LG2zInxGRFjxsTN3b82AljMzOzsjKj
beOi4mJhrMtembMqQ5e3MqNz2XSmxbMTki3T06Zb50yfNT8tcXbCNCtGs2V+2nxL8gJrQqplzmxd
cuL0tPkLUlLmzEuFljLdkpg235pwI/5X+8IyO0kkJlgxF5ITZ6fqZi9ITrPMSElKSLNaZs+ar8te
l5Pv0K3PdxC6bJ9RNoetQKPtRmWvT/MsWWkr1+dmZqXZsvMyVtix8Gg6iKWt2+ZcArttLNfRbttz
8e22Mdbh7tnm5q9Ly9yUac9Ky1yfv06rXbM2ZNg9U2u9unalRWl1QZY9Y1Na1i2BDaIDGWj1ZJvB
2EAGMYEMxgUyGB/IYEIgg9hABnEBGypwUwZsy+iAjRkdsDWjAzZndMD2jA7YoNEBWzQ6YJNGB2zT
MQHbdEzg8RmwTccEbNMxAdt0TMA2HROwTccEbNMxAdt0TMA2HRuwTccGbNOxgSd9wDYdG7BNxwZs
07EB23RswDYdq9WmXJYDLZPeNlqt5m2j1W7eNlot522j1XbeNlqt522j1X7eNlot6G3TnTbUGpkd
2rBbDa3Z0jj54qolrXunS9uKVWmZDrstLcO+dn2eIy1rbQ6ukwLY2tavywpk062McJbWOtt3sEnL
yc5B3VesCmx8S35Wnr/Ksuxp67XDMpiszLbb0+xZCMH8Gdnz81Z30yrPkZHr94DtVt3LEZcZ/kzy
u1F+NAGPaA9kg3Aq218fqXkgXM10rM8Vgfco9X/0Ry6uArJXrcuwz1ifuzEj14ZSJ9gychxZuaPm
z0hImzFn3sKEeSYE4TqrJTkBV1EeTBAfEpJ1JtO8mLSY2KRpagojbF1B5o0L4lLSZliTpo2JjopJ
G5OWqJujRtqGa0ZEjxg1YsyIawzZeYZMe0ZenmHE2BGGjauzM1czad16h4GXhagD4kzDxmzHavjE
wGccfNav9PiMHzFKl7LAasV/8826BfLK0DJH6KN0eY712boRebrEefPmzJtowBVmSm72OsdKA+LY
tRksh+4a9WB5+Tk563Nx5XeB7gLDtIzMNY7cjExeRnryXMELdMO6jLVIROF1KRm5uGxkPUQGKzF1
bYbsdYZRuHQ0YGBmjdLNyADYDI71hkzMDQfqkeHIXL1uvS3LYMvOVTtik+EaX7OVOaKQ3kba+xd5
q89r/wLmqmnQoJ6TDobrdGE9dTrTxGbFhc/6lc1K0yCdLgYYPFincxAX63ROpt+i01UB9dt1OuNq
pA/U6VyPNSsmoOmJZmUL0Phks1LB9IPNyqfA8qealbArkP5Ms2IFxhxqVuzApj82K6VA27OwBzqq
cHym/7lZOUf+YrMSg3LoX4E9sBxYDmwCHiZWNyuRKF/5hHNK8DAc/w/nFCswFWgHOoCl5ANaFD71
YZzTovCljampLUojsBYYfKVOVw+MRNvGLIAOTAXagQ5gKbCC6TiOi+nAeqYD9Te2KJVAE7AGaAM2
Ap3A4CHwA0YCXUArsB5oB+oXwh9oA1YCy4E1wCZgI9C4CP5DkQ8wElgFtAKNi+FPDiwlXwJ/YCqw
BugANgIrlsIP9XYBK4HOZdDZPsuhA8NuQv4G1B8YCSxPQ/7kQDswLB35kwMryTPgD3QBG4HOFfBH
+5kyYQ+0AUuBTmAlsB5Yw/a2IX+0rw1oBZYD7cCYLNgDa4GVV3JcwR5oXIX8gSZg8FXwA0YCnUAr
sApoB9YDS4Fhq+EPjAHW0B7YSHtgsBHtAIwE1gOtwLBs+ANNwFKgA1gJdAJraA9sBFYBg0egP4CR
QOPN8AemAu1AJ7AU6AJW0g5YAwxbA39gDDD4atgBI4G1QCvQaIc/0AYsBZYDK4EuYA2wHtgIDFsL
f4y7KmAlsBZYA2wCNgLD1kGPwHGAkcBUoBVYBbRHiL3VUqADWAmsB9YA9TnwBxqBwSPRDsBIoA1o
BdYC7UD9LfAHGoGVtAPWAMuBjUAXMPha2AMjgU1AKzAsF/7AVGAp0AmsBFYAa4BVwEba5cH/OujA
SGAF0Ap0Ae3AemApUO+AP9ABrKEdsJF2wOBI2AEjgTH58AfagHagE1gKrABWAl3AGtoDG4H6DfC/
HvUDRgJtQCuwHGgHVgFLgS5gJe02wp86sJE6MHgU6g+MBDYBrcCwAvgDncBSYBWwknbAGtoBG4Gm
TfAfjXoBI4HlQCuwCmgH1gJLgU3ASmDYrfAHpgIbgU5gcBTqB4wEVgGtwLDN8AfGAEuBqcBK6sAa
oHEL/IEmYHA06g2MBDqBVmAF0A4M2wp/oAlYSTtgDe2AjcBaYPAYtOM2+AONQCvQBLQDq4ClwHpg
Je22wx9oAzYCy4HBY6EDI4H6QvgDjUA70AYsBVYBK4G1wBpg2A74A03A4BjYASOBDqAVWA60A6uA
pcAmYCXQeBv8gSZgIzAVGDwO/QuMBJqK4A90AO3AcmApsB5YCdQ74Q80AhuBtcDg8cgfGAkM2wl/
oAloBzqApcByYCWwFlhDe2Aj7W+H/wT0EzASmAq0Am1AO7AcWAqsAlYCm4A1wLA74E8/YHAs/ICR
QAfQCqwA2oFVwFJg2C74x/KpGPgDa4GNwCZgcBzqUwx/oA1oBTqBdmAFsBToAlYCa4E1QP2d8AeG
AYMnohzASGAq0Aq0Ae1AJ7AU2ASspF4Cf6AL2AisBwZPQn6l8AcagVagCWgHVgFLgfXAStqVwZ92
wEagAxg8GeUERgJdQCuwHmgH6nfDH2gEVgJtwBpgObARWAUMngI/YCSwCWgFhu2BP9ABLAVWACup
A2uo74U/MAYYfAPqBYwEOoBWoAtoB9YDS4HGffCnHbCGdsBGoBMYPBX5AiOBxrvgDzQB7cAKYCmw
FlhJ/Tfwpw5sBNqAwfHIBxgJrABagU1AOzCsHP7AVGAl7YA1tAM2AquAwQnIHxgJbAJagWF3wx9Y
DiwFuoCVwJh74A+sAjYC64HB09DO98IfmAq0Ah1AO7AcWAo07Yc/0AasATqBjcAqYPB05AOMBOrv
gz/QBLQDbcBSoBNYCawA1gBdwEZgLTDYBL/74Q80Aq1AE9AOtAFLgU5gJbAKWAN0ARtp/wD8ESWn
AiOB9UArMOxB+ANjgKXUgZVAG7AGWAtsZPpD8J+B/IGRwAqgFdgEtAPDHoY/MAZYCawH1gD1j8Af
aAQGJyEfYCTQCbQCK4B2YD2wFKg/AH+gEVgDNAEbgTZgsBntDYwEVgCtQBfQDtQ/Cn+gEVgJNAFr
gDZgI9AJDLagXYCRQBfQCjQ+Bn9gKrAUWA+sBIY9Dn9gDLCROjB4JvIDRgJrgVZgagX8gU5gKbAC
WAlsAtYAw56APzAGGDwL+QMjgfrfwh9oBNqBqcBSoBNYCawA1tAe2Ej7J+Fv5XUG/IEmIC7+dDag
HegAlgIrgJVAF7AGqD8If/oBg5PhB4wEOoBWoBNoB9YDS4Fhv4M/sAJYA6wFNgKbgMGzof8e/kAj
0AosB9qBLmApUP8U/IExwBqgCdgITAUGz8FxgZFzeH0Ef6ALaAfWA0uBxkr4A03AGqAN2AisAAan
wA4YCQx7Gv5AE9AObAKWAiv+AH9gLbAGaHsG/kwHBs8F/hH+xGfhD3QB7cCwKvgDbcBKYBWwBqh/
Dv7AVGDwPPgBI4FNQCvQ9Gf4A8uBpcB6YCUw5i/wB9qAjcCw5+E/H/bASGAT0Ao0vgB/YCqwFKh/
Ef7AGGAN0AZsBIa9BP9U+AMjgTagFegE2oEuYCn5YfgDK4A1wCZgI7D8ZfgvgB0wElgPtC7gdSb8
gTHAUqADWEn+KvyBqcBGYBMw+EaUoxr+QBPQCnQA7UDjEfgDU4GVwHJgDflr8KcdMHgh/I/CHxgD
tAJtQDvTXfAHmoCVQAewBmg8Bn9gKjB4EeoHjATGvA5/oA1oB1YAS8mPw592wBqg8Q34A03ASFzP
pwJNwCqgDegCbgHWAsuB9cBKYBPQRf3NFqWeOvAcdWDYEujASKD+r8gPGAZcRl7TojiB9cAHgTF/
a1EOA03AWmAFsAnoAgYvhR3QCGwCTgbq325RUoG1QAd1YCl1YAX1E8gPGAasBRqBjeTvoFzLYAeM
BDrfRfsAy4E2pgOdQP17KBcwDFgFNAJrqAMbqde2KPrl0IGDgUZgDDAGaCX/AOUC6j9EuYCpwEqg
E+gCuj5Ce9H/Y+RzE/oRaAQ6gZOBVcBUoOnv6DdgKtBJO+CDwHJgFe2ANfT7FO3FdGBwGtoPaARW
AScDXcBUYC3QDmwCOoFh/0B+QCOwCmgC1gBtwHqgA3iOfsDB6WhnYAywCWgF6v+JdgPWAp3UgQ9S
B1ZR/wz5AcOA9eSfo3wZsAMagcYvMC6AMcBlwHLgFmAVsBxYC6ykPdAFbAJ+CnR9iXJRB4atgA6M
BDYBTUB9PfIDhgEd5P9CuWgHrAI6v8a4AJYDG+kHDM6EnRvlAoYBJwONwFRgE9BB/RT6kzqwgjrw
MDAGWEvegHLRrhHlsqE9gTHAVKAVWAW0A11AJ7AW+CCwHlhF/VvkQx3YSB2oz4IOHAxsAsaQf4/6
AV2nUS6g/ge0FzAMWAl0AGuATmA9sBx4DlgBDFuJ4wAjgc4fUS5gOdAGrABuoQ4sB7qAlcBaoIu8
CeWi3c8o1yqUB2gE6n9BewFtwGVAB9ABdAJLgeXACmAF8DD1X9GP1IFN1IHBq6EDjcAq4GSgC5hK
fhblAjr/jXIBy4GVtAe6gPpm1BMYBjwHNALDstEvwEhgKtAEdACXAZ1AB7ACWAqsAlYAXcDDwFpg
LbAe2AhsAupvRv7n0A9AIzAGGAO0AusV9CewSdeqVABr9a3Kp0zv1aqcA5b3a1Vi1gAvalXswIr+
rUopMPWSVsUFtA1oVeqBpstblcF2pIe3KpOB5QNbFRvQNaRVeZA4tFU5DAwb3qo0kQOD1yK/Ea2K
iXg17IG2iFbFST4SfsCqa+EH1F/XqtSSj4LfOviPblUigRVj4QesioEf0BYLe6AjDvUgTmlVwtaj
3W5APYAx01APoGk66gHUJ6EewDAz6gF0zUI9ctAOVtQDWJXSqjiArrmtSnkO909blZoc7oe2Ko1A
25JWxXgL0peiHkB9Wquy5RbuN6L8wNpMlBtYb0O5c7kPCB0YsxbHI+a2KtY87te0KpXA8lth50C9
tsPOwet19AvQuAv9AXSUoh75vC5DPYDGu6Hn87oC9QXWPoT6bmDci3w3MO5EuYFVv0e5NzBeQ7mJ
h1DPjTheFew2cl8a7QfUV6P9iMegF/D8Bx3ofBv1Q3ldn7QqVblcd3EclrsO7QN0fYF6Ao1fwc7B
9Qmc5T0FHcfTf4PjIt+wBhyngHGhohwuYHynKI1A4x8UxbgJ6X9SlGXAqj8rSjkw9XlFqQLypQiN
wIoXYXcr8CVFsQKrDiuKE9j0MvIjvqIo9bcyPlGU4M1oX5eixAArgKlA119hDzS+DXviCUVpAta/
pyiRW3CcjxTFBnR9rCilQH2doriApi8V5Rywqh75bWU9kR8wBmgHmv6lKBVA19eK8inRrSj6bbA/
pSiTgU3fKIqD2KgolcCYbxWlBhgmv88IunWeLqggNGhQcJ++fNbRiLTB+CsY3qxUX4cP/UNn9A+f
GXLhxr6FuqlXTLp2rPFKnbQR/ilWNYc+D6w9Y9AN8uQToxN5hc5pVh6eiPr0xCKY0D90Wv/waf0N
0/pHTOsfldA/Nql/dWhRn9LeZb126/f0vL2H6reMxy9uVgp7wK9Pl36m/oVBHfx4rHL8VZc0K+8E
yeNNU/0S+htM/dOL9Lt77hH58zbxgrJmpZiP0HSVd0qHrNV/9IuBfd3uZuWtHhp+e4N8HOlnh1/B
vmZld8/uH4/tWwG/k+XNSnB7OVEXVuT2HtRdSK++u1n5Uxc6+5cvSkq/t1nJkXpRD5HvOfDn9zcr
+i78WN7BsDt4X7NSoFXPnK7bJxWfTz/QrGw4j3rSrxSfYx9pVu7Q8jvg267sbxc+7n0M/ciEaR6/
hP4RCf2jinqVqh1Ou0rYnYEdwked/hqbapsg6txzt1c5+L1d1OPNitL1uEjoH+9bfrazFX59ZzYr
6leKXu1sQ7oB6RNk+u09pl/UW9fevybo1RXNyl1cpxoyO9io/Q89Ja5FGaTh7wqg1wfQ9Xqhx2no
/MmgHD/+pgC6LYDuDKBXBNBdAfR6qS/Vqn8vne4Q9OFa9YdeDf0mrfpD103U9rdBD52o7e+EnuLH
vwJ6OvQMrfqz/NB3atUfumGStr8eJGeSn/qDFE7y0/9SHxnkxz/8nPIMx/foNT7j28njT/bT/yCn
d59TLtCqf2+ux+eUwX78qX9g43WVw+f49A/F8f/Ctsjc7KPX48Mhj77eVzf1Qf9NaVFe02o//sDa
DdJ/adf+Bzz6Kl+9Anr8VO356YKe7kenf+FUmf9Y3/z1fTE+4rX963l86M/QdljX/ifjZf7X+epG
6DkJUp/QRf15/B/PKW/ye4npXdSf+V/foozupVF/6sj/Uq3yS32ghq7vJ/T5Wv0HPXSadvuYoKeP
aVFyNXQb9GroIRq6E/rpBD/9J48f4cffAJ1xj350oW/7QT8AnS9d00/y1V30n96i8Jcg9Um+ej30
Q9D59hf9fF/dhIkZZdJuX5vUh2mVP4BeIXWt+rugx/vR66GnQL9eq/8vRP9B11o/jFIfqdX/0HP8
+NukPkSr/lIfr1V/6Hv91R/6AX/1h37Ij64PxviE3l+r/sHC/xKt+ktda322BYvyadXPKY+vVb4K
6Cf91R96nb/6Qz9t0p5f+oswvxK1/Y3QDYna49MUQLdJfbZW/aGnQJ+uVX/ohdBnaNUf+iHoU7Tq
D/2kn/rp0fF1/uoP/bS/+ks9yo+/bkaL8hsea+oW3/M/9ENY3y1a9Wf5oF+mVX+pD9Wqv9SNWvUP
EeXTij+MAXRTAN0WQHcG0CukfqNW/aHH+9HpXwh9Ieuq3Op7/g7F/IO+Rqv+0EOTtM+vJqlr1j+A
vzOA7vHnD/rqF/qW3wU9HfpVWv0PPQf6xVr9f7HQtca3x99E2+83+Z7/4H8A+iit8kM/lKS9vjql
v2b/S12r/C6pa62v9dCroV+tVX8s7Cf9HN8oda31nf7MXx1fXxf4tI+NJw6z9vhyQk8xa/d/hdQ1
r/8C+NcH0D3+6via6lt+4wC0r1l7fJmgHzJr949N6prrp9TV8fXhRt/4DXqdWXt8uaCf9pN/fQBd
HyZ0zf4P8+9vCuBvk7pW+zilrhn/QA+1aI9fF3SDxc/1v9Q1rx9l/ur4Xb/Bt/8xcFIs2uPXBP2A
xc/6JXXN9T+Af0UA3eOvjt/j+b7xO/TTFu3xq+eJdaZ2/xilrjl+pK6O3zTf49ugR83UHr9O6PF+
8q8IoLukrtn/AXT95ULXrL/UtcanCXr6TO3xaYOe4+f4Tqlrjc8Kmf9irfpDP+Cv/gF0j786/v+S
5zv+w7H+zPQz/qFHzfIz/qWuWf8A/hUBdI+/Ov5DfMtfD71wlp/xjwvXvbP89L/UNce/1NXx/2Su
7/iHXj3Lz/iHftJP/hUBdI+/ncef6nv8eugGa0vbvrRP+a9A+1m1609/6oto++stvvEP/HOs2u1r
u4I/4qF9/eKEfsjqJ/6Rumb8I/UxWuWHfhJ6glb9eeBkP+c/qWvOf+iGZD/zH3qUn/ydUtec/zJ/
zfkrdc3+k7pW+fX4L95P+Y34L8XP8U1S1yq/Uea/nsc6sd53/OC/vdBvpX7cV6/Af6ehX6lVf/43
28/6J/UUrfoPQfvP1l5fjFIPC+Cv7o+O9i2/DXq1n/I5A+gVUtesP/STs/1c/0Cvm+1n/RoqdK3x
YeSF9Rw//R9At0ldM/4LoFdIXTN+g356tvb6Wi/9Nes/TOha64cRusFf/aWuuf8TwN8pdc36S10z
/oUe5ad96qV/qlb9DYgvoI/w458Dne8L12+2+85f+Nf563+pa41fJ/TTc/zE/9BDU/ysfwH0eqlr
Xv8PF7rm+sUvxlK0298UwN8m/TX7P4BeIXXN8T9ctJ8/f+pqfPD1zT79R//4FBn/fear806PwhQ/
8R/0kyl+4j+pa9Y/gH9FAN3jr8Z/E3zLXw/dMNdP/Achaq6f+E/qmuuH1NX470S27/oPPX2un/gP
eo6f/CsC6C6pa45/qWuOf6PQNdd/6Hvn+hn/0A/4Ob5N6lrj1ynz14pPK6S/5vlD6mp8umq1b/9D
r/PX/1j4Ts/Vjk+N0A3z/Kz/Utfc/wng75S6Zv9LXSt+dUFP8ZN/vdQ14z90bM48P/EfhEJ/9Ze6
5vop81fXn89W+vSPE3r1PD/9D/2kn/Z1Sl3t/3t986+HHjrfT//jwIb5fvofesp8P/WXumb/B/B3
Sl2z/6Wu2f/QC/3kXy91zf6PwPyZ76f/oR/yV3+pa57/ZP6a9Q+gVwTQXVLP16o/v9hK9fP9IYTQ
VHl9st7mO36gp6fK65NVvrppJMZvqnZ8Y4N+MtVP/aWudX1SwS+eF/jZv5a61vWJx1+9Pjnhe3+Z
/lq+wNfP9W8A3SR1zfpDP7BAe/45oR9a4Gf8S11r/Lqgn/RTvvoAuv46oWue/wPoJqlrjn/o1Qv8
nP+lv2b9r/NfflcAvT5A+fWRQtec/9Dr/NTPJP21ri9s0ENv1L6+oL/hRnl9sTTD9/of+t4b/Vz/
Qj9wo5/6B9D11wtd8/pJHl9dH75O950/8K+7Ua4Pn/nqNujxC/1c/0BPWehn/ZO61vrggl640M/3
X1LXWh88/ur6kORbfiMGbugiP/M/gG6Tumb9oRsWaa8PFdCjFvmJf6Wu+f0n9BQ/5dOP9q8bpa45
/wPoNqlrxr/Q4xdprw8V0l+z/lLX3P+EnuOv/lFC18rfGOXf3yR1zfpLXWt9cUIv9NM+FdJfa31x
QT+0SHt9oX/1Irm+/Ga57/yNxvhZrD0+jdDjF/upfwDdJnXN9VMeX11fhvmWj/6Fi+X6crmv7oJe
56f89dBP+ymffozQtdYXI3TDEj/3f0hda33x+Kvry/ZlvvE/9ENL/Kx/AXSX1DXrD716iZ/4fyzO
X0v8jH+pa+7/Qz/tp3y2ALpT6pr7fwF0l9Q1z1/Q65Zory/6GOGvWX+pa60vJuihS/3UX+qa129S
11ofKqAblvrZ/5L+WutDPfSUpdrrA/3Tl8r14cIlvue/cej/pdrjywS9zl/9A+hOqWuuf/L4dq3y
Qzcsa1Gu06o/9Khlfu5/xMBOWabdPkbo6dAv1Kq/9NfSbdDjl2nfP+qUuub4l/porfrL42vGf1If
p1X/CTi/+Dm+MYBukrrW/LBB37tM+/5MJ/RDy7TvL66AXu1Hd0E/Cf0JrfpDT1+uretjMb+X+zn/
Qdfd1KLcplV/6DnQJ2rVH/pe6L9oPB/ipH96i/KDhl4BPWVFi3KFVv2lPk2r/tAL/eh6TIxDfnQj
9Do/ugl6aKa2boMe70d3Qs/xo1dAP+BHd0E/6Uev58S3+ak/Oi7Kj26Ens73DmrVH3oO9N9r1Z8D
I0vb3wk9NEvbvwL6AT/+LuiHsrSfX6qHXu0nf/0kjJ+V2vkboaev1M7fBD1npZ/6Q9et0t7fdEIP
XaX9/ESF1DXjH6mP1ao/9Cjoz2vVfzLGj5/jG6WuOf6h61a3KPu16g+9cLV2+zmh712tPb8rpK4Z
/0hdq33roR9Yrd0+eizM1au128cIPT1bu31MUtesP/S6bO36OaWuNf4qoJ/O1m4/F08sN2uPv3ro
e2/2c//PDWifm7Xbxwi9+mbt9jFBT1/j5/kfqWu1jxN63Ro//S91zfkP/fQaP/WHXmjX9tdPRfvY
/Tz/CP2AXTt/E/Sotdr526DHr/Uz/qGnrPWz/kGvW6vdfy7op9f6mf/QQ9f5mf/xWD/X+Zn/Utfq
PxP0qPXa/WeDnn5Rc5fxIa8ZndBD18v418vvQaT3Xd9+36Opf1RRDy+/w9DN0EO9/Jhei/T4LtL5
nr5YpPftlK5PEOXXdzr+YKRHIP1I2/HjOxx/MvSPOvkxPRXpJ7s4Dt8D+MZ6+RyAd/2RXo304E7p
DyL9+U7pfIbFgfRDSP+G7ze4I9nzHHtS/8KebQ+y0/9T2BXc0qK8I8vvqVcT0uNzW5QkJnR6Bp5+
YVjoc3J9+4PvJVydq90ffF/hQeiXd6qHDemHcuX48ErfgvTnc33bqVzad+6PSpn/Wxr9wfchLsrz
7Y96pKfk+R7nHNLNeb79ETYd7ZPn2x98r2Jsnm9/6JEelSf74yqrZn/wPYxnHL794UR6dX6LcrtG
f1Qw/w2+/XEY6REbtPvjU+irN/jOgyakp3eRzvc/LtrQsZ3U+Y/0lA3a88DEGx82+rbvMqSf2eDb
vg6kn97g2758v6R7g2/72pBet0G27/czNduX76M8WODbvvVIz9mkPd71iVjfN8nnw7zqPRjpzyN9
YlCbH6uu+lGfDP2jW9uf2/NuF+rLoPfd3KK+b0LoKR3abQt08+Yuxj/S4zd3LA/T+d7MRUgv7pTu
QvpJpPfplP4p0t/YLK+7vdKbpP2ATul8/+ZHnexZhnrY1yH9Nbb/AxbN9uf7Ondt9e1XG9ILkd6z
U/oWpBcgvVfn+iM9p4t0vvdzdRf5u5CevlU+H+hdf2nfOb1J5t+vc/2ThH3n9jImCftLO6VPThLl
7zwvU6W91rx0QD+01Xf+8f2kB7tIr0D6ga2+8/Iw0vdv1Z6Xn0I3b/MdX01Ij9/mOy/5/tPYbb7t
a0R61DbfeXkO+URsk/PymSTNcWGD/+ntvvNyC9KfL5T7Jl3Mywehf1To275VSD9ZqN2+tdBDd/ie
h/ie1vAdvuchPYa0YYdvOw22CPvO56EYi8hf6zyUCr16h+95iO+Bfb6L4ziRfmiHb388iPSDO3z7
owrpB3b49gffL7t/h+yPWTM0+6MJdulFvv3B989GOFuUBzT6g++lPej07Q8T0g84tfvDBr3O6Tuu
tyD9oy7Sy5F+0uk73vne2zec2uOd78Mt2OnbvvVIz9np277nkL56p2/7hs1C++z0bV++Z3fRTtm+
lydqtm8q/A13+LYv38PrvkN7vPP9vH13+bZvBdJ1u7Tb1wU9fpdvO36K9Ngu0puQHrXLt335/t+I
Xdrty/cCf7TLt31NSD+5y7d9lyH9jV2+7etAevUu3/bl+4af3yXb98vpmu1bBbvCO33bl+8jNpdo
ty/fU7y6xLd99Qih00u029cI/UCJbztORvr+LtJTkb63pIv4H+m7SnzXEyfSC0u0270CelSp73py
GOkRpb7HqUW6odS3P/ie5fBS3/7Qz8Z6VurbH5/Cvm+p7I/t0zT7wwT/k2W+/bEM6ft3a8ddW6C/
sdu3P8qRXr1buz+q+CKFPS3KRZ3qwfdBn9ntm14/m+8P6iL+R7p7t29/hM3h+4JalBPt5W6L++gX
A33vHt/+4Pumd+3xPY4N6YV7fPtjC9IL9vj2RznSc/b49gffY716j+yPQQma/VELu6h9LcpJr/5Q
+x/p7n1d9H8K6tspXY1/kf7RPu/4tWM/TIYefpcc/wnifWfq+Ed66F0d+1Ud/0jvi/TendKd/OL5
Lvn9sVf6g9K+c3qVzL9zPWo07Oul/YWd0s9J+87lD5sryhPSyZ7v9T6zzzfdhPTT+3zXgWVzRXt3
jj8d0r5z/Fkq7b3LE4OPFXNF/1RqvRevi/fwsf8+hd+iu1s03+93Drr5nhbl7+f5PsKYeSj/fdr5
pkKvu79Feeo8yks/vt980cMtyrnzLI8LfobHWrp8PyLzrYce+vj5t9/g+ZjPv9Wu52ToBU+ef/s5
4Gd4qut81fdXQg+tbFHi5HVn53dXetrrMOwinsZ1ol7j+OldH7+Jx/9ji9IsxxnWkCLv91SGpeK/
P7UoyV2/91H7/YfwC69qUR7rNH5tSD+E9LrzbP8H4bfo+RblV51vO6nXP9BjX2jRfO/lp9A/erFF
ie/03ssm1u9w1+2vzv8FGN+H5ftodO3jk++1j3j5/MeRDX4HqrXHkRP63iPnP44Owy/2mHa+n7K8
r5/fPFTPfzeivG9qz6cY6Hv/ev7zlO/xX/S2dr58v7/5xPm3rwt+1e9qt0M99EPvtSjPn2d5By9E
+37YovTQmv/QIz46//I64HfgE+3ylkPf++n5jwf+nkFsnXa+/J2DiM/Pv7zGRShvvXa+Juh7vzr/
8m6BX+wp7XwfhB7xTYty53mWtxZ+hd+2KEEa+TZBz/muRfnzeZaXv+9w5oeux4O6/kHf1fTvDu9/
5fGMSD/5Y4syH1z/UlzHYyb0j+IBe5d2OJx4/zH8Ype1KvEX8b7FiV2VNal/XU+f9ybzdyaqm1qU
f/Xi9wOTuzjegaDOB+R3VzXw65vdqixhfLl5ipdfQv8IFtLLg/b8vQrzv1uUH3H+0T/lY5/jba+u
n0uQ/82tyhi0uz7vhq7rc9r3fc42+NW1tiijeJyiG7zaXp4TZb1LYee2tyqL2M4TpnbrnKi+Pxh+
h3q0ivyTpmrm38j818n8m7uXv9r/SzEee7cqvdkfF8Z37dfpPdZq/8Pvo5xWZR2P95aGXxf1KYef
4UK0M+tzIr7L+rD/+DsfsSGtSpzargmd+y/du//U/Y+l/L6mVanl+Bg9rUNsEuX1Xm3+TohhQKuS
wnyHTevW3KUff08k9vJWZQb9jk7rYtzmdDlP+LsjKYNalVT6rZre7eMdhl/BMOl3oanbfk3wO3CV
rN8z3feLxIXU89dIv/mJ3fJTxz/8Tl4nx+eviV32p7r+w+4M+ucONsw07/Vpj7ru8XdUnh/dqsxl
PiUzutW+6vp/E+bf2NYuv5/iOOLvsKTEtCq/MN+QJL/rAO1jYG+Ia1USaf+hj31653XDBvv4Ka3K
Z5w/ReYuyr3XZz1Tzx/wc09rVXbSb46l6/bu9K52lq+WxzO3inUtZGbA+pjSEK+j3Xu2x+vCNql/
dZDnBeS69nU2BvZ1VtleT/rPX60/7A/NbVU20n79rG6PN/4+zS6U6+lq+A2wdr3eVg/0rT/8dGMV
ZRPn+aQVfs8D6vk/nf2vKJ/oujyfdnm9QL8t8DsDvwNa1y8a74l3wC89TlG+4HmkOaNb6ynHcSP8
wqcoyn3t3+e1jWPmy9/b2X+DovRnvZNWdKtM9NOjCDlTFWUK/Sas8BoDnvEZz+FZ5j0OOK/5ez0F
8YryS/t89Xlvvdr/sEtJUJSLmP/C7pfrQfhFTJPlSup+ufi7QFHT/ZdL/f4H+fc1KcrDPD+tWuG1
5iT1P9SzqM3OuILvn5R2JV3bsX9KIZ0xK0qWHEcmdI73vLFDN1sUZUhv5LNnRee5dqi311xT6w+T
2DmKks5x8l5X9RfrhncD0I+/b5Q+T1HOsW+/X9HFetN1vMbfQYqYryjPcp5+qdFPXZznTfA7tFBR
8uj3dZd+Sf1P9vSJi7bA78xSRVnM/v11hc9epadc/L2lqOWKMo7tdmGmTztgEejdVTt8CtPYTEWZ
zPZL8vVTK9OFH3+/KX6lomSwXJmZXbfDId/5WQq/glWKsraL/md8XQn9Deje3wur53+kVyP9AjUu
0TheF/PjMPz2r1aUzfQb1lX9up4f/B2puuzA85a/M/X8zYri7npd1FzfUuGXswb9xXL16X59+LtV
BXblvH63Qv3+YyX6a50inm/pIm7g72ClQ1ff3/5Zl+PTJ291/xP5Hvy64/UQ/ykP/LmwUNeTWevK
Y2XD8gM3Ss28Wfj3IPy2fT7JqyCfBek8vs/AVc1xlyeNH7gXzN8pCSoHafSMjiCf4y3wSPzAG0rn
0qYGf9wdvpHkQ/z922OmPPABfdVXNxs8ifzAQcgXHgfxqYlBHiVeKokkZkl4qKBk/Ne2Qewp18Pl
yPsBdb+ZX1ZzDdUVSPd8ksth+ekone5ukqtxPH53/ThJYpQo/x9JlkaJkfkqSas0+4FkSLQwU0jG
RguzizCmdNeOEWZTSSxjhFkySdoYYbaU5FNpVkbSDMK3mD9AsmmsUI6Q7B8rMuDj5bo/jBUZ/INk
XIwwC8Fs06XGCLMhJDfHCLPrSH6QZstJQscJszUkV48TZptInh4nzJ4iqZFmL5B8Ic2Ok2SPF2Zn
SXaNF2Z9eGJ5eLwwu5RkxARhlkTCxzhotoBkyQRhlknyuTS7Wz0zxQqzx0kuixVmfyR5KFaYfUly
WJr9QPKuNFNPbYvjhFn0SvZ2nDCbSrI7Tpglk1w6UZhtJ4mZKMzKSGZOFGYPkLwjzf5GclqafULS
e5IwO0VSNkmYDVqF//gD0DQbSfKaNJtAYpkszLJJVk8WZhtJtk0WZjtJek0RZn8h4e3RNDtGMnGK
MHuP5Ig068U389RJswEkv0iz4SRbbxBm80kevEGYZZD86QZhtp4kbqowe5Rk0VRh9gzJuqnC7GWS
n6XZ9yRh8cKsheTaeGF2YTZ7LF6YTSE5Kc1mkfxLmi0mWZsgzEpI+APONLuP5LEEYfYkychpwuxj
EvM0YfY1yU3ThNnPJF9Js2tu1onbBmk2juSK6cJsOsmj04VZPkm1NCsi+UCa7SNZbhJmR0m2mITZ
OyR3mYQZX+akG5gozC7m+5tiE4XZMJLZicLsepL3pVkaSZM0W0tywQxhtplk3wxh9jTJoRnC7CWS
16XZmyTJScKsmYQ/wEyzfnyC7bYkYXY5ST+zMLOQRJiF2UKSG8zCLIvkmDS7l6Remj1B8m9p9izJ
Rosw+4rkHotYq34iOTBTKAMZW7w6U2RwDcn7M0UG40iWzRJmq0g2zxJm+ST7ZgmzIpJwqzB7jmSC
VZgdJUm2CrN3SGqlWc91LIY0u5ikX7IwG0ayN1mYzSV5JlmYpZEck2ZrSfhryDR7hGTNbGH2NMmO
2cLsJZK+c4TZtyTXzBFmzSRT5gizfnzO2CXNJpF8Kc0sJGel2UKSwhRhVkzySIowu5fkuRRh9gTJ
5LnC7EOSpXOF2Vckt8wVZj+RRM0TZiNy8N+cecJsLEnWPGGWQNIozfJILpwvzHaQDJ8vzPaQPDxf
nn9IXpbkBElqqiA/k+Sligx63sJ6pIoMLibpvUCYTScZsUAMl7kkr0plI8k/F4gMdpI0LRAZ/Ibk
lhuF2TGSvTeKDN4jMSyU5x+SqQtFNNOHPxDTb5FQrieJWCSynkRyAwgDG4v6OzKLhdlmkmGLhVkx
ybjFogT3khyWZm+SfCLNPiT5QZp9RVKwRJhdnkfHJcJsBMnTS4TZWJKYpcIsi2T+UmGWR5K9VJjt
IDktzZ4lCVkmzI6QjFgmzE6QVC4TZkEO/PeWNAsh+VyaDSFZvVyYzSG5Y7kwW07y0HJhtoaEm1A0
e4hk+k3C7CmSxTcJsxdI6qRZA4kizc6SXJomzPrwNUHcGqFZHMlLacIsieQdabaAZFG6MLuDZGO6
MLubpCxdmD1OEpYhzN4nGZshzL4ksWQIsx9ITkqzqzbgv++lWTRJrxXCbCrJSJBszz0MygNPlet6
HlTpIpmmfmC8uJ5BHevGGyi2koxAvPgB4sWHSEbJQPApkmQZL75AkinjxeMkvaPlWFUzkPEiLzt0
k2S8eCnJGBkI8kJQN1fGiwtIVsl4kZd66sP2aqxE0nOsmBOPk+yQ8eKbJAdkvPghyZ9lvPgVyRQZ
CF7O0G2ZjBdHkOTKeHEsyVlplkUSLgPBPJJRMhDcQfKcjBefJamVZkdIvpFmJ0hukfFiEAO0vTJe
DCH5rYwXh5BcLwPBOSRWGS8uJ1kh48U1JKek2UMkfWUg+BTJUBkIvkDyhIwXG0hc0uwsyd+lGX/0
Upch48U4kkIZLyaR3CPjxQUkQ2QgeAfJZBkI3k0yT8aLj5N8LM3eJzkjzb4k6S8DwR9I7pbx4lWM
46pkvBhN8ldpNpVkrowXbyHJkfHidpLbZbxYRnKRDARfJYmUgeDfSKbJQPATkjel2UWM1tzSbBBJ
qzQbSbJTxotLSSpkvJhN8qKMFzeSJMhA8Hck6TJe/AvJBhkvHiNpkWa/kgyOF2a9GK2NiRdmA0he
iBdmiSQfSbP5JN9JswySfBkv/oakXMaLj5L8XsaLz5BEy0Dwc5IUGS9+T7JSxostJN9Ks9GM44Jl
IDiF5EoZCM4i+Z2MF7eSvCHNSkj+Kc3uI8mS8eJbJE4ZL35Mcr+MF/lyUN1wGQgOZOgWLwPBa0hu
lPHiOJJ/SLNVJOekWT7JJTIQLCK5T8aLz5E8L+PFoyRvS7N3SBbIeLEnozWHjBcvJrlTxovDSC6W
geBckigZCKaRzJCB4FqSv0mzR0gapdnTJD0sMlYi2S7jxW9JHpbxYjPJQRkvDmccd1zGi6NJ/iHj
xSkkNhkvricpkvHiVpL7ZLxYQmKQgeDLJFNlIPgWyQIZL35M8qk0u5DRWrM0G0hysQwEryHZL+PF
xSR/kfHiKpK/SbN8klQZLz5JkifjxedIimW8eJQkVAaCP5OMloFgT0ZriTIQvJikRppNJ2mQZnNJ
gmQgmEayS8aL+0ielPHiIyQvS7OnSUwyXvyMJFPGi9+SbJLxYjNJrAwEr2cct1DGi5NI1sp40ULS
JM02kwyQ8WIxyUgZL95L8lsZIr5JckySD0mWyXixhWSzjBcvZOi2T8aLA0n6y6hwFsn1Ml5cTHJc
KttJ/iXjxTKSczJefIBkk4wX/0ayX8aLn5BEyHgxiNFakowXQ0gulvHiOJIoGS9OJ5kh48W5JH1l
IFhEco0MBPeRTJGB4CMkLmn2DsmX0uwzkrPS7FuSQhkvDmMc94iMF68neU7Gi5NIJstAcC3JUhkv
bia5RcaLxSRnpNlLJJfLQPBNkutlIPghSZWMF/sxonlPml1OckqajSDJkfHiQpI9Ml7MInlCxot5
JJEyEHyCZJYMBJ8lyZDx4hEStzT7iaSPDASDGK0NkYFgCEmFjBcTSI5KszkkH0uz5STp6cJsD8n2
dGH2EMnd6cLsKZLBMhD8B8kkGQg2kMyV8eJZko+k2XWMCn+VZnEkF8l4MYkkGmRbe7z4UFlhoa7n
/ReZdCJIHM1dVxxd3X2cQvKLVJaTXBIklDUkV4I86tlWPdpDHH4ln1v+AoTPizlIfgYJ9Zj10guz
+6nwVkSaHSR5Vypvk/wglU9JHukllB5X4r9XegkllMTeWyjjSUp6C4UvmNbF9RHKzSSL+gilgKR3
X6E8TDKir1AqSd6TyrskP0qljuRAP6H05kuhXu0nlDCStRcIZSJJ6QVCMZNMvFAo60gWXyiULSR9
goXyGMnVwUI5RFIrlQ9IfpIKX8ise/QioVzAjqy+SCjhJOv6C+UGNX7qLxSrOutChJJLsiREKIUk
fUOF8lv1NBEqlCqS96Xyd5ImqbhJHrtYKP25hX3kYqEMJll/iVCmkey+RCgpJI+CWPSy67+5TJht
oNLvcmHGtxnr/nK5UH5P8oFUnifhj7VQ+SfJ4+FCaSSZO1Aol1yN/3IGCsVAMvQKocwgmXKFUFJJ
GqRyK8kFg4Syi+T5QUL5A8mHUjlMsnOwUL4g4W9LUDlNMm+IUC7jsnrLEKHw7b+6YUOFMpPkhqFC
WaSuviAFnjvL3xwpCxrNNh4pC0rSDLLS80BahgwS/8EHewoThFkDySgZ8F2Ms78ueZpQhpE0SyWR
hLuFVOaTvCGjv00kX0vlDpK7ZcD3NEmVSSgvkayQwdvnJDsShfI9yWgZr13KLyxmzxDKVSTnpGIh
GZQklIUkb8rgbSuJWyolJPfIQOyPJM+ZhfIqyRsgvT1PArwtYxXGBbpvJZlHki/jjgISPhjBDG4n
eRLkO8/XcnfLEIC3Guuq5gmzXJLjIC96zHbI83QKX3V/YIEwu4nkWZAEj1mTPBuP4hXxgEXCbDLJ
EXk2XkFSJ5Uckt3yzHoPydOLhVKhfjkjT6Z/Jbl1iVA+IomQJ8ZWkqSlQuG3yLqfpTKGhPdTUYkn
eU2eJVeSfC4VB8keeWK8X/0KZrlciEmWyZPc2ySbb5ILMclIeV7rwYtgc5pciEl+kcp4kkvT5UJM
cjRdLsQkX0ilgGSvPGE9TPJMhlyISV4DCfM8/6s8MFJ8g2eVCeoH9Rt7kkL8TdD9325r9qSYpW05
yRb8jf3vL8PB4J5PBHsCgCf53rR0nTjNP0fiCQDeJ/EEAF+SHAwSSk9+temSysUky2U0EE2yRUYD
U0mMPeVODMn0nkLJI/lBKveRhMoA4EmSV2Ro8DeSf0jlE5ISGRoEcdX8vQwNQkgWydBgHMlGGRpM
JxkhQ4NsEpMMDTaS/CiVh0gulgHAUySvytDgHZJ/SuUzklIZGvTic4RPydBgAMliGRrEkRTI0CCJ
5GoZGqwlSZShwWaSn6TyKMklMgB4hqRahgbvk3wmlS9JymRo0I9DpVKGBpeTLJGhwRSSTTI0mEVy
jQwNbiGZIUOD7SRNUnmCZIAMAJ4lOSJDg49J6qTyNcluGRpcxBH2tAwNBpEslaFBAsmtMjSYQxIx
QCj5JEkDhFJE8rNUfqfeHRImlL+QvBYmz4Qkn0ulgWTPpfJMyLf2/eFSeSYkWSajjkSSzZfJMyHJ
SBl1bCIxy6jjDpJfpMKvj3WXyqjjJZKjMh75nOQLqXxPslfGI5fyvohnZDxyFclyGXVYSLbIeGQh
ybUy6thKYpFRRwnJr1L5I8llMup4lcQl45GvSL6Uyk8k+2Q8MpBT+5CMR64huUnGI8kkW2U8spTk
umFC2UEyc5hQ9pCckcpzJJcbhHKU5JhBKNy3VH8th8qvJHcNF8oQ3qbxx+FCuY4k7UqhzCXZJkka
CUNqkp0kI64SPr8heU8qL5D8KJXjJAeMQvmW5FWjUJpJ1o4QynC+xK50hFBGk0y8WigLSBZfLZRM
kj7XCKWY5OprhHIvSa1UXib5SSpvkTwaIZQfSKojhKK+MnOdDOpGTMR/ZTKoG0sy6VqhLCZZcq1Q
VpH0vU4oZSTXXCeUB0jel8oRkiapnCB5LFIoP5MciRRKT747bv31QhlJsvt6oUwgmTxKKMtJlo4S
yhqSfqOFso8kYrRQHiGZBLLb8+xk23llhkxQP/B+lk0kGbquzlcpnpQUaVtEsqZL23RPCj/wDVNl
Opn5aB/b5Z4UfuCdM7y81a3oaHtY1zOGdeHTtLwjOYgXlJEenaHlRR4FsZYuzqN47rm5tOdF6sPu
bD0me6Wr24xsyE7p3KbhQ58TOqX/v5oPO4Mn/tld2DP/KV3Y82HWid7pj3Eb4gq+S0W9qqbEVTWx
c3/Ivm972M4iC6TGS4W6rsZJh/HXT+bOb0y9bf3U47+qnfy1x/8r7ff/y9XNcknboZ4UftiDv9k8
8NP4mxL0v8WWX6xdTZOd//vK8H+B7SiPLT9wI+BPJLwi+UnXZvuf3Ht6Pvn/B7YjPCkjpO1fSSiF
tdfxf+b+1//m8v+X2/533q9b2qPnr0EcTAw+DtCcgQfjjYMkjDW4AB0i4Xbe/Z4MvpIHrQmS2bUP
zSDhoypRQSJOU/9NDxI+k1jTm4JEOKf+K5A+qlIKgssW3W+Zwe+CRBVmcTgek0TN+oS34pZEzeBb
kLmerG/o4WU2vUeHNuixtefW/TaD7kGbQbbHE0429mN6hnN8+9wZvvLjPp24rVwdUc/pxG3dfUnc
UqnjjOFTv7zYffgCWVcqoWzLtCDRVY/Q5ymphJMcDxK5GUj+LRU3c7ush8jtD8xtQQ/pw9xu6SFy
q6TPy1KJIvm4h8gtliS4p1BOM7eIniK3V5jbKqkYmFtRT5HbC/Q5IRUzSUNPkVsKyVC9UM4wt4l6
kdvbzG2TVCKY2916kdvr9PlcKukkLXqR22qSqF6CqCNtBgjfBP9PNbdesj5qbiC4CNG9R59PpE8+
yQ9yH2WrWrbeskvoE9Nb5Nag1lQqsVS29hbLSB19vustxnwrd2xH9RF9O4ldPr2PKNYdTOHXMnz7
zR6SdJA6z7MaygO/vQ1DZV+PG3RigKnj8VU5Olai7Xr9HR9YinyS76SyhqRfkFBuIxkix0AOSaxU
9pBMA/m9Z7g2yjlSyS8rWoNEIatILuwhyAsk4SBzPD6regiff1PZJM16sLS3S9KH5C05bhJIPpeK
heQ7SWaTNIM87NlSvq+XCPv+CQz6oJfPvIrPMOhM+BNttbwnQ9D2a5c42RpPkiyRA4E/p6JuKLKx
q0j44Ceb/wWSfdJHNaPjs57clAd+3IG++EfQeNkXg9kXeTpReS5IvXbKYzBw6HUXPrzucV4UJM4b
6ssUsmW7VpNskOQYSVGQ11blCdkXvdmun0uz/iTfSWIgiZbtOoAkSTblIJJUSZaQZICYPO36hF60
6zfAoC/0Pu3qTjPoGtM87XoU1U74H+2dCZwU1Z3Ha2agOFROxUENNqDNPVzacggCYit4AWKrgOAw
TAsGBoShFeIFuh3FxEVNOhHRgEdHEzR4dcArKqZXojEE3PZGiKQXjxgQ6QgobP/qfd9Q04MJ2U/W
Tdypz4f+zpf//9Wr9+ro6npV3frzMfveqD/UZS200D/j4Pe45r6h2ERKFHk7Lxfs7783ikrWFOnn
NvRheYV6UYP4Y23Cr+nKzzSf1+nKLyRbkCLNdLvj66NB9NEwRc6lW0ZKJiDnSn7C1n+T5Akit0pe
QBIltsdtH20uMX0UVB+1q9tHL04MOC9NrNVHGxzT+P7eGQXvFnru23kf6a7Il0hEUpx/iXxT+2jZ
xQHnvov/0X3EfjjE4fxEqVfTMX0kOmnVgVtfQdvwHoezO03T2Q9fUVOupl2vSRYhb0p+5N8P36f/
jtJutJO0Dg1YLu/tQHIa+2EnyXgiPSVTkSrJXP9+uJr9cK/6L1e3/y6ZEHCmTLD9Z85H36cDR2sm
b9FNW9SBJcXm7cabfcti35Uh33Y10uFMS/dK1GxXa+m+z1VUTyR73wanrtiKNJTsdHz9MpR+CSty
Hv1yjuQS5DzJvWxX35esJvJDSRpZItng367+yHbVVf3SoW6/nDE+4Jw13vaL17aebA3PiDppv8cW
yThmne/T3P+L5jRSnZ8hOovxPhLXtO1s2na2IpNYzvMl0xGd3zi/oG3jJL8mMlmyHlku0XN4h9m2
fUzbeqttXeq2bfq4gDNrnG1b/nN7a1rWscj3ud1r8wBWob5yr+EtjnmT86attLmNqt9FM9tJXBas
o6S1v82TaPMURS4nbbrkGuRyyfO02ft+pNeJPCbZgnhvctv967OE7fwMtXlI3TZfeVHAueqiWutT
Fxe0aNoyG+pK6SRb5A+OWc5D/avwcLsKJW0lzfxtG0fbxvlXobei5vnX59O0bbl/FT5YswrzfFjy
sX997mJ9DlbbQnXbtvTCgLPswlpt03rT3eg6FnrnCTXr7WPW21Gq5kva1kHSlAXoJDnS37YK2jZV
kbmk6TzPWYjMtZund2bjvTMT+aW3iyNPe7u4f701Yr2dpbYNr9u25y4IOC9e8M1s25ZIwNkaqdO2
b8T+1jjfrkO/oW3rfn7A6XV+rbZ9Y86nRo0NOGPH1mqbjpP6KPaa2qbxm0ttkT/RtiNVzT6ac6zk
UBZA9yA4bf3rrZK2VSpyBWkzJDcgsyX2ioL3nWjvEnlc8iGyWvIX/3GyAetN98EVDa3bturzAs6V
59m2FXzWChT5PmvpfsuG33PMZ9iukoTj+6w1gXM8b5efwfK8KJmPrJV819/uDbS7qU7R/khaK8mn
tq8kJ3KOd6TkTE7rjpVciEyUVPrP8R6k3Z+o3dm67b5qTMC5bkytdaqLG/rc9KJar4+nNSe/7zrc
Zq0WfMI6bS3Zg5RKGvvbNpa2XaRIlOaUS+YgupDgpFinyySvEHlA8ibykCTr314/Z3sdpLadeIDz
/9H58//Rtm37FjglHxadwirVlbeGt7JKH5bci6yU6DxOo0erJLrSemKRnTXXG/Qh1mlNvz8kCSCP
Snr4r1FcRZkditxC2h7JnchhWqZNrF9vAXNEGkv0eVZyukQfexfaPriNaxSv6xrF7+peo1g6Kv/+
P8r2Adv1MOpYabdeLVwwP9uGv6Dd3STPOuY8xptesecwWuyNrJNJko+QKZLP/et+OO1eokiEBt0j
qUA2SJK0+6eSp4n8QrIWaaKlzeRlh12ctQ3MAfVqtXtu3Xbfd27AeeDcgnb/P7h2suKcgLPynK9o
9zf4OPb42QFn1dm23d5xTMcwDRzozrmGuuZ2uy3SnLYNKqFTVOdpkh7+N9QB/rbFadvNivyYtNsl
9yM/tmd8att6ib2E6X3Jpr2E+Z5ElzBrjmNdadtMte3Sum1746yA885Ztm1vr3BK3vDunTjOpukP
XVFu8x3HDI9oBu0kMxw2JMl80iZLEqRdJllDWlKyjrSHJR+TlpK0pT2fSrSrKG23RJdxlVasfp5J
2mDJVaSFr6LfvEF2if3EukiynrTbJNpLNO6+RNKZfstcxaajtI0SXYNQWlZyM2kddC3mx6R1lTxO
Wh+JvdpbJdlDWkyiExWlXSMZzQH3ScnEEpP2gmQ+ab/xZk2ae03+5XnSmkneLeG2dMnhDUzaGEl7
hgzGSfTW5d2bLKkm7W7JAtKSkrtIe1jyGmkfSuwAxKeSL0nbLTmhoUkLXeuYy95KGyy5mNs1w5If
kLZQspy0RZJnGpqW3ib5C2mvShq4Ji0jCbgmbaM3a9ekHXWdNi3SOkjipHWVrCEtKllHWpXkY9Ji
ki6MUzwqCTUyaU9KxjQyaS9I/p20vZKlpLkL8i+rGpntrZlkK2kjJTtJGyPRTaaa2zjJOY05P5aM
b2zS7pZcwe2nSckjpP1B8ixpH0reamwq/VTStIlJK1uoTayJSQtJ+jYxaYMlFaTNl8wibaFEd7bq
xxgWSXaQlpbowK1Lca9Kmjc1kY2SY4hkJd2I5CT9mppZ75WMRVxd4JjV1AxJNpO81NSMUIyU7Glq
DioTJAMPMbfgeNMVh5gB2OXK/ZU/sucQc39Xd42ldcq/3GrfuFcdZmbtRdbkJWjLfHCYWepGOqC4
zcyy3apKuzQzXZWQXNLMl3Y1aW8qcgdpGyXr/Gl/Iq39DfmXJs1NWlAypLkv7eLmJm2aIvNIq5Ks
9Kf9lrRHFPmAtJQk0MKXNqiFSdulyEUtTNpeyWJ/2kOkDdU5yFrSwhK9R9WkfaulSbtJkf4tTdot
kln+tO+T9ntFHiQtI9nkT/uStLb6zNa2Fe8YklGtfGkzWpm0ckVuIi0qec6f9i5pDyqyi7SHJb1a
+9LObm3StisyrbVJy0mW+dOeIa2/Pnu8SdpgSYvDfWk9DjdpCxQZcbhJi0uu86fdRdpaRVaT9qpk
hz+t9REmraV+UL7nESatjWTaEb60m0i7SJH7SZsoec+fto+05Yoc3cakJSXnt/GlzW1j0j5Q5FbS
PpG87E/7iLTe+hG5RkeatJBk6JG+tPIjTdo8Ra4m7RrJL/1pr5P2vCI7SEtLepT6V1apSWuySH1Q
ynFUcq8/bQ1poxV5j7SIpFVbX1r7tibtDkUGtTVpd0tm+dOuJW2zIneSlpW86k97l7QuN2t7I61M
0v0oX9rAo0za5YpccJRJi0kW5eWWItJKjzFpqxUZeIxJe1ZyGZEinSbHibiSJ4iMkPyeyDkSvZF4
By7JMd/iwCU5k8ibkkuJbJQkiLT/fv7lUSJByWYi0yRfEqmSdG/HQUhyRjsOQpIriOyS3E5kr2QD
kaG6wrYbOVPS9lhze8sYydxj2Z0lS5HHJE+R9qREt6N7u4wGvAYjR0s05qa0DpLVROZJNiHXS/aR
tkgyvj2rXrIQ+UiyvL1J+1TidKDjF+dfuiLnSUZ0MGnjJPcTeUTyO+QpySekvSAZ2ZHDoK4EVCMd
Jbd3NGldJX8mskDS9jgjN0v6HWfSbpP8gMgHkmeRHZJ3Sdst6X88u4w+Z16CjJdce7xJmyzZSGS1
pHHQyBpJp6BJ+40kTqS9Pt2sRLpJfkdaH0m3Trx9SMYgt0su72TSlkh+S2S75DNkj6R1Z5NWrHsu
Z3bmMChJIBWSJ0i7TNKyC4caST/kZckFXUzaesljRLr8MP/yFtJXsou0AZILu7JnSRYid0qWdzVp
90icbmz+kq5IiT7ujOhm0ppKHiBSLlmPfFuynbTZklHdefuQzEc2SO7obtLekuwk0vtH+ZdjexgZ
KBncw6QNk9xF5A7JfyD3SrKk/UwysIzjjn69+YIy88HzEMlCIiMkd5fxjZuSV4jcKtlK5E5Jm54c
dyR9eprI+5JLiLTX7V9XEekm+RmRaZI0kTmSz4g8ImnRy0SekgzuRcdLxhEp0e10NxIZKrmPyJmS
9URuknxC5HbJMb05kZH0620ib0uiRNrqNw8XEukoWUmkXPIKkW9LdhN5UNKmj4k8Jhnehy1ecgmR
PZJbiPRfqg4hcqrkDSILJJ8RuVnSoS+bi2RwXxPZIJlOpOVd6hAiR0tSRC6SrCdSIdGzgt5phOSY
E0zk55KRRD6QRInskPyASO+71SFEBko2Epkn2U3keknnE9lPJcNPNJGXJbOJNPmJOoRIa8nTREZL
3iAyXuKG2MglHUImcq9kFJHNkulEPpIsIdJlmTqESF/JFiKXS3TTtyLfkZSdxAFSMpLIGsmVRIqW
q0OIHCJ5gcgIyUYi50kO7cf+I+nMd9neKYkQeVMym8j7kmVE2mu0/2ki3SQfEpkmcfuz/0hO6M/+
IxlF5CnJNUR2SZYQKdFl6ZeIDJVsIXKmd8F6APuPpGwA+49kApHfS64k8rYkSaTtfeoQIh0l24iU
Sw4dyP4jGTCQ/UcSIfKY5AYi2yXLiOyRvEqk//3qECKnSkpPZv+RnHAy+49kMpG1kmuIbJCsINIy
qQ4hcrQkR+QiSatB7D+SIYPYfyQTiPxcsojIB5IkkR2S14j01u1324gMlLQbzP4jGTCY/Ucylcjz
khuIvCx5lEgT3Wv8KpHWki+IjJaUnsL+Iwmfwv4jmUzkXsliIpslK4h8JHmLSJcH1SFE+kqOG8L+
IxkyhP1HUkVktWQRkTWSVUSKdGfma0QOkRQPZf+RtBvK/iM5i0ilZCqRmZIEkQWSR4ncLNlE5C7J
F0R+Kuk6jGWThIexbJJqIv8pWUzkPcmzRLZL3iKyR9L4VBM57OfqkFNN5EjJGCJdJFVE+kqWEhkm
WUVkhCRL5EJJ8XATmSTpNdxEqiRnEZkrmU/kBkmCyM2SF4ebC8ZLJG8NN+/1y71Zn2YiTTXOUZqX
/HmwM0XXNs4l0lKRSiJzFFlKpFSRR4ksVGRDXq7VVWZNY643AwLeJZ0L8i8RG6m5j7XWFxdqlt7I
gG4a9y4DSvQmqUs5utnC0b6jT15vSFZSxktTQd99rD9Z4JQs9a4GtbLXhFrZwT9dEQ/lRd9n9IWi
GqxWFd/VRfPfFpnBiu9JdEtMqU3TUO+ZtophDC88pLnN5XrvE5KF3B7qfbfEItK8wUzVPMwujn0u
6Vs0VjcaFOkm7S22iiLyri7RfWz7n+I/iR55WDkaZbvSRp50TI8/r8iLiEZNi3SLUc1tqt4IjWO+
E9LpjGjssahH0QGebai9nA3tcr7/z7acI8wdvLWeBdGtgOuUsIDFTxRzxCm1kRfy/94p+l+c1zan
RN8g6ITszPSHbs/w7sNMMLMP8lKkrbi5jWx2zLflb/bu63HM40Tb7di3d1nLG+VRxzQsqHMdT7ps
tnXqDxX5dTFFtP9dJ9EIuer0bnTWg0pH2IieGfnl/u2VZ2162FnqDz1I94hksuN7qMX/XJF3S6n9
QxvRyfqPMDLVG6dt4HuSzncv9jP2//THhPy/qLL1RMjZDjvb4ry8Yoe4JjQwm4iX5l+GmjG52+lf
7wd57qHnvdFnjUnXPCKwf53ZHyHw/tA6+5M3MkfJL7XOXmKeXkQ7r9q1U2Lv1dMXYTltWGfesKWG
tZof9DpbrgYeXcRvv0nOZZ19LJnFOvMi/1Z7ne3vg0vsXPWH9t/DbR/o6K2bmbwBurv390Ht/b7Y
7vebbMY/er//oU2byK6uO+O8uzkk2kyLvn2g/f79/GKOt4u512Exl9o07VM6oHsHWA071jzQ3oZZ
68GRmoONDi1Fxx+oniNKDiulFm0tRbaX66f6qX6qn+qn+ql+qp/qp/qpfqqf6qf6af+0eCSXKc40
bAGHwH1MNr/Q7fRccHWDwv/7Z5pmsXwrv2L5C6dNew8uz05D3gzv8edbL/z/ryr3VTzY+v/Zpm/a
9vCvvn6/7vXxdbdz1v/R9raY9i3+F99f/ydT8Vf8ralk6993/Px7p1F/O+UfOtnjxMEeL76OyX+l
t+SNv3+5vo71Z5dxboFfV+A/Gl5Uy5MFvrLAny3wV3H7PbHL2pkWHYavWm++u78tfuNr3qhRzTer
BeDOvfv0Sz7ONmZsR0M+n29ofwFgCAWb4mNPMwXsLyuUwhLobDL12X6+caih/R2URtD+5ELpu0W1
/r/fWuON7ez42rUmBfXlT1u85T/jJcYHcNuObfhZz5n4roJ4/fT1TFvf6XTA/8+y3eage6xhGxiE
IRiGERiFMRiHCZiEKZiGGZiFOegGqB8GYQiGYQRGYQzGYQImYQqmYQZmYQ667akfBmEIhmEERmEM
xmECJmEKpmEGZmEOuh2oHwZhCIZhBEZhDMZhAiZhCqZhBmZhDrodqR8GYQiGYQRGYQzGYQImYQqm
YQZmYQ66x1E/DMIQDMMIjMIYjMMETMIUTMMMzMIcdI+nfhiEIRiGERiFMRiHCZiEKZiGGZiFOegG
qR8GYQiGYQRGYQzGYQImYQqmYQZmYQ66nagfBmEIhmEERmEMxmECJmEKpmEGZmEOup2pHwZhCIZh
BEZhDMZhAiZhCqZhBmZhDrpdqB8GYQiGYQRGYQzGYQImYQqmYQZmYQ66XakfBmEIhmEERmEMxmEC
JmEKpmEGZmEOut2oHwZhCIZhBEZhDMZhAiZhCqZhBmZhDrrdqR8GYQiGYQRGYQzGYQImYQqmYQZm
YQ66PagfBmEIhmEERmEMxmECJmEKpmEGZmEOumXUD4MwBMMwAqMwBuMwAZMwBdMwA7MwB92e1A+D
MATDMAKjMAbjMAGTMAXTMAOzMAfdXtQPgzAEwzACozAG4zABkzAF0zADszAH3d7UD4MwBMMwAqMw
BuMwAZMwBdMwA7MwB90+1A+DMATDMAKjMAbjMAGTMAXTMAOzMAfdvtQPgzAEwzACozAG4zABkzAF
0zADszAH3ROoHwZhCIZhBEZhDMZhAiZhCqZhBmZhDronUj8MwhAMwwiMwhiMwwRMwhRMwwzMwhx0
Q9QPgzAEwzACozAG4zABkzAF0zADszAH3ZOoHwZhCIZhBEZhDMZhAiZhCqZhBmZhDrr9qB8GYQiG
YQRGYQzGYQImYQqmYQZmYQ66/akfBmEIhmEERmEMxmECJmEKpmEGZmEOugOoHwZhCIZhBEZhDMZh
AiZhCqZhBmZhDroDqR8GYQiGYQRGYQzGYQImYQqmYQZmYQ66J1M/DMIQDMMIjMIYjMMETMIUTMMM
zMIcdAdRPwzCEAzDCIzCGIzDBEzCFEzDDMzCHHQHUz8MwhAMwwiMwhiMwwRMwhRMwwzMwhx0T6F+
GIQhGIYRGIUxGIcJmIQpmIYZmIU56A6hfhiEIRiGERiFMRiHCZiEKZiGGZiFOejyI5dtYBCGYBhG
YBTGYBwmYBKmYBpmYBbmoDuM+mEQhmAYRmAUxmAcJmASpmAaZmAW5qB7KvXDIAzBMIzAKIzBOEzA
JEzBNMzALMxBl2+hagODMATDMAKjMAbjMAGTMAXTMAOzMAfd06gfBmEIhmEERmEMxmECJmEKpmEG
ZmEOumHqh0EYgmEYgVEYg3GYgEmYgmmYgVmYg+7p1A+DMATDMAKjMAbjMAGTMAXTMAOzMAfdM6gf
BmEIhmEERmEMxmECJmEKpmEGZmEOuiOoHwZhCIZhBEZhDMZhAiZhCqZhBmZhDrrcH9EGBmEIhmEE
RmEMxuG2nQe+3mun0089dUCg8+nnnN8lcEJZ/7I+TsX08qpLA7HK2XOmzawK9C07qaxXoPPk2eVV
FVMr5/ScXTm9snxO5aS+JwX6nNg71Ld/F8cpmzN1TvXs6vLJTlnVzOrKskur5pZNnjtt+pQe06Y4
nk0tnzPVKZsyr2rOvBmG1bNNhHpqyaR8LF9PuRL5a9b0aqdsWtW0/Gt15ZX512he8rGZU8qry52y
yqmTorPLZ1ROmjpl9n7Lz7SiYlLllRWVs6on5RdveqWZx6Ty2bPL5zllFdUzZ8/JL47BZRX5opqd
aszP2VvO8hnTKvKzmVntvZjFMFVOnpMvUzFzxozKquq/2sEHOWn8RmMuxTjDKDU8riC/cNBZ32OQ
27dvpi1vx5EsRzEAZceFGju1p84sgy1vx5ksV03aX2+xr7wd/+nFvG15O25lacep7FT4tIgeKNrn
W347TmS5u1Ht5S8uoH6YaK+vvB2Hstzm7F/+hk7d9o/1tc1bHsa9LO24V2H/2fZPpPww+/+Mo1na
cTeVb3qA8nq8Spl2nM+OI1r+rfVfUVB+HeUsn+tWO79FAasKytv7syyDN9ausYVTe6ouKG/HPS2b
/Y3ln0952//rKGf5dMsDL7+dFhaU/94WtxZXlNbOL6x/cUH5fl+6tVgdrZ1fuP0sKSi/oqJRLT4+
+a/Xr2eH1Ud2+7LjxDe+ZsoHCvIL619F/bb8A5R/gPKF/VVY/lcF5VdRftVBlk8XlH+J8i9RvjC/
0F8uKL+O8usoX1pQoHB59Ai06ytvxzm3vsOBgxVj+93Ozs5nc0H9WzdSfiPtLzhgNS5gtqC8HXd3
Npny24746+X/XFDevm9v23lw638n/2fLt8h1ggdXfjf19yr4f1t+WMH/Fx2AJU7daQzlSwr6r/D4
/9/LA5rJmP4HAA==
#endif

#ifdef PARAM
PARAM(BITSTREAM_SIZE, 523928)
#endif
