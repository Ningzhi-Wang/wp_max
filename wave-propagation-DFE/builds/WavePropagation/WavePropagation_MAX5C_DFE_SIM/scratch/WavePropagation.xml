<?xml version="1.0" encoding="UTF-8" standalone="no"?><maxfile format-version="20120200" header="WavePropagation.h" name="WavePropagation"><constant name="PCIE_ALIGNMENT" type="long" value="16"/><enginemode name="default"><function name="WavePropagation" return-value="void"><scalar desc="Interface Parameter &quot;dtdx2&quot;." direction="Input" name="param_dtdx2" type="float"/><scalar desc="Interface Parameter &quot;nx&quot;." direction="Input" name="param_nx" type="int32_t"/><scalar desc="Interface Parameter &quot;nz&quot;." direction="Input" name="param_nz" type="int32_t"/><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes." direction="Input" name="instream_absorb" size="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 8)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 8)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 8))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 8)"><userParam value="param_nz"/><constantValue value="8"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes." direction="Input" name="instream_curr" size="( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 2)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 2)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 2))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 2)"><userParam value="param_nz"/><constantValue value="2"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) bytes." direction="Input" name="instream_density" size="( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 2)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 2)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 2)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 2))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 2)"><userParam value="param_nz"/><constantValue value="2"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes." direction="Input" name="instream_prev" size="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 8)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 8)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 8))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 8)"><userParam value="param_nz"/><constantValue value="8"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes." direction="Input" name="instream_velocity" size="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 8)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 8)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 8))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 8)"><userParam value="param_nz"/><constantValue value="8"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array><array desc="The stream should be of size ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) bytes." direction="Output" name="outstream_nxt" size="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)" transpose="true" type="float"><dimension index="0"><length><functionCall><numBinaryOperator operator="/" value="( ( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4) / 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4) * 4)"><functionCall><numBinaryOperator operator="*" value="( ( ( ( param_nx * ( param_nz - 8)) / 4) + 1) * 4)"><functionCall><numBinaryOperator operator="+" value="( ( ( param_nx * ( param_nz - 8)) / 4) + 1)"><functionCall><numBinaryOperator operator="/" value="( ( param_nx * ( param_nz - 8)) / 4)"><functionCall><numBinaryOperator operator="*" value="( param_nx * ( param_nz - 8))"><userParam value="param_nx"/><functionCall><numBinaryOperator operator="-" value="( param_nz - 8)"><userParam value="param_nz"/><constantValue value="8"/></numBinaryOperator></functionCall></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="1"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall><constantValue value="4"/></numBinaryOperator></functionCall></length></dimension></array></function></enginemode></maxfile>